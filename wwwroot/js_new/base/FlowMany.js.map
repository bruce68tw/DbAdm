{"version":3,"file":"FlowMany.js","sourceRoot":"","sources":["../../../base/FlowMany.ts"],"names":[],"mappings":"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","sourcesContent":["import EstrMouse from \"./EstrMouse\";\r\nimport EstrNodeType from \"./EstrNodeType\";\r\nimport FlowView from \"./FlowView\";\r\nimport _Form from \"./_Form\";\r\nimport _ISelect from \"./_ISelect\";\r\nimport _IText from \"./_IText\";\r\nimport _Modal from \"./_Modal\";\r\nimport _Obj from \"./_Obj\";\r\nimport _Str from \"./_Str\";\r\nimport _Tool from \"./_Tool\";\r\nimport EditMany from \"./EditMany\";\r\n\r\n// 假設 FlowNode 和 FlowLine 是 FlowView 使用的類型，我們需要定義它們的結構或使用 any/unknown\r\n// 由於原始 JS 中它們只在類型註解中使用，這裡定義為 interface 或 type 以保持清晰\r\ninterface FlowNode {\r\n    getId(): string;\r\n    getLines(): FlowLine[];\r\n    getNodeType(): string;\r\n    getName(): string;\r\n    setName(name: string, updateUI: boolean): void;\r\n}\r\n\r\ninterface FlowLine {\r\n    getId(): string;\r\n    fromNode: FlowNode;\r\n    toNode: FlowNode;\r\n    getFromType(): string;\r\n    setLabel(label: string): void;\r\n    setFromType(type: string): void;\r\n}\r\n\r\n/**\r\n * FlowForm -> FlowMany\r\n * 處理 flow UI 元素和多筆資料(mNode, mLine)之間的轉換\r\n * workflow component\r\n * param areaId {string} editor work area id\r\n * param mNode {EditMany}\r\n * param mLine {EditMany}\r\n */\r\nexport default class FlowMany {\r\n\r\n    //#region constant\r\n    //and/or seperator for line condition\r\n    //js only replace first found, so use regular, value is same to code.type=AndOr\r\n    private readonly OrSep: string = '{O}';\r\n    private readonly AndSep: string = '{A}';\r\n    private readonly ColSep: string = ',';\r\n\r\n    //html filter/class\r\n    //this.NodeFilter = '.xf-node';     //for find node object\r\n    private readonly FtMenu: string = '.xf-menu';           //menu for node/line property\r\n    //this.EpFilter = '.xf-ep';         //??node end point\r\n    private readonly FtStartNode: string = '.xf-start';     //start node class\r\n    //this.EndNodeCls = 'xf-end';       //??end node class\r\n    //this.AutoNodeCls = 'xf-auto-node';      //auto node class\r\n\r\n    //connection(line) style: start, agree, disagree\r\n    private readonly InitLineCfg = { stroke: 'blue', strokeWidth: 2 };  //??initial\r\n    //this.OkLineCfg = { stroke: 'green', strokeWidth: 2 };   //??ok\r\n    //this.DenyLineCfg = { stroke: 'red', strokeWidth: 2 };   //??deny(reject)\r\n\r\n    //#endregion\r\n\r\n    //是否可編輯\r\n    private isEdit: boolean = false;\r\n\r\n    //#region variables\r\n    //editMany\r\n    private mNode: EditMany;\r\n    private mLine: EditMany;\r\n\r\n    //this.popupMenu = $('.xf-menu');\r\n    //this.divFlowBox = $('#' + areaId);\t//??\r\n    private divLinesBox: JQuery<HTMLElement>;       //??hidden\r\n    private eformNodes: JQuery<HTMLElement>;           //nodes edit form for editMany\r\n    private eformLines: JQuery<HTMLElement>;           //lines edit form for editMany\r\n    private modalNodeProp: JQuery<HTMLElement>;\r\n    private modalLineProp: JQuery<HTMLElement>;\r\n    private eformNodeProp: JQuery<HTMLElement>;   //modalNodeProp form\r\n    private tbodyLineCond: JQuery<HTMLElement>;  //modalLineProp tbody for line conds\r\n\r\n    //node/line template        \r\n    private tplNode: string;\r\n    private tplLine: string;\r\n    private tplLineCond: string;\r\n\r\n    //now selected type & element\r\n    private nowIsNode: boolean = false;     //true:node, false:line\r\n    private nowFlowItem: FlowNode | FlowLine | null = null;    //now selected FlowNode/FlowLine\r\n\r\n    private condOpExprs: RegExp[] = [];   //condition op regular expression\r\n    private condOpShows: string[] = [];   //condition op show text\r\n\r\n    private flowView: FlowView;\r\n    //#endregion\r\n\r\n    constructor(areaId: string, mNode: EditMany, mLine: EditMany) {\r\n\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        //for FlowLine, 對應 XpCode.Type=LineOp, 數對內容為:儲存值/顯示文字(label)\r\n        const condOpMaps: string[] = [\r\n            this.OrSep, ') || (',  \t//or, 會自動加上外括號\r\n            this.AndSep, ' && ',    //and\r\n            ',EQ,', '=',\r\n            ',NEQ,', '!=',\r\n            ',GT,', '>',\r\n            ',GE,', '>=',\r\n            ',ST,', '<',\r\n            ',SE,', '<=',\r\n        ];\r\n        \r\n        this.mNode = mNode;\r\n        this.mLine = mLine;\r\n\r\n        // JQuery 選擇器初始化\r\n        this.divLinesBox = $('#divLinesBox');\r\n        this.eformNodes = $('#eformNodes');\r\n        this.eformLines = $('#eformLines');\r\n        this.modalNodeProp = $('#modalNodeProp');\r\n        this.modalLineProp = $('#modalLineProp');\r\n        this.eformNodeProp = this.modalNodeProp.find('form');\r\n        this.tbodyLineCond = this.modalLineProp.find('tbody');\r\n\r\n        // template 初始化\r\n        this.tplNode = $('#tplNode').html();\r\n        this.tplLine = $('#tplLine').html();\r\n        this.tplLineCond = $('#tplLineCond').html();\r\n\r\n        let j = 0;\r\n        for (let i = 0; i < condOpMaps.length; i = i + 2) {\r\n            this.condOpExprs[j] = new RegExp(condOpMaps[i], 'g');\t//for find/replace\r\n            this.condOpShows[j] = condOpMaps[i + 1];\r\n            j++;\r\n        }\r\n\r\n        //set instance first\r\n        const flowView = new FlowView(areaId);\r\n        flowView.fnMoveNode = (node, x, y) => this.fnMoveNode(node as FlowNode, x, y);\r\n        flowView.fnAfterAddLine = (json) => this.fnAfterAddLine(json);\r\n        flowView.fnShowMenu = (event, isNode, flowItem) => this.fnShowMenu(event, isNode, flowItem as FlowNode | FlowLine);\r\n        this.flowView = flowView;\r\n        \r\n        //set event\r\n        this._setFlowEvent();\r\n    }\r\n\r\n    fnMoveNode(node: FlowNode, x: number, y: number): void {\r\n        const rowBox = this.mNode.idToRowBox(node.getId());\r\n        _Form.loadRow(rowBox, { PosX: Math.floor(x), PosY: Math.floor(y) });    //座標取整數\r\n    }\r\n\r\n    fnAfterAddLine(json: any): void {\r\n        this.mLine.addRow(json, null, json.Id);   //不產生新Id, FlowLine已經產生\r\n    }\r\n\r\n    /**\r\n     * on show right menu\r\n     * param event {JQuery.ContextMenuEvent} \r\n     * param isNode {boolean} \r\n     * param flowItem {FlowNode/FlowLine} \r\n     */\r\n    fnShowMenu(event: JQuery.ContextMenuEvent, isNode: boolean, flowItem: FlowNode | FlowLine): void {\r\n        //set instance variables\r\n        this.nowIsNode = isNode;\r\n        this.nowFlowItem = flowItem;\r\n\r\n        //一般節點才需要設定屬性\r\n        const canEdit = isNode\r\n            ? (this.isEdit && (flowItem as FlowNode).getNodeType() == EstrNodeType.Node)\r\n            : this.isEdit;\r\n\r\n        //html 不會自動處理自製功能表狀態, 自行配合 css style\r\n        const css = 'off';\r\n        const menu = $(this.FtMenu);\r\n        if (canEdit) {\r\n            menu.find('.xd-edit').removeClass(css);\r\n            menu.find('.xd-delete').removeClass(css);\r\n        } else {\r\n            menu.find('.xd-edit').addClass(css);\r\n            menu.find('.xd-delete').addClass(css);\r\n        }\r\n\r\n        // Show contextmenu\r\n        menu.finish()\r\n            .toggle(100)\r\n            .css({\r\n                position: 'fixed',  //使用 fixed 定位\r\n                left: event.clientX + 'px',\r\n                top: event.clientY + 'px',\r\n            });\r\n    }\r\n\r\n    //清除UI & flow元件\r\n    reset(): void {\r\n        this.flowView.reset();\r\n    }\r\n\r\n\t//set editable or not\r\n    setEdit(status: boolean): void {\r\n        this.isEdit = status;\r\n        this.flowView.setEdit(status);\r\n    }\r\n\r\n    /**\r\n     * set flow events:\r\n     * 1.line right click to show context menu\r\n     * 2.mouse down to hide context menu\r\n     */\r\n    private _setFlowEvent(): void {\r\n\r\n        //hide context menu\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        const me = this;\r\n        $(document).on(EstrMouse.MouseDown, function (e: JQuery.MouseDownEvent) {\r\n            //if (_obj.isShow(me.popupMenu))\r\n            //    me.popupMenu.hide(100);\r\n            \r\n            //\"this\" is not work here !!\r\n            const filter = me.FtMenu;\r\n            if (!$(e.target).parents(filter).length > 0)\r\n                _Obj.hide($(filter));            \r\n        });\r\n    }\r\n\r\n    /**\r\n     * load nodes into UI\r\n     * param rows {any[]} 後端傳回的完整json\r\n     */\r\n    loadNodes(rows: any[]): void {\r\n        //EditMany load rows by rowsBox\r\n        this.mNode.loadRowsByRsb(rows, true);\r\n\t\t\r\n\t\t//flow loadNodes\r\n        this.flowView.loadNodes(rows);\r\n    }\r\n\r\n    /**\r\n     * load nodes into UI(hide)\r\n     * param rows {any[]} line rows\r\n     */\r\n    loadLines(rows: any[]): void {\r\n        this.mLine.loadRowsByRsb(rows, true);\r\n\r\n        //set label\r\n        if (rows != null) {\r\n            for (let i = 0; i < rows.length; i++) {\r\n                rows[i].Label = this._condStrToLabel(rows[i].CondStr);\r\n            }\r\n        }\r\n        this.flowView.loadLines(rows);\r\n    }\r\n\r\n    //#region node function\r\n\r\n    /**\r\n     * add new node\r\n     * param nodeType {string}\r\n     * param name {string} only for normalType node\r\n     */ \r\n    addNode(nodeType: string, name?: string): void {\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        let nodeName: string = '';\r\n        if (nodeType == EstrNodeType.Start) {\r\n            nodeName = 'S';\r\n        } else if (nodeType == EstrNodeType.End) {\r\n            nodeName = 'E';\r\n        } else {\r\n            nodeName = '節點-' + this.flowView.getNewNodeId();\r\n        }\r\n\r\n        //mNode新筆一筆資料, 會產生新id\r\n        const json = {\r\n            Name: nodeName,\r\n            NodeType: nodeType,\r\n            PosX: 100,\r\n            PosY: 100,\r\n        };\r\n        const row = this.mNode.addRow(json);  //會產生id\r\n        //row.Name += \"-\" + row.Id;\r\n\r\n\t\t//flow add node\r\n\t\tthis.flowView.addNode(row);\r\n    }\r\n\r\n    /**\r\n     * node id to node object\r\n    _idToNode(id) {\r\n        return this.divFlowBox.find('.xf-node [value=' + id + ']').closest('.xf-node');\r\n    }\r\n     */\r\n\r\n    //... 註解掉的內部方法，不需轉換\r\n\r\n    deleteNode(node: FlowNode): void {\r\n        //delete mNode\r\n        this.mNode.deleteRow(node.getId());\r\n\r\n        //delete mLine\r\n        node.getLines().forEach(line => {\r\n            this.mLine.deleteRow(line.getId());\r\n        });\r\n\r\n        //delete flowNode(自動刪除相關流程線) \r\n        this.flowView.deleteNode();\r\n    }\r\n    //#endregion (node function)\r\n\r\n    //#region line function\r\n\r\n    //... 註解掉的內部方法，不需轉換\r\n\r\n    //delete line without warning msg\r\n    deleteLine(line: FlowLine): void {\r\n        //delete mLine\r\n        this.mLine.deleteRow(line.getId());\r\n\r\n        //delete flowLine\r\n        this.flowView.deleteLine(line);\r\n    }\r\n\r\n    //... 註解掉的內部方法，不需轉換\r\n    //#endregion (line function)\r\n\r\n    //將Db的條件內容轉換為顯示內容\r\n    private _condStrToLabel(str: string): string {\r\n        if (_Str.isEmpty(str))\r\n            return '';\r\n\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        let hasOr = str.indexOf(this.OrSep) > 0;    //先判斷\r\n        for (let i = 0; i < this.condOpExprs.length; i++)\r\n            str = str.replace(this.condOpExprs[i], this.condOpShows[i]);\r\n        if (hasOr)\r\n            str = '(' + str + ')';\r\n        return str;\r\n    }\r\n\r\n    //convert condStr to List<Cond> for 顯示編輯畫面\r\n    private _condStrToList(str: string): any[] | null {\r\n        if (_Str.isEmpty(str))\r\n            return null;\r\n\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        const orList = str.split(this.OrSep);\r\n        const orLen = orList.length;\r\n        const hasOr = (orLen > 1);\r\n        const result: any[] = [];\r\n        let ary = 0;\r\n        for (let i = 0; i < orLen; i++) {\r\n            const andList = orList[i].split(this.AndSep);\r\n            for (let j = 0; j < andList.length; j++) {\r\n                const cols = andList[j].split(this.ColSep);\r\n                result[ary] = {\r\n                    //AndOr: hasOr ? 'O' : 'A',\r\n                    AndOr: hasOr ? this.OrSep : this.AndSep,\r\n                    Fid: cols[0],\r\n                    Op: cols[1],\r\n                    Value: cols[2],\r\n                };\r\n                ary++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //編輯畫面讀取的是 condStr, flowLine顯示的是 label\r\n    //get line condition string\r\n    private _getCondStr(): string {\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        const me = this;\r\n        let condStr = '';\r\n        this.tbodyLineCond.find('tr').each(function (idx) {\r\n            const tr = $(this);\r\n            const str = (idx == 0 ? '' : _ISelect.get('AndOr', tr)) +\r\n                _IText.get('Fid', tr) + me.ColSep +\r\n                _ISelect.get('Op', tr) + me.ColSep +\r\n                _IText.get('Value', tr);\r\n            condStr += str;\r\n        });\r\n        return condStr;\r\n    }\r\n\r\n    showNodeProp(node: FlowNode): void {\r\n        //var node = this._elmToNode(this.nowFlowItem);\r\n        //var row = this._boxGetValues(node, ['NodeType', 'Name', 'SignerType', 'SignerValue']);\r\n        //var id = node.getId();\r\n        const rowBox = this.mNode.idToRowBox(node.getId());\r\n        _Form.loadRow(this.modalNodeProp, _Form.toRow(rowBox));\r\n\r\n        //show modal\r\n        _Modal.showO(this.modalNodeProp);   //.modal('show');\r\n    }\r\n\r\n    //param line {FlowLine} flow line \r\n    showLineProp(line: FlowLine): void {\r\n        //debugger;\r\n        //var line = conn.getParameters();   //line model\r\n        //var line = this._connToLine(conn);\r\n        //var lineType = line.LineType;\r\n\r\n        const rowBox = this.mLine.idToRowBox(line.getId());\r\n\t\t\r\n        //show fields\r\n        //_iradio.set('LineType', lineType, form);\r\n        //this.onChangeLineType(lineType); //switch input\r\n        const form = this.modalLineProp.find('form');\r\n        // 假設 _IRead 是類似 _IText 的輸入控制項\r\n        // 如果沒有 _IRead，則假設它是 _IText 的一個唯讀版本，這裡使用 _IText\r\n        _IText.set('FromNodeName', line.fromNode.getName(), form);\r\n        _IText.set('ToNodeName', line.toNode.getName(), form);\r\n        _ISelect.set('FromType', line.getFromType(), form);\r\n        _IText.set('Sort', _IText.get('Sort', rowBox), form);\r\n\r\n        //show modal\r\n        _Modal.showO(this.modalLineProp);\r\n\r\n        //if (!this.isLineCondMode(lineType))\r\n        //    line.CondStr = '';\r\n\r\n        //load line conditions rows\r\n        this.tbodyLineCond.empty();\r\n        const condStr = _IText.get('CondStr', rowBox)\r\n        const condList = this._condStrToList(condStr);\r\n        if (condList != null) {\r\n            for (let i = 0; i < condList.length; i++) {\r\n                //var newCond = $(this.tplLineCond); // 原始 js 少了 mustache render\r\n                //這裡修正為使用 Mustache.render\r\n                const newCond = $(Mustache.render(this.tplLineCond, condList[i]));\r\n                _Form.loadRow(newCond, condList[i]);\r\n                this.tbodyLineCond.append(newCond);\r\n            }\r\n        }\r\n    }\r\n\r\n    //... 註解掉的內部方法，不需轉換\r\n\r\n    onAddNode(nodeType: string): void {\r\n        if (nodeType == EstrNodeType.Start && this.flowView.hasStartNode()) {\r\n            _Tool.msg('起始節點已經存在，不可再新增。');\r\n            return;\r\n        }\r\n\r\n        //add node\r\n        this.addNode(nodeType);\r\n    }\r\n\r\n    //#region events\r\n\r\n    //... 註解掉的內部方法，不需轉換\r\n\r\n    private _menuStatus(me: HTMLElement): boolean {\r\n        return !me.classList.contains('off');\r\n    }\r\n\r\n    //context menu event\r\n    onMenuEdit(me: HTMLElement): void {\r\n        if (!this._menuStatus(me)) return;\r\n\r\n        //由於 nowFlowItem 被定義為 FlowNode | FlowLine | null，這裡需要斷言\r\n        if (this.nowIsNode)\r\n            this.showNodeProp(this.nowFlowItem as FlowNode);\r\n        else\r\n            this.showLineProp(this.nowFlowItem as FlowLine);\r\n    }\r\n\r\n    onMenuDelete(me: HTMLElement): void {\r\n        if (!this._menuStatus(me)) return;\r\n\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        const instance = this; // 將 this 賦值給 instance\r\n        if (instance.nowIsNode) {\r\n            _Tool.ans('是否確定刪除這個節點和流程線?', function () {\r\n                // 回呼函式中 this 會改變，使用 instance \r\n                instance.deleteNode(instance.nowFlowItem as FlowNode);\r\n            });\r\n        } else {\r\n            _Tool.ans('是否確定刪除這一條流程線?', function () {\r\n                // 回呼函式中 this 會改變，使用 instance\r\n                instance.deleteLine(instance.nowFlowItem as FlowLine);\r\n            });\r\n        }\r\n    }\r\n\r\n    onMenuView(me: HTMLElement): void {\r\n        //todo\r\n    }\r\n\r\n    //onclick add line condition\r\n    onAddLineCond(): void {\r\n        //變數宣告 var 改用 let, const (這裡針對區域變數)\r\n        const row = {\r\n            AndOr: this.AndSep,\r\n            Op: 'eq',\r\n        };\r\n        const cond = $(Mustache.render(this.tplLineCond, row));\r\n        _Form.loadRow(cond, row);        //row objec to UI\r\n        this.tbodyLineCond.append(cond);\r\n    }\r\n\r\n    onDeleteLineCond(btn: HTMLElement): void {\r\n        $(btn).closest('tr').remove();\r\n    }\r\n\r\n    //node prop onclick ok\r\n    onModalNodeOk(): void {\r\n        //check input\r\n\r\n        //set new value\r\n        const row = _Form.toRow(this.eformNodeProp);\r\n\r\n        //update node display name\r\n        const node = this.nowFlowItem as FlowNode; // 斷言為 FlowNode\r\n        const rowBox = this.mNode.idToRowBox(node.getId());\r\n        const oldName = _IText.get('Name', rowBox);   //get before loadRow()\r\n        _Form.loadRow(rowBox, row);\r\n\r\n        if (oldName != row.Name)\r\n            node.setName(row.Name, true);\r\n\r\n        //hide modal\r\n        _Modal.hideO(this.modalNodeProp);\r\n\r\n        //... 註解掉的程式碼\r\n    }\r\n\r\n    //line prop click ok\r\n    onModalLineOk(): void {\r\n        //check input\r\n\t\t//var form = this.modalLineProp;\r\n\r\n        //update mLine\r\n        const modal = this.modalLineProp;\r\n        const row = {\r\n            CondStr: this._getCondStr(),\r\n            Sort: _IText.get('Sort', modal),\r\n            FromType: _ISelect.get('FromType', modal),\r\n        };\r\n        const line = this.nowFlowItem as FlowLine; // 斷言為 FlowLine\r\n        const rowBox = this.mLine.idToRowBox(line.getId());\r\n        _Form.loadRow(rowBox, row);\r\n\t\t\r\n\t\t//update flowLine\r\n        line.setLabel(this._condStrToLabel(row.CondStr));\r\n        line.setFromType(row.FromType);\r\n\t\t\r\n        //hide modal\r\n        _Modal.hideO(modal);\r\n    }\r\n    //#endregion (events)\r\n\r\n\t//call last\r\n    //this._init();\r\n\r\n}"]}