{"version":3,"file":"_Form.js","sourceRoot":"","sources":["../../../base/_Form.ts"],"names":[],"mappings":"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","sourcesContent":["import _Btn from \"./_Btn\";\r\nimport _ICheck from \"./_ICheck\";\r\nimport _IDate from \"./_IDate\";\r\nimport _Input from \"./_Input\";\r\nimport _IRadio from \"./_IRadio\";\r\nimport _ISelect from \"./_ISelect\";\r\nimport _IText from \"./_IText\";\r\nimport _ITextarea from \"./_ITextarea\";\r\nimport _Obj from \"./_Obj\";\r\n\r\n// 假設這些在其他文件中定義，且因為它們只出現在註釋掉的舊代碼中，我們暫時不引入它們，但如果它們在未註釋的代碼中被需要，則應該引入。\r\n// import _BR from \"./_BR\";\r\n// import _EditMany from \"./_EditMany\";\r\n// import _Fun from \"./_Fun\";\r\n// import _IFile from \"./_IFile\";\r\n// import _Json from \"./_Json\";\r\n// import _Str from \"./_Str\";\r\n\r\n/**\r\n * input form\r\n * 裡面function預設傳入object(not element or selector) \r\n */\r\nexport default class _Form {\r\n\r\n    /**\r\n     * get input values, 排除不儲存的欄位, 可用在多筆的單行\r\n     * param form {object} input form\r\n     * return {json}\r\n     */\r\n    public static toRow(form: JQuery<HTMLElement>): { [key: string]: any } {\r\n        //skip link & read fields\r\n        let row: { [key: string]: any } = {};\r\n        form.find(_Input.fidFilter()).filter(':not(.xi-unsave)').each(function () {\r\n            const obj = $(this);\r\n            row[_Input.getFid(obj)] = _Input.getO(obj, form);\r\n        });\r\n        return row;\r\n\r\n        /*\r\n        //get input\r\n        const attr = 'name';\r\n        const array = form.serializeArray();  //key-value\r\n\r\n        //good: jquery foreach\r\n        let json: { [key: string]: any } = {};\r\n        $.each(array, function () {\r\n            json[this.name] = this.value || '';\r\n        });\r\n\r\n        //add checkbox input, skip pre name with '-'(for summernote)\r\n        form.find(':checkbox').each(function () {\r\n            const item = $(this);\r\n            const id = item.attr(attr);\r\n            //summernote auto generate checkbox with pre name '-', must skip !!\r\n            if (_Fun.hasValue(id) && id.indexOf('-') < 0)\r\n                json[id] = _ICheck.getO(item);\r\n        });\r\n\r\n        //add radio input\r\n        const attr2 = '[' + attr + ']:radio';\r\n        form.find(attr2).each(function () {\r\n            const item = $(this);\r\n            const id = item.attr(attr);\r\n            json[id] = _IRadio.get(id, form);\r\n        });\r\n        return json;\r\n        */\r\n    }\r\n\r\n    public static toRowStr(form: JQuery<HTMLElement>): string {\r\n        return JSON.stringify(_Form.toRow(form));\r\n    }\r\n\r\n    /**\r\n     * load json row into form UI (container object)\r\n     * param form {object} form or box object\r\n     * param json {json}\r\n     */\r\n    public static loadRow(form: JQuery<HTMLElement>, row: { [key: string]: any }): void {\r\n        for (const key in row)\r\n            _Input.set(key, row[key], form);\r\n    }\r\n\r\n    /**\r\n     * reset all inputs with name attribute\r\n     * param form {object}\r\n     */\r\n    public static reset(form: JQuery<HTMLElement>): void {\r\n        form.find(_Input.fidFilter()).each(function () {\r\n            _Input.setO($(this), '', form);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * check has file input or not\r\n     */\r\n    public static hasFile(form: JQuery<HTMLElement>): boolean {\r\n        return (form.find(':file').length > 0);\r\n    }\r\n\r\n    /**\r\n     * set form inputs edit status\r\n     * param form {object} jquery form/box\r\n     * param status {bool} edit status\r\n     */\r\n    public static setEdit(form: JQuery<HTMLElement>, status: boolean): void {\r\n        //text & textArea\r\n        _IText.setEditO(form.find('input:text'), status);\r\n        _ITextarea.setEditO(form.find('textarea'), status);\r\n\r\n        //date, dt\r\n        _IDate.setEditO(form.find('.date input'), status);\r\n\r\n        //dropdown\r\n        _ISelect.setEditO(form.find('select'), status);\r\n\r\n        //checkbox & radio\r\n        _ICheck.setEditO(form.find(':checkbox'), status);\r\n        _IRadio.setEditO(form.find(':radio'), status);\r\n\r\n        //TODO: html\r\n\r\n        //button\r\n        _Btn.setEditO(form.find('button'), status);\r\n\r\n        /*\r\n        form.find(':checkbox').each(function () {\r\n            $(this).icheck(enabled);\r\n        });\r\n        //radio\r\n        form.find(':radio').each(function () {\r\n            $(this).icheck(enabled);\r\n        });\r\n        */\r\n    }\r\n\r\n    /**\r\n     * hide & show div with effect\r\n     * param hides {array} object array to hide\r\n     * param shows {array} object array to show\r\n     */\r\n    public static hideShow(hides: JQuery<HTMLElement>[] | null, shows: JQuery<HTMLElement>[] | null): void {\r\n        //hide first\r\n        if (hides) {\r\n            for (let i = 0; i < hides.length; i++) {\r\n                const form1 = hides[i];\r\n                form1.fadeOut(500, function () {\r\n                    _Obj.hide(form1);\r\n                });\r\n            }\r\n        }\r\n\r\n        //show\r\n        if (shows) {\r\n            for (let i = 0; i < shows.length; i++) {\r\n                const form2 = shows[i];\r\n                form2.fadeIn(500, function () {\r\n                    _Obj.show(form2);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //=== below is old and remark ===\r\n    /*\r\n    //get save data without files\r\n    //row: jobject\r\n    //deletes: list<list<string>>\r\n    //rows: list<JArray>\r\n    //return json\r\n    getSaveData: function (isNew: boolean, key: any, row: any, rows: any, deletes: any) {\r\n        return {\r\n            isNew: isNew,\r\n            key: key,\r\n            row: _Json.toStr(row),\r\n            rows: _Json.toStr(rows),\r\n            deletes: _Form.keysToStr(deletes),\r\n        };\r\n    },\r\n\r\n    //??\r\n    //單筆資料包含要上傳的多個檔案\r\n    //files 單筆資料要上傳的多個檔案, 每個陣列的內容為 [欄位id, 後端變數名稱]\r\n    getSaveRow: function (isNew: boolean, box: JQuery<HTMLElement>, row: any, files: [string, string][] | null) {\r\n        files = files || [];\r\n        //multis = multis || [];\r\n\r\n        const data = new FormData();\r\n        data.append('isNew', isNew.toString());\r\n\r\n        //加上單筆資料要上傳的多個檔案\r\n        //var i;\r\n        for (let i = 0; i < files.length; i++)\r\n            _IFile.rowAddFile(data, row, files[i][0], files[i][1], box);\r\n\r\n        data.append('row', _Json.toStr(row));\r\n        return data;\r\n    },\r\n    */\r\n\r\n    /** * description 傳回要送到後端的儲存資料\r\n     * param {bool} isNew\r\n     * param {object} box object\r\n     * param {object} row json object, for save\r\n     * param {array} files 單筆資料要上傳的多個檔案, 每個陣列的內容為 [欄位id, 後端變數名稱]\r\n     * param {array} multis 多筆資料 src\r\n     * return {FormData} json\r\n     */\r\n    /*\r\n    //getSaveData: function (isNew, box, row, files, multis) {\r\n    getSaveDataWithFiles: function (isNew: boolean, box: JQuery<HTMLElement>, row: any, files: [string, string][] | null, multis: any[] | null) {\r\n        files = files || [];\r\n        multis = multis || [];\r\n\r\n        const data = new FormData();\r\n        data.append('isNew', isNew.toString());\r\n\r\n        //加上單筆資料要上傳的多個檔案\r\n        let i;\r\n        for (i = 0; i < files.length; i++)\r\n            _IFile.rowAddFile(data, row, files[i][0], files[i][1], box);\r\n\r\n        //rows 加入單筆\r\n        const rows = [row];\r\n\r\n        //多筆資料的異動/刪除\r\n        const deletes: any[][] = [];\r\n        for (i = 0; i < multis.length; i++) {\r\n            //異動資料\r\n            _EditMany.dataAddRows(data, rows, multis[i]); //多筆\r\n            //var hasRows = (multis[i][1] !== null && multis[i][1] !== undefined);\r\n            //if (hasRows)\r\n            //    multis[i][1].rows = rows2;\r\n\r\n            //刪除資料\r\n            deletes[i] = multis[i].deletes;\r\n        }\r\n\r\n        //加入\r\n        data.append('rows', _Json.toStr(rows));     //加入多筆\r\n        data.append('deletes', _EditMany.keysToStr(deletes));  //輸出字串\r\n        return data;\r\n    },\r\n\r\n    //??\r\n    //捲動畫面到第一個錯誤欄位\r\n    zz_scrollTopError: function () {\r\n        $('.' + _Fun.errLabCls).each(function (i, data) {\r\n            if ($(data).is(':visible')) {\r\n                const t = $(data);\r\n                const x = $(t).offset().top - 185;\r\n\r\n                if ($('.wrapper').parent().hasClass('slimScrollDiv'))\r\n                    $('.wrapper').slimScroll({ scrollTo: x });\r\n                else if ($('.wrapper').hasClass('noWrapperScroll'))\r\n                    $('.scroolablePanel').slimScroll({ scrollTo: $(t).position().top - 200 });\r\n                else\r\n                    $(\"html, body\").animate({ scrollTop: x }, \"slow\");\r\n                return (false);\r\n            }\r\n        })\r\n    },\r\n\r\n    //keys is two dimension\r\n    zz_keysToStr: function (keys: any[][]) {\r\n        const strs: string[] = [];\r\n        for (let i = 0; i < keys.length; i++) {\r\n            strs[i] = (keys[i].length == 0)\r\n                ? ''\r\n                : keys[i].join(_Fun.RowSep);\r\n        }\r\n        return strs.join(_Fun.TableSep);\r\n    },\r\n    */\r\n\r\n    /**\r\n     * ??\r\n     檢查欄位清單內是否有空白欄位, 如果有則顯示必填\r\n     讀取 xd-required class\r\n     如果欄位值有錯誤, 則會focus在第一個錯誤欄位\r\n     包含多筆區域 !!\r\n     //param {array} ids source field id array\r\n     param {object} box box object, for 多筆畫面??\r\n     //param {string} msg error msg, 如果沒輸入, 則使用 _BR.FieldRequired\r\n     return {bool} true(field ok), false(has empty)\r\n    */\r\n    /*\r\n    checkEmpty: function (box: JQuery<HTMLElement>): boolean {\r\n        //clear error label first\r\n        box.find('.' + _Fun.errCls).removeClass(_Fun.errCls);\r\n        box.find('.' + _Fun.errLabCls).hide();\r\n\r\n        //if (_Str.isEmpty(msg))\r\n        //const msg = ;\r\n\r\n        //get ids\r\n        //var ids = [];\r\n        let ok = true;\r\n        box.find('.' + _Fun.XdRequired).each(function () {\r\n            const me = $(this);\r\n            if (_Str.isEmpty(_Input.getO(me, box))) {\r\n                ok = false;\r\n                //me.addClass(_Fun.errCls);\r\n                let id = _Obj.getId(me);\r\n                if (_Str.isEmpty(id))\r\n                    id = _Obj.getDid(me);\r\n                _Input.showError(me, id, _BR.FieldRequired, box);\r\n            }\r\n        });\r\n        return ok;\r\n\r\n        //check if ids is string\r\n        //if (typeof ids === 'string') {\r\n        //    ids = [ ids ];    //把字串變成陣列\r\n        //if (ids == null || ids.length == 0)\r\n        //    return true;\r\n\r\n    },\r\n    */\r\n\r\n    /*\r\n    //把json的資料比對checkbox,相同值勾選起來(相同欄位名稱)\r\n    jsonCheckBoxToForm: function (json: { [key: string]: any }, boxId: string): void {\r\n        const box = $('#' + boxId);\r\n        Object.keys(json).map(function (key, index) {\r\n            $('input[name=\"\"]' + key).each(function () {\r\n                if ($(this).val() == json[key]) {\r\n                    $(this).prop(\"checked\", true);\r\n                }\r\n            });\r\n        });\r\n    },\r\n    */\r\n\r\n    /*\r\n    zz_reset: function (box: JQuery<HTMLElement>): void {\r\n        //var box = $('#' + box);\r\n        //文字欄位\r\n        box.find('input:text').val('');\r\n    },\r\n    */\r\n\r\n} //class"]}