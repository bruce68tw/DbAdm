{"version":3,"file":"EditMany.js","sourceRoot":"","sources":["../../../base/EditMany.ts"],"names":[],"mappings":"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","sourcesContent":["import _Edit from \"./_Edit\";\r\nimport _Form from \"./_Form\";\r\nimport _ICheck from \"./_ICheck\";\r\nimport _IDate from \"./_IDate\";\r\nimport _IFile from \"./_IFile\";\r\nimport _Input from \"./_Input\";\r\nimport _IText from \"./_IText\";\r\nimport _Log from \"./_Log\";\r\nimport _Obj from \"./_Obj\";\r\nimport _Str from \"./_Str\";\r\nimport _Var from \"./_Var\";\r\n\r\n// Assume the following are globally available or defined elsewhere:\r\n// And that DataTables and jQuery/Mustache are available.\r\ndeclare const Mustache: { render: (template: string, view: any) => string };\r\n\r\n// Define a minimal interface for the validator object, assuming it's part of jQuery validation or similar\r\ninterface Validator {\r\n    // Methods and properties on the validator instance\r\n}\r\n\r\n// Global variables, assuming they are imported or globally defined elsewhere\r\ndeclare const _me: {\r\n    divRoles: JQuery;\r\n    mUserRoleFids: string[];\r\n    crudE: {\r\n        viewFile: (table: string, fid: string, elm: JQuery<HTMLElement> | HTMLElement, key: string) => void;\r\n        getFileSid: (levelStr: string, fid: string) => string;\r\n        // dataSetFileJson: (data: FormData, fileJson: any) => void;\r\n    };\r\n};\r\n\r\n/**\r\n * 多筆編輯畫面\r\n * multiple edit forms\r\n * 資料儲存在 html input\r\n *\r\n * notice:\r\n * set data-fkeyFid when save\r\n * 函數名稱後面ByRsb(表示by RowsBox)為擴充原本函數, 參數rowsBox空白則為this.RowsBox\r\n *\r\n * 屬性: 參考 init()\r\n *\r\n * 自定函數:\r\n * void fnLoadRows(rows)(old: fnLoadJson(json))：show json to form, use loadJson instead of loadRows for more situation !!\r\n * json fnGetUpdJson(upKey)：get updated json by form\r\n * bool fnValid()：validate check\r\n * void fnReset()：reset\r\n *\r\n * param-1 kid {string} pkey field id(single key)\r\n * //param-2 eformId {string} (optional) edit form id\r\n * param-2 rowsBoxId {string} (optional) rows box id\r\n * if empty, you must write functions: fnLoadRows、fnGetUpdJson、fnValid、fnReset，\r\n * 新增一筆時設定newId\r\n * param-3 tplRowId {string} (optional) row template id\r\n * //tplRowId -> rowTplId\r\n * 1.if empty, it will log error when call related function.\r\n * 2.system get fid-type from this variables\r\n * 3.called by singleFormLoadRow、loadRowsByRsb、_renderRow\r\n * param-4 rowFilter {string} (optional) jQuery filter for find row object\r\n * 1.if empty, it will log error when call related function.\r\n * 2.inside element -> row(onDeleteRow),\r\n * 3.rowsBox -> row(getUpdRows)\r\n * param-5 sortFid {string} (optional) sort fid for front-side sorting function\r\n *\r\n * return {EditMany}\r\n */\r\nexport default class EditMany {\r\n\r\n    // constant\r\n    public readonly DataFkeyFid: string = '_fkeyfid';  //data field for fkey fid, lowercase\r\n\r\n    // variables\r\n    public mode: string = _Edit.ModeBase;    //default value\r\n    public modeData: any = '';             //for different mode (e.g., fids array for URM)\r\n    public isUrm: boolean = false;             //is urm or not\r\n\r\n    public kid: string;\r\n    public rowFilter?: string;\r\n    public sortFid?: string;\r\n    public systemError: string = '';\r\n    public hasRowTpl: boolean;\r\n    public hasRowFilter: boolean;\r\n    public dataJson: any = null;\r\n\r\n    public rowTpl?: string;\r\n    public fidTypes?: string[]; // Array of [fid, ftype, fid, ftype, ...]\r\n    public fidTypeLen: number = 0;\r\n    public hasFile: boolean = false;\r\n    public fileFids?: string[]; // Array of fids that are files\r\n    public fileLen: number = 0;\r\n\r\n    public hasEform: boolean;\r\n    public rowsBox?: JQuery<HTMLElement>;\r\n    public eform?: JQuery<HTMLElement>;     //edit form object\r\n    public validator?: Validator;\r\n\r\n    public deletedRows: string[] = [];  //deleted key string array\r\n    public newIndex: number = 0;      //new row serial no, 使用負數來表示新資料\r\n\r\n    // Custom functions, users can assign these\r\n    public fnLoadRows?: (rows: any[]) => void;\r\n    public fnGetUpdJson?: (upKey: string) => any;\r\n    public fnValid?: () => boolean;\r\n    public fnReset?: () => void;\r\n\r\n    constructor(\r\n        kid: string,\r\n        rowsBoxId?: string,\r\n        rowTplId?: string,\r\n        rowFilter?: string,\r\n        sortFid?: string\r\n    ) {\r\n        this.kid = kid;\r\n        this.rowFilter = rowFilter;\r\n        this.sortFid = sortFid;\r\n        this.hasRowTpl = _Str.notEmpty(rowTplId);\r\n        this.hasRowFilter = _Str.notEmpty(rowFilter);\r\n\r\n        //call last\r\n        this.init(rowTplId, rowsBoxId);\r\n    }\r\n\r\n    /**\r\n     * initial & set instance variables (this.validator by _valid.init())\r\n     * call by this\r\n     */\r\n    private init(rowTplId?: string, rowsBoxId?: string): void {\r\n\r\n        if (this.hasRowTpl) {\r\n            this.rowTpl = $('#' + rowTplId!).html();\r\n            const rowObj = $(this.rowTpl);\r\n\r\n            //check input & alert error if wrong\r\n            if (_Obj.get(this.kid, rowObj) == null) {\r\n                this.systemError = `EditMany.js input kid is wrong (${this.kid})`;\r\n                alert(this.systemError);\r\n            }\r\n\r\n            // Note: _edit.initVars sets this.fidTypes, this.fidTypeLen, this.hasFile, etc.\r\n            _Edit.initVars(this, rowObj);\r\n        }\r\n\r\n        //has edit form or not\r\n        this.hasEform = _Str.notEmpty(rowsBoxId);\r\n        if (this.hasEform) {\r\n            this.rowsBox = $('#' + rowsBoxId!);\r\n            this.eform = this.rowsBox.closest('form');     //edit form object\r\n            if (this.rowsBox.length === 0) {\r\n                this.systemError = `EditMany.js rowsBoxId is wrong (${rowsBoxId})`;\r\n                alert(this.systemError);\r\n            }\r\n        }\r\n\r\n        this._resetVar();\r\n    }\r\n\r\n    /**\r\n     * initial urm, 參考 XpUser Read.cshmtl\r\n     * param fids: 要傳到後端的欄位id array\r\n     */\r\n    public initUrm(fids: string[]): void {\r\n        this.mode = _Edit.ModeUR;\r\n        this.modeData = fids;\r\n        this.isUrm = true;\r\n    }\r\n\r\n    /**\r\n     * isNewTr -> _isNewBox\r\n     * check is a new tr or not\r\n     * param box {object}\r\n     * return {bool}\r\n     */\r\n    private _isNewBox(box: JQuery<HTMLElement>): boolean {\r\n        return (_IText.get(_Edit.IsNew, box) == '1');\r\n    }\r\n\r\n    /**\r\n     * reset edit form\r\n     * param rowsBox {object} optional\r\n     */\r\n    public reset(): void {\r\n        if (this.fnReset) {\r\n            this.fnReset();\r\n        } else if (this.isUrm) {\r\n            this._urmReset();\r\n        } else if (this.hasEform) {\r\n            this.rowsBox!.empty();   //empty rows ui first\r\n            this._resetVar();\r\n        }\r\n    }\r\n\r\n    //reset variables\r\n    private _resetVar(): void {\r\n        this.newIndex = 0;\r\n        this._resetDeletes();\r\n    }\r\n\r\n    /**\r\n     * resetDeleted -> _resetDeletes\r\n     * reset deleted rows\r\n     */\r\n    private _resetDeletes(): void {\r\n        this.deletedRows = [];\r\n    }\r\n\r\n    /**\r\n     * urmLoadJson -> urmLoadRows\r\n     * (urm: UserRole Mode), load json rows into UI by urm\r\n     * param rows {json[]}\r\n     */\r\n    private _urmLoadRows(rows: any[]): void {\r\n        this._urmReset();\r\n\r\n        //check\r\n        if (rows == null || !this.rowsBox)\r\n            return;\r\n\r\n        //set checked sign & old value\r\n        const fids: string[] = this.modeData;\r\n        for (const row of rows) {\r\n            // fid map to dataFid (fids[1])\r\n            const obj = this.rowsBox.find(_Input.fidFilter(row[fids[1]]));\r\n            _ICheck.setO(obj, 1);\r\n            obj.data('key', row[fids[0]]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get upd json by UserRole mode(urm), Role欄位使用checkbox\r\n     * called by User.js、XpRole.js\r\n     * param upKey {string} up key\r\n     * return {json} modified columns only\r\n     */\r\n    private _urmGetUpdJson(upKey: string): any {\r\n        const json: any = {};\r\n        const rows: any[] = [];\r\n        const fids: string[] = this.modeData;   //string array\r\n        let newIdx = 0;\r\n        this._resetDeletes();    //reset first\r\n\r\n        if (!this.rowsBox) return json;\r\n\r\n        this.rowsBox.find(':checkbox').each((_index, element) => {\r\n            const obj = $(element);\r\n            const key = obj.data('key');\r\n            if (_Str.isEmpty(key)) {\r\n                if (_ICheck.checkedO(obj)) {\r\n                    //new row\r\n                    const row: any = {};\r\n                    row[_Edit.IsNew] = '1';     //new row flag\r\n                    row[fids[0]] = ++newIdx;            //Id, base 1 !!\r\n                    row[fids[1]] = _ICheck.getO(obj);   //RoleId\r\n                    this.rowSetFkey(row, upKey);  //set foreign key value\r\n                    rows.push(row);\r\n                }\r\n            } else {\r\n                if (!_ICheck.checkedO(obj)) {\r\n                    //delete row\r\n                    this.deleteRow(key);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (rows.length > 0)\r\n            json[_Edit.Rows] = rows;\r\n        json[_Edit.Deletes] = this.getDeletes();\r\n        return json;\r\n    }\r\n\r\n    private _urmReset(): void {\r\n        this._resetVar();\r\n\r\n        if (this.rowsBox) {\r\n            const objs = this.rowsBox.find(':checkbox');\r\n            _ICheck.setO(objs, 0);\r\n            objs.data('key', '');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * loadJson(json) -> loadRows(rows)\r\n     * 系統自動呼叫, 不可在 fnXXX 呼叫, 否則會產生無窮迴圈 !!\r\n     * load this json rows into UI, also set old values !!\r\n     * param rows {json[]}\r\n     */\r\n    public loadRows(rows: any[]): void {\r\n        if (this.fnLoadRows) {\r\n            this.fnLoadRows(rows);\r\n        } else if (this.isUrm) {\r\n            this._urmLoadRows(rows);\r\n        } else {\r\n            this.loadRowsByRsb(rows, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * singleFormLoadRow -> loadRowByBox\r\n     * box 與 rsb(rowsBox) 有些不同, 所以用不同名 !!\r\n     * load one row, also set field old value,\r\n     * ex: DbAdm/MyCrud.js Etable is a single form but has multiple rows property !!\r\n     * param rowBox {object}\r\n     * param row {json}\r\n     * param index {int} 資料序號 base 0\r\n     */\r\n    public loadRowByBox(rowBox: JQuery<HTMLElement>, row: any, index: number): void {\r\n        if (!this.rowTpl || !this.fidTypes)\r\n            return;\r\n\r\n        row.Index = index;\r\n        const box = $(Mustache.render(this.rowTpl, row)); //for 顯示欄位\r\n\r\n        //set old value for each field\r\n        for (let i = 0; i < this.fidTypeLen; i = i + 2) {\r\n            const fid = this.fidTypes[i];\r\n            _Edit.setOld(_Obj.get(fid, box), row[fid]);\r\n        }\r\n\r\n        //set date input\r\n        _IDate.init(box);\r\n\r\n        //one row into UI for 輸入欄位\r\n        _Form.loadRow(box, row);\r\n\r\n        //rowBox.append(box);\r\n        box.appendTo(rowBox);\r\n    }\r\n\r\n    /**\r\n     * loadRowsByBox(rowsBox, rows, reset) -> loadRowsByRsb(rows, reset, rowsBox)\r\n     * load rows by rowsBox also set old value\r\n     * param rows {jsons}\r\n     * param reset {bool} (true) reset rowsBox first.\r\n     * param rowsBox {object} (this.rowsBox) rows box object\r\n     */\r\n    public loadRowsByRsb(rows: any[], reset: boolean, rowsBox?: JQuery<HTMLElement>): void {\r\n        if (!this._checkRowTpl())\r\n            return;\r\n\r\n        //reset if need\r\n        //use \"reset || true\"\" will cause wrong result !!\r\n        const box = this._getRowsBox(rowsBox);\r\n        if (_Var.isEmpty(reset) || reset)\r\n            this.reset(); // Assuming reset without param is sufficient for rowsBox reset\r\n\r\n        //check\r\n        const rowLen = (rows == null) ? 0 : rows.length;\r\n        if (rowLen === 0)\r\n            return;\r\n\r\n        //render rows\r\n        for (let i = 0; i < rowLen; i++) {\r\n            this.loadRowByBox(box!, rows[i], i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * validate form\r\n     */\r\n    public valid(): boolean {\r\n        return this.fnValid ? this.fnValid() :\r\n            (this.hasEform && this.eform && this.validator) ? (this.eform as any).validTable(this.validator) : // Assuming validTable is an extension on JQuery\r\n            true;\r\n    }\r\n\r\n    /**\r\n     * get row key\r\n     * param rowBox {object} row box\r\n     * return {string} key value\r\n     */\r\n    public getKey(rowBox: JQuery<HTMLElement>): string {\r\n        return _Input.get(this.kid, rowBox);\r\n    }\r\n\r\n    private _checkRowFilter(): boolean {\r\n        if (this.hasRowFilter)\r\n            return true;\r\n\r\n        _Log.error('EditMany.js this.rowFilter is empty.');\r\n        return false;\r\n    }\r\n\r\n    //checkTplRow -> _checkRowTpl\r\n    private _checkRowTpl(): boolean {\r\n        if (this.hasRowTpl)\r\n            return true;\r\n\r\n        _Log.error('EditMany.js this.rowTpl is empty.');\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * get row box by inside element/object\r\n     * param elm {element/object}\r\n     * return {object}\r\n     */\r\n    private _elmToRowBox(elm: JQuery<HTMLElement> | HTMLElement): JQuery<HTMLElement> | null {\r\n        return this._checkRowFilter() && this.rowFilter\r\n            ? $(elm).closest(this.rowFilter)\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * get row box by id\r\n     * called Flow.js\r\n     * param id {string} row id\r\n     * return {object} row box\r\n     */\r\n    public idToRowBox(id: string): JQuery<HTMLElement> | undefined {\r\n        if (!this.eform) return undefined;\r\n        const filter = _Input.fidFilter(this.kid) + `[value='${id}']`;\r\n        return this.eform.find(filter).parent();\r\n    }\r\n\r\n    /**\r\n     * getUpdJsonByCrud -> getUpdJson\r\n     * 系統自動呼叫, 不可在 fnXXX 呼叫, 否則會產生無窮迴圈 !!\r\n     * get updated json, called by crudE.js only !!\r\n     * param upKey {string}\r\n     * return {json} modified columns only\r\n     */\r\n    public getUpdJson(upKey: string): any {\r\n        return this.fnGetUpdJson ? this.fnGetUpdJson(upKey) :\r\n            this.isUrm ? this._urmGetUpdJson(upKey) :\r\n            this.getUpdJsonByRsb(upKey, this.rowsBox);\r\n    }\r\n\r\n    /**\r\n     * getUpdJson -> getUpdJsonByRsb\r\n     * get updated json by rowsBox, called by crud.js only\r\n     * param upKey {string}\r\n     * param rowsBox {object}\r\n     * return {json} modified columns only\r\n     */\r\n    public getUpdJsonByRsb(upKey: string, rowsBox?: JQuery<HTMLElement>): any {\r\n        const json: any = {};\r\n        json[_Edit.Rows] = this.getUpdRows(upKey, this._getRowsBox(rowsBox));\r\n        json[_Edit.Deletes] = this.getDeletes();\r\n        return json;\r\n    }\r\n\r\n    /**\r\n     * public for myCrud.js\r\n     * (need this.rowFilter !!) get updated rows(not include _childs, _deletes)\r\n     * will also set fkeyFid\r\n     * param rowsBox {object} (optional) rows box, default this.rowsBox\r\n     * return {jsons} null if empty\r\n     */\r\n    public getUpdRows(upKey: string, rowsBox?: JQuery<HTMLElement>): any[] | null {\r\n        if (!this._checkRowFilter() || !this.rowFilter || !this.fidTypes)\r\n            return null;\r\n\r\n        //set sort field\r\n        rowsBox = this._getRowsBox(rowsBox);\r\n        this.setSort(rowsBox);\r\n\r\n        //debugger;\r\n        const rows: any[] = [];  //return rows\r\n        const rowFilter = this.rowFilter;\r\n        const me = this;  //capture this for use inside each()\r\n\r\n        if (!rowsBox) return null;\r\n\r\n        rowsBox.find(rowFilter).each(function (_idx, item) {\r\n            //add new row if empty key\r\n            const box = $(item);\r\n            const key = _Input.get(me.kid, box);\r\n            if (me._isNewBox(box)) {\r\n                const row2 = _Form.toRow(box);\r\n                row2[me.DataFkeyFid] = upKey;   //write anyway !!\r\n                rows.push(row2);\r\n                return;     //continue;\r\n            }\r\n\r\n            //add modified fields\r\n            const diffRow: any = {};\r\n            let diff = false;\r\n            let fid: string, ftype: string, value: any, obj: JQuery<HTMLElement>;\r\n            for (let j = 0; j < me.fidTypeLen; j = j + 2) {\r\n                //skip read only input !!\r\n                ftype = me.fidTypes![j + 1];\r\n                if (ftype === 'read')\r\n                    continue;\r\n\r\n                fid = me.fidTypes![j];\r\n                obj = _Obj.get(fid, box);\r\n                value = _Input.getO(obj, box, ftype);\r\n                //if totally compare, string is not equal to numeric !!\r\n                if (value != _Edit.getOld(obj)) {\r\n                    diffRow[fid] = value;\r\n                    diff = true;\r\n                }\r\n            }\r\n\r\n            if (diff) {\r\n                /* ??\r\n                //diffRow[me.DataIsNew] = 0;\r\n                //diffRow[_fun.DataKey] = key;\r\n                for (var j = 0; j < me.extFidLen; j++) {\r\n                    diffRow[me.extFids[j]] = oldRow[me.extFids[j]];\r\n                }\r\n                */\r\n                diffRow[me.kid] = key;    //set key value\r\n                //diffRow[me.DataFkeyFid] = upKey;   //無條件寫入這個欄位!!\r\n                rows.push(diffRow);\r\n            }\r\n        });\r\n        return (rows.length === 0) ? null : rows;\r\n    }\r\n\r\n    /**\r\n     * getDeletedStr -> getDeletes\r\n     * get deleted rows key list字串 for 傳回後端\r\n     * public for MyCrud.js\r\n     * return {string} null for empty.\r\n     */\r\n    public getDeletes(): string | null {\r\n        return (this.deletedRows.length === 0)\r\n            ? null : this.deletedRows.join();\r\n    }\r\n\r\n    /**\r\n     * onclick addRow button\r\n     */\r\n    public onAddRow(): void {\r\n        this.addRow();\r\n    }\r\n\r\n    /**\r\n     * add one row(or empty) into UI, 同時設定新id\r\n     * param {object} (optional) row\r\n     * param {object} (optional) rowsBox, default this.rowsBox\r\n     * param {int} (optional) newId 新id\r\n     * return {object} row\r\n     */\r\n    public addRow(row?: any, rowsBox?: JQuery<HTMLElement>, newId?: number): any {\r\n        row = row || {};\r\n        const box = this._getRowsBox(rowsBox);\r\n        const obj = this._renderRow(row, box);\r\n        if (!obj) return row; // Handle error case from _renderRow\r\n        newId = this.setNewIdByBox(obj, newId);\r\n        row[this.kid] = newId;  //寫入新Id for 外面程式 if need\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * onclick deleteRow\r\n     * param btn {element}\r\n     */\r\n    public onDeleteRow(): void {\r\n        const box = this._elmToRowBox((_Fun as any).getMe()); // Assuming _Fun.getMe() returns the clicked element\r\n        if (!box) return;\r\n\r\n        this.deleteRow(_IText.get(this.kid, box), box);\r\n    }\r\n\r\n    /**\r\n     * add deleted row & remove UI row\r\n     * param key {string} row key\r\n     * param rowBox {object} (optional) rows box, default this.rowsBox\r\n     */\r\n    public deleteRow(key: string, rowBox?: JQuery<HTMLElement>): void {\r\n        const deletes = this.deletedRows;\r\n        let found = false;\r\n        const rowLen = deletes.length;\r\n\r\n        // Check if key is already marked for deletion\r\n        for (let i = 0; i < rowLen; i++) {\r\n            //do nothing if existed\r\n            // Note: The original JS had deletes[i][this.kid] === key, which assumes deletes stores objects, but it's initialized as a string array and assigned string keys. Assuming the intent is to store string keys directly.\r\n            if (deletes[i] === key) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        //add deleted[]\r\n        if (!found)\r\n            deletes[rowLen] = key;\r\n\r\n        //remove UI row if need\r\n        //rowBox = rowBox || this.rowsBox;\r\n        if (_Obj.notEmpty(rowBox))\r\n            rowBox!.remove();\r\n    }\r\n\r\n    /**\r\n     * onViewFile -> viewFile\r\n     * onclick viewFile\r\n     * param table {string} table name\r\n     * param fid {string}\r\n     * param elm {element} link element\r\n     */\r\n    public viewFile(table: string, fid: string, elm: JQuery<HTMLElement> | HTMLElement): void {\r\n        const rowBox = this._elmToRowBox(elm);\r\n        if (!rowBox) return;\r\n\r\n        const key = this.getKey(rowBox);\r\n        _me.crudE.viewFile(table, fid, elm, key);   //非初始階段可以讀取_me.crudE\r\n    }\r\n\r\n    /**\r\n     * render row by UI template, called by addRow()\r\n     * param rowsBox {object}\r\n     * param row {json}\r\n     * return {object} row object\r\n     */\r\n    private _renderRow(row: any, rowsBox?: JQuery<HTMLElement>): JQuery<HTMLElement> | null {\r\n        if (!this._checkRowTpl() || !this.rowTpl)\r\n            return null;\r\n\r\n        rowsBox = this._getRowsBox(rowsBox);\r\n        if (!rowsBox) return null;\r\n\r\n        const obj = $(Mustache.render(this.rowTpl, row));\r\n        _Form.loadRow(obj, row);\r\n        obj.appendTo(rowsBox);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * (need this.rowFilter !!) formData add upload files\r\n     * param levelStr {string}\r\n     * param data {FormData}\r\n     * param rowsBox {object} (optional) default this.rowsBox\r\n     * return {json} file json\r\n     */\r\n    public dataAddFiles(levelStr: string, data: FormData, rowsBox?: JQuery<HTMLElement>): any | null {\r\n        if (!this.hasFile || !this.fileFids) return null;\r\n        if (!this._checkRowFilter() || !this.rowFilter) return null;\r\n\r\n        rowsBox = this._getRowsBox(rowsBox);\r\n        if (!rowsBox) return null;\r\n\r\n        const me = this;\r\n        const fileJson: any = {};\r\n        const fileIdx: { [key: string]: number } = {};   //fileFid map index\r\n\r\n        rowsBox.find(me.rowFilter).each(function (_index, item) {\r\n            const tr = $(item);\r\n            for (let i = 0; i < me.fileLen; i++) {\r\n                const fid = me.fileFids![i];\r\n                const serverFid = _me.crudE.getFileSid(levelStr, fid);\r\n                if (_IFile.dataAddFile(data, fid, serverFid, tr)) {\r\n                    fileIdx[fid] = (fileIdx[fid] == null) ? 0 : fileIdx[fid] + 1;\r\n                    //set fileJson\r\n                    fileJson[serverFid + fileIdx[fid]] = me.getKey(tr);\r\n                }\r\n            }\r\n        });\r\n        //_me.crudE.dataSetFileJson(data, fileJson);\r\n        return fileJson;\r\n    }\r\n\r\n    /**\r\n     * row set fkey value\r\n     * param row {json}\r\n     * param fkeyFid {string}\r\n     */\r\n    public rowSetFkey(row: any, fkey: string): void {\r\n        if (row != null && _Edit.isNewRow(row))\r\n            row[this.DataFkeyFid] = fkey;\r\n    }\r\n\r\n    /**\r\n     * rows set fkey value\r\n     * param rows {jsons}\r\n     * param fkeyFid {string} fkey value\r\n     */\r\n    public rowsSetFkey(rows: any[], fkey: string): void {\r\n        if (rows != null) {\r\n            for (const row of rows) {\r\n                if (row != null && _Edit.isNewRow(row))\r\n                    row[this.DataFkeyFid] = fkey;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set this.newId、PKey、_IsNew by row box\r\n     * boxSetNewId -> setNewIdByBox\r\n     * public for MyCrud.js, Flow.js\r\n     * param box {object} row box\r\n     * param newId {int} 外部傳入newId if any, 如果有值則不會累加 this.newId\r\n     * return {int} new key index\r\n     */\r\n    public setNewIdByBox(box: JQuery<HTMLElement>, newId?: number): number {\r\n        if (newId == null) {\r\n            this.newIndex--;    //使用負數\r\n            newId = this.newIndex;\r\n        }\r\n\r\n        //kid和IsNew必須放在同一層 !!\r\n        const box2 = _Obj.get(this.kid, box).parent();\r\n        _IText.set(this.kid, newId.toString(), box2);\r\n        _Edit.addIsNew(box2);    //增加_IsNew隱藏欄位\r\n        return newId;\r\n    }\r\n\r\n    /**\r\n     * set sort field if need\r\n     * param rowsBox {object} default this.rowsBox\r\n     */\r\n    public setSort(rowsBox?: JQuery<HTMLElement>): void {\r\n        const sortFid = this.sortFid;\r\n        if (_Str.isEmpty(sortFid) || !this.rowFilter)\r\n            return;\r\n\r\n        const me = this;\r\n        rowsBox = this._getRowsBox(rowsBox);\r\n        if (!rowsBox) return;\r\n\r\n        rowsBox.find(_Input.fidFilter(sortFid)).each(function (i, item) {\r\n            //this did not work in this loop !!\r\n            _IText.set(sortFid!, i.toString(), $(item).closest(me.rowFilter!));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * getRowsBox -> getTrs\r\n     * get rows box\r\n     * param rowsBox {object} optional, return this.rowsBox if null\r\n     * return {object}\r\n     */\r\n    private _getRowsBox(rowsBox?: JQuery<HTMLElement>): JQuery<HTMLElement> | undefined {\r\n        return rowsBox || this.rowsBox;\r\n    }\r\n\r\n    /*\r\n    //??\r\n    //src: 來源資料\r\n    //return: true/false\r\n    public onClickDeleteRows = function (src) {\r\n        var find = false;\r\n        if (src.deletedRows == null)\r\n            src.deletedRows = [];\r\n        src.box.find('[data-id=' + src.checkFid + ']:checked').each(function (index, item) {\r\n            find = true;\r\n            var check = $(item);\r\n            var tr = check.closest('tr');\r\n            var key = tr.data('key');\r\n            if (key !== '')\r\n                src.deletedRows[src.deletedRows.length] = key;\r\n            //刪除資料\r\n            tr.remove();\r\n        });\r\n        return find;\r\n        //_tool.msg('請先選取資料。')\r\n    };\r\n\r\n    //選取所有checkbox\r\n    //onClickCheckAll: function (tableId, dataFid, status) {\r\n    public onClickCheckAll = function (me, dataFid) {\r\n        dataFid = dataFid || '_check0';\r\n        var status = me.checked;\r\n        $(me).closest('table').find('[data-id=' + dataFid + ']:not(:disabled)').prop('checked', status);\r\n    };\r\n\r\n    //??\r\n    //get field by rowNo and dataId ??\r\n    public getField = function (tbody, rowNo, dataId) {\r\n        return tbody.find('tr').eq(rowNo).find('[data-id=' + dataId + ']');\r\n    };\r\n\r\n    //keys is two dimension\r\n    public keysToStr = function (keys) {\r\n        var strs = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            strs[i] = (keys[i].length == 0)\r\n                ? ''\r\n                : keys[i].join(_fun.RowSep);\r\n        }\r\n        return strs.join(_fun.TableSep);\r\n    };\r\n    */\r\n\r\n} //class"]}