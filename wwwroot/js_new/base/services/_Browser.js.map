{"version":3,"file":"_Browser.js","sourceRoot":"","sources":["../../../../base/services/_Browser.ts"],"names":[],"mappings":"AAAA,YAAY;AACZ,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,yCAAyC;AAEzC;;GAEG;AACH,MAAqB,QAAQ;IAKzB;;;OAGG;IACH,MAAM,CAAC,SAAS,CAAC,GAAW;QACxB,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,2BAA2B;IACjE,CAAC;IAED;;;;;;MAME;IAEF;;;;;OAKG;IACH,MAAM,CAAC,QAAQ,CAAC,EAAU,EAAE,EAAQ,EAAE,UAAuB;QACzD,uCAAuC;QACvC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACzD,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,SAAS,CAAC,GAAQ,EAAE,UAAuB;QAC9C,MAAM,CAAC,KAAK,EAAE,CAAC;QACf;;;;;;;;;;;;UAYE;QACF,+BAA+B;IACnC,CAAC;;AArDD,gBAAgB;AACQ,kBAAS,GAAW,WAAW,CAAC;eAHvC,QAAQ","sourcesContent":["// 假設的依賴靜態類別\r\nimport _Obj from \"./_Obj\";\r\n// 假設 JQuery 已經在專案中定義或透過 @types/jquery 引入\r\n\r\n/**\r\n * Browser related utility class\r\n */\r\nexport default class _Browser {\r\n\r\n    //傳到後端的語系code 欄位\r\n    private static readonly _langCode: string = '_langCode';\r\n\r\n    /**\r\n     * Use history.pushState to change the browser URL without reloading the page.\r\n     * param url {string} The new URL.\r\n     */\r\n    static pushState(url: string): void {\r\n        history.pushState(null, '', url); // 將第二個參數 title 設為空字串或 null\r\n    }\r\n\r\n    /*\r\n    //把語系code寫入 cookie (以後可改寫入 localeStorage)\r\n    static setLang(lang: string): void {\r\n        // 假設 $.cookie 存在\r\n        $.cookie(_Browser._langCode, lang);\r\n    }\r\n    */\r\n\r\n    /**\r\n     * Print the content of a specific element identified by id.\r\n     * param id {string} The ID of the element to print.\r\n     * param fm {any} (Optional) The form object or context.\r\n     * param fnCallback {function} (Optional) Callback function after printing.\r\n     */\r\n    static zz_print(id: string, fm?: any, fnCallback?: () => void): void {\r\n        // 假設 _Obj.getById 存在且返回一個物件或 jQuery 物件\r\n        _Browser.zz_printO(_Obj.getById(id, fm), fnCallback);\r\n    }\r\n\r\n    /**\r\n     * Print the content of a given object (typically a DOM/jQuery object).\r\n     * NOTE: Original implementation only calls window.print() directly, the commented-out code\r\n     * suggests an intention to isolate and print content, but the active code is simpler.\r\n     * param obj {any} The object (e.g., DOM element or jQuery object) whose content should be printed (though currently ignored).\r\n     * param fnCallback {function} (Optional) Callback function after printing.\r\n     */\r\n    static zz_printO(obj: any, fnCallback?: () => void): void {\r\n        window.print();\r\n        /*\r\n        debugger;\r\n        //var me = _me;\r\n        const body = document.body;\r\n        const old = body.innerHTML;\r\n        body.innerHTML = obj.html(); // 假設 obj 有 html() 方法\r\n        window.print();\r\n        body.innerHTML = old;\r\n        //_me = me;\r\n        //_me.divRead = $('#divRead');\r\n        //if (fnCallback !== undefined)\r\n        //    fnCallback();\r\n        */\r\n        // 原始程式碼未呼叫 fnCallback，故此處亦不呼叫。\r\n    }\r\n\r\n}"]}