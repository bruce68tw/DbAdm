{"version":3,"file":"FunEstr.js","sourceRoot":"","sources":["../../../../base/services/FunEstr.ts"],"names":[],"mappings":"AAAA,iCAAiC;AACjC,wBAAwB;AACxB,MAAqB,OAAO;;AAExB,mDAAmD;AACnD,sDAAsD;AACtD,kCAAkC;AAClC,+DAA+D;AAE/C,cAAM,GAAW,GAAG,CAAC;AACrB,YAAI,GAAW,GAAG,CAAC;AACnB,cAAM,GAAW,GAAG,CAAC;AACrB,cAAM,GAAW,GAAG,CAAC;AACrB,YAAI,GAAW,GAAG,CAAC;eAXlB,OAAO","sourcesContent":["//ex: _fun.FunC -> FunEstr.Create\r\n//for mapping to backend\r\nexport default class FunEstr {\r\n\r\n    // 變數宣告 var 改用 let, const, 這裡用 static readonly 模擬常數\r\n    // 雖然規則 4 是針對 function 內部的 var，但在 class 內將這些視為常數屬性更合理。\r\n    // 如果必須是靜態屬性，則應使用 static readonly。\r\n    // 由於原始是物件字面量，我將其改為 static readonly 屬性以維持外部存取方式 FunEstr.Create。\r\n\r\n    static readonly Create: string = 'C';\r\n    static readonly Read: string = 'R';\r\n    static readonly Update: string = 'U';\r\n    static readonly Delete: string = 'D';\r\n    static readonly View: string = 'V';\r\n\r\n}"]}