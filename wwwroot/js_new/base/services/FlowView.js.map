{"version":3,"file":"FlowView.js","sourceRoot":"","sources":["../../../../base/services/FlowView.ts"],"names":[],"mappings":"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","sourcesContent":["import { G, SVG, Svg, Circle, Rect, Text } from '@svgdotjs/svg.js';\r\nimport '@svgdotjs/svg.draggable.js';\r\nimport _Str from \"./_Str\";\r\nimport MouseEstr from \"../enums/MouseEstr\";\r\nimport NodeTypeEstr from \"../enums/NodeTypeEstr\";\r\nimport { Path } from '@svgdotjs/svg.js';\r\n\r\n/**\r\n * FlowBase -> FlowView\r\n * 建立 FlowView 簡化外部程式, 考慮模組化, 所以不使用jQuery\r\n * 自定函數如下(由flow內部觸發):\r\n * void fnMoveNode(node, x, y): after move node to (x,y)\r\n * void fnAfterAddLine(json): when add line\r\n * void fnShowMenu(isNode, flowItem, event);\r\n * void fnAfterMoveLineEnd(oldNode, newNode): after drop line end point\r\n */\r\n//控制 FlowNode、FlowLine for 外部程式\r\nexport default class FlowView {\t\r\n\r\n\t/**\r\n\t 屬性:\r\n\t //boxElm: box element\r\n\t svg: any; // SVG.js instance\r\n\t nodes: FlowNode[];\r\n\t lines: FlowLine[];\r\n\t fromNode: FlowNode | null; // drap start node\r\n\t onMoveNode: ((node: FlowNode, x: number, y: number) => void) | null; // event onMoveNode(node)\r\n\t*/\r\n\r\n\t// 新node/line Id, 自動累加\r\n\tprivate newNodeId: number = 0;\t\t// for node type\r\n\tprivate newLineId: number = 0;\r\n\r\n\t// 是否可編輯\r\n\tpublic isEdit: boolean = false;\r\n\r\n\t// SVG.js instance\r\n\tpublic svg: Svg; \r\n\t// The node where a line drag starts\r\n\tpublic fromNode: FlowNode | null = null;\r\n\t// Array of all nodes\r\n\tpublic nodes: FlowNode[] = [];\r\n\t// Array of all lines\r\n\tpublic lines: FlowLine[] = [];\r\n\r\n\t// Custom functions (provided by external program)\r\n\tpublic fnMoveNode: ((node: FlowNode, x: number, y: number) => void) | null = null;\r\n\tpublic fnAfterAddLine: ((json: Json) => void) | null = null;\r\n\tpublic fnShowMenu: ((event: MouseEvent, isNode: boolean, flowItem: FlowNode | FlowLine) => void) | null = null;\r\n\tpublic fnAfterMoveLineEnd: ((oldNode: FlowNode, newNode: FlowNode) => void) | null = null;\r\n\r\n\tconstructor(boxId: string) {\r\n\t\tlet boxDom = document.getElementById(boxId);\r\n\t\tif (!boxDom) {\r\n\t\t\tthrow new Error(`Element with id ${boxId} not found.`);\r\n\t\t}\r\n\t\t// Assuming SVG() is a global function from the SVG.js library\r\n\t\t// @ts-ignore\r\n\t\tthis.svg = SVG().addTo(boxDom).size('100%', '100%');\r\n\t\t//this.svg.node.style.zIndex = 100;\t//在eform上面!! 無效 !!\r\n\r\n\t\t//this.fnMoveNode = null;\r\n\t\t//this.fnAfterAddLine = null;\r\n\t\t//this.fnShowMenu = null;\r\n\t\t//this.fromNode = null;\r\n\t\t//this._reset();\r\n\t}\r\n\r\n\t/*\r\n\tnewNodeId() {\r\n\t\tthis.newNodeId++;\r\n\t\treturn this.newNodeId;\r\n\t}\r\n\t*/\r\n\r\n\t//get new node id\r\n\tgetNewNodeId(): number {\r\n\t\tthis.newNodeId++;\r\n\t\treturn this.newNodeId;\r\n\t}\r\n\r\n\t//由元件內部發動, 所以必須提供此功能\r\n\tgetNewLineId(): number {\r\n\t\tthis.newLineId++;\r\n\t\treturn this.newLineId;\r\n\t}\r\n\r\n\tsetEdit(status: boolean): void {\r\n\t\tthis.isEdit = status;\r\n\t}\r\n\r\n\t//清除全部UI元件\r\n\treset(): void {\r\n\t\tthis.nodes = [];\r\n\t\tthis.lines = [];\r\n\t\tthis.fromNode = null;\r\n\r\n\t\t//刪除 svg 裡面的全部子元素\r\n\t\tArray.from(this.svg.node.childNodes).forEach((node: ChildNode) => {\r\n\t\t\tnode.remove();\r\n\t\t});\r\n\t}\r\n\r\n\t//載入nodes & lines\r\n\tloadNodes(rows: Json[]): void {\r\n\t\tthis.reset();\r\n\t\tfor (let i = 0; i < rows.length; i++)\r\n\t\t\tthis.addNode(rows[i]);\r\n\t}\r\n\r\n\tloadLines(rows: Json[] | null): void {\r\n\t\tif (rows != null) {\r\n\t\t\tfor (let i = 0; i < rows.length; i++)\r\n\t\t\t\tthis.addLine(rows[i]);\r\n\t\t}\r\n\t}\r\n\r\n\taddNode(json: Json): FlowNode {\r\n\t\t//this.nodeCount++;\r\n\t\t//if (json.id == null)\r\n\t\t//\tjson.id = (this.nodes.length + 1) * (-1);\r\n\t\tlet node: FlowNode = new FlowNode(this, json);\r\n\t\tthis.nodes.push(node);\r\n\t\treturn node;\r\n\t}\r\n\t\r\n\taddLine(json: Json): FlowLine {\r\n\t\treturn new FlowLine(this, json);\r\n\t}\r\n\t\r\n\tdeleteNode(node: FlowNode): void {\r\n\t\tlet id: StrNum = node.getId();\r\n\t\t// Find the group element with the data-id attribute and remove it\r\n\t\tthis.svg.findOne(`g[data-id=\"${id}\"]`)!.remove();\r\n\t}\r\n\t\r\n\tdeleteLine(line: FlowLine): void {\r\n\t\tlet id: StrNum = line.getId();\r\n\t\t// Remove path and path2 (they share the same data-id)\r\n\t\tthis.svg.findOne(`path[data-id=\"${id}\"]`)!.remove();\t//含path2(data-id相同)\r\n\t}\r\n\t\r\n\tdrawLineStart(fromNode: FlowNode): void {\r\n\t\tthis.fromNode = fromNode;\r\n\t}\r\n\r\n\t//return new line json\r\n\tdrawLineEnd(toNode: FlowNode): any {\r\n\t\tif (!this.fromNode) {\r\n\t\t\tthrow new Error(\"drawLineStart must be called before drawLineEnd\");\r\n\t\t}\r\n\t\tlet json: Json = {\r\n\t\t\tId: this.newLineId,\r\n\t\t\tFromNodeId: this.fromNode.getId(),\r\n\t\t\tToNodeId: toNode.getId(),\r\n\t\t};\r\n\t\tnew FlowLine(this, json, this.fromNode, toNode);\r\n\t\tthis.fromNode = null;\r\n\t\treturn json;\r\n\t}\r\n\t\r\n\tidToNode(id: StrNum): FlowNode | null {\r\n\t\t//elm.node 指向dom\r\n\t\treturn this.nodes.find(node => node.getId() == id) || null;\r\n\t}\r\n\r\n\t//check has startNode or not\r\n\thasStartNode(): boolean {\r\n\t\t//some 用法類似 c# any()\r\n\t\treturn this.nodes.some(node => node.getNodeType() == NodeTypeEstr.Start);\r\n\t}\r\n} //class FlowView\r\n\r\n// Helper type for coordinates\r\ntype Point = { x: number, y: number };\r\n\r\n/**\r\n  流程節點\r\n  屬性:\r\n    self: this\r\n    flowView: FlowView object\r\n    svg: flowView.svg\r\n    json: node json, 欄位與後端XgFlowE相同: Id(不變), NodeType(不變), Name, PosX, PosY, Width, Height\r\n    elm: svg group element(與 html element不同)\r\n    boxElm: border element (circle or rect)\r\n    nameElm: text element\r\n    pinElm: pin element (rect)\r\n    lines: 進入/離開此節點的流程線\r\n    width: width\r\n    height: height\r\n  param flowView {FlowView} FlowView\r\n  param json {any} 流程節點資料\r\n */ \r\nexport class FlowNode {\r\n\r\n\t// normal node size constants\r\n\tprivate readonly MinWidth: number = 80;\r\n\tprivate readonly MinHeight: number = 42;\r\n\tprivate readonly LineHeight: number = 18;\t//文字行高\r\n\tprivate readonly PadTop: number = 8;\r\n\tprivate readonly PadLeft: number = 15;\r\n\tprivate readonly PinWidth: number = 12;\r\n\tprivate readonly PinGap: number = 3;\r\n\r\n\tprivate self: FlowNode;\r\n\tprivate flowView: FlowView;\r\n\tprivate svg: Svg;\r\n\tpublic json: Json;\r\n\tpublic elm: G;\t\t\t// svg group element\r\n\tprivate boxElm: Circle | Rect;\t// border element (rect or circle)\r\n\tprivate nameElm: Text;\t// text element\r\n\tprivate pinElm: Rect | null = null;\t// pin element (rect)\r\n\tpublic lines: FlowLine[]; // 進入/離開此節點的流程線\r\n\r\n\t/**\r\n\t * @param flowView FlowView\r\n\t * @param json 流程節點資料\r\n\t */ \r\n\tconstructor(flowView: FlowView, json: Json) {\r\n\t\tthis.self = this;\r\n\t\tthis.flowView = flowView;\r\n\t\tthis.svg = flowView.svg;\r\n\t\tthis.json = Object.assign({\r\n\t\t\tName: 'Node',\r\n\t\t\tNodeType: NodeTypeEstr.Node,\r\n\t\t\tPosX: json.PosX || 100,\r\n\t\t\tPosY: json.PosY || 100,\r\n\t\t\t//Width: 100,\t//??\r\n\t\t\t//Height: 50,\t//??\r\n\t\t}, json);\r\n\r\n\t\t//set instance variables\r\n\t\tthis.lines = [];\r\n\r\n\t\tconst nodeType: NodeTypeEstr = this.json.NodeType;\r\n\t\tlet cssClass: string = '';\r\n\t\tlet nodeText: string = '';\r\n\r\n\t\t// 建立一個 group(有x,y, 沒有大小, 含文字的節點框線), 才能控制文字拖拉\r\n\t\tthis.elm = this.svg\r\n\t\t\t.group()\r\n\t\t\t.attr('data-id', json.Id)\r\n\r\n\t\tconst startEnd: boolean = this._isStartEnd();\r\n\t\tif (startEnd) {\r\n\t\t\tif (nodeType == NodeTypeEstr.Start) {\r\n\t\t\t\tcssClass = 'xf-start';\r\n\t\t\t\tnodeText = NodeTypeEstr.Start;\r\n\t\t\t} else {\r\n\t\t\t\tcssClass = 'xf-end';\r\n\t\t\t\tnodeText = NodeTypeEstr.End;\r\n\t\t\t}\r\n\r\n\t\t\t//circle大小不填, 由css設定, 這時radius還沒確定, 不能move(因為會用到radius)\r\n\t\t\tthis.boxElm = this.elm.circle()\r\n\t\t\t\t.addClass(cssClass);\r\n\r\n\t\t\t//移動circle時會參考radius, 所以先更新, 從css讀取radius, 而不是從circle建立的屬性 !!\r\n\t\t\tlet style: CSSStyleDeclaration = window.getComputedStyle(this.boxElm.node);\t//不能直接讀取circle屬性\r\n\t\t\tlet radius: number = parseFloat(style.getPropertyValue('r'));\t//轉浮點\r\n\t\t\tthis.boxElm.attr('r', radius);\t//reset radius\r\n\r\n\t\t\t//起迄節點不會改變文字和大小, 直接設定\r\n\t\t\tthis.nameElm = this.elm.text(nodeText)\r\n\t\t\t\t.addClass(cssClass + '-text')\r\n\t\t\t\t.attr({ 'text-anchor': 'middle', 'dominant-baseline': 'middle' }); //水平垂直置中\r\n\r\n\t\t\t//this.nameElm.center(radius, radius);\r\n\r\n\t\t\t//let width = radius * 2;\r\n\t\t\t//this.boxElm.size(width, width);\r\n\t\t\t//this.width = width;\t\t//寫入width, 供後面計算位置\r\n\t\t\t//this.height = width;\t//畫流程線時會用到\r\n\t\t} else {\r\n\t\t\tnodeText = this.json.Name;\r\n\t\t\tcssClass = 'xf-node';\r\n\t\t\tthis.boxElm = this.elm.rect()\r\n\t\t\t\t.addClass(cssClass)\r\n\t\t\t\t.attr({ 'text-anchor': 'middle', 'dominant-baseline': 'middle' }); //水平垂直置中\r\n\t\t\t//.move(this.json.PosX, this.json.PosY);\r\n\r\n\t\t\tthis.nameElm = this.elm.text('')\r\n\t\t\t\t.addClass(cssClass + '-text');\r\n\t\t\t//.font({ anchor: 'middle' })\r\n\t\t\t//.attr({ 'text-anchor': 'middle' }); // 確保對齊生效\r\n\r\n\t\t\t//一般節點依文字內容自動調整大小\r\n\t\t\tthis.setName(nodeText, false);\r\n\t\t}\r\n\r\n\t\tthis.elm.move(this.json.PosX, this.json.PosY);\r\n\r\n\t\t//add 連接點小方塊(pin) if need(在文字右側)\r\n\t\tif (nodeType != NodeTypeEstr.End) {\r\n\t\t\tthis.pinElm = this.elm\r\n\t\t\t\t.rect(this.PinWidth, this.PinWidth)\r\n\t\t\t\t.addClass('xf-pin');\r\n\t\t\tthis._setPinPos();\r\n\t\t}\r\n\r\n\t\tthis._setEvent();\r\n\t}\r\n\r\n\tgetLines(): FlowLine[] {\r\n\t\treturn this.lines;\r\n\t}\r\n\r\n\t//是否為起迄節點\r\n\tprivate _isStartEnd(): boolean {\r\n\t\treturn (this.json.NodeType == NodeTypeEstr.Start || this.json.NodeType == NodeTypeEstr.End);\r\n\t}\r\n\r\n\tgetNodeType(): NodeTypeEstr {\r\n\t\treturn this.json.NodeType;\r\n\t}\r\n\r\n\tgetPos(): Point {\r\n\t\tlet elm: any = this.elm;\r\n\t\treturn { x: elm.x(), y: elm.y() };\r\n\t}\r\n\r\n\tgetSize(): { w: number, h: number } {\r\n\t\tlet elm: any = this.boxElm;\r\n\t\treturn { w: elm.width(), h: elm.height() };\r\n\t}\r\n\r\n\tgetCenter(): Point {\r\n\t\tlet elm: any = this.boxElm;\r\n\t\treturn { x: elm.cx(), y: elm.cy() };\r\n\t}\r\n\r\n\t//set pin position\r\n\tprivate _setPinPos(): void {\r\n\t\t//連接點 右移3px\r\n\t\tif (!this.pinElm) return;\r\n\r\n\t\tlet bbox: any = this.nameElm.bbox();\r\n\t\tlet center: Point = this.getCenter();\r\n\t\t// pin move to the right side of the text bounding box, offset by 3px\r\n\t\tthis.pinElm.move(center.x + bbox.width / 2 + 3, center.y - 5);\r\n\t}\r\n\r\n\t//node event\r\n\tprivate _setEvent(): void {\r\n\t\t//enable right click menu\r\n\t\tlet me: FlowNode = this;\t//FlowNode\r\n\t\tlet flowView: FlowView = this.flowView;\r\n\r\n\t\tthis.elm.node.addEventListener(MouseEstr.ContextMenu, function (e: MouseEvent) {\r\n\t\t\te.preventDefault(); // 阻止瀏覽器的右鍵功能表\r\n\t\t\tif (flowView.fnShowMenu)\r\n\t\t\t\tflowView.fnShowMenu(e, true, me);\r\n\t\t});\r\n\r\n\t\t//set node draggable, drag/drop 為 boxElm, 不是 elm(group) !!\r\n\t\t//draggable 來自 svg.draggable.js\r\n\t\tthis.elm.draggable().on(MouseEstr.DragMove, function (e: Event) {\r\n\t\t\tif (!flowView.isEdit) return;\r\n\r\n\t\t\tme._drawLines();\r\n\t\t}).on(MouseEstr.DragEnd, function (e: Event) {\r\n\t\t\tif (!flowView.isEdit) return;\r\n\r\n\t\t\tconst { x, y } = (e as CustomEvent).detail.box;\r\n\t\t\t//console.log(`x=${x}, y=${y}`);\r\n\r\n\t\t\t//trigger event\r\n\t\t\tif (me.flowView.fnMoveNode)\r\n\t\t\t\tme.flowView.fnMoveNode(me, x, y);\r\n\t\t});\r\n\r\n\t\t//set connector draggable\r\n\t\tthis._setEventPin();\r\n\t}\r\n\r\n\tprivate _drawLines(): void {\r\n\t\tthis.lines.forEach(line => line.render());\r\n\t}\r\n\r\n\t//set event of node connector\r\n\t//pin表示起始節點內的連接點\r\n\tprivate _setEventPin(): void {\r\n\t\tif (!this.pinElm)\r\n\t\t\treturn;\r\n\r\n\t\tlet fromDom: SVGGElement;\r\n\t\tlet startX: number, startY: number;\r\n\t\tlet tempLine: any;\r\n\t\tlet toElm: any = null;\r\n\t\tlet me: FlowNode = this;\t//flowNode\r\n\t\tlet flowView: FlowView = this.flowView;\r\n\r\n\t\t// 啟用 pinElm 的拖拽功能, 使用箭頭函數時 this 會指向類別實例 !!, 使用 function則會指向 pinElm !!\r\n\t\tthis.pinElm.draggable().on(MouseEstr.DragStart, (e: Event) => {\r\n\t\t\tif (!flowView.isEdit) return;\r\n\r\n\t\t\t// 初始化線條\r\n\t\t\t// @ts-ignore\r\n\t\t\tlet { x, y } = me.pinElm.rbox(me.svg); // 使用SVG畫布的座標系\r\n\t\t\tstartX = x;\r\n\t\t\tstartY = y;\r\n\t\t\tfromDom = me.self.elm.node;\t//this.self指向這個FlowNode\r\n\r\n\t\t\ttempLine = me.svg.line(startX, startY, startX, startY)\r\n\t\t\t\t.addClass('xf-line off');\r\n\r\n\t\t\tflowView.drawLineStart(me.self);\r\n\r\n\t\t}).on(MouseEstr.DragMove, (e: Event) => {\r\n\t\t\tif (!flowView.isEdit) return;\r\n\r\n\t\t\t//阻止 connector 移動\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// 獲取拖拽的目標座標（相對於 SVG 畫布）\r\n\t\t\tlet { x, y } = (e as CustomEvent).detail.box;\r\n\t\t\tlet endX: number = x;\r\n\t\t\tlet endY: number = y;\r\n\r\n\t\t\t// 更新線條的終點\r\n\t\t\ttempLine.plot(startX, startY, endX, endY);\r\n\r\n\t\t\t// 檢查座標值是否有效\r\n\t\t\tif (isFinite(endX) && isFinite(endY)) {\r\n\t\t\t\t// 將 SVG 座標轉換為檢視座標\r\n\t\t\t\tlet svgRect: DOMRect = me.svg.node.getBoundingClientRect();\r\n\t\t\t\tlet viewPortX: number = endX + svgRect.x;\r\n\t\t\t\tlet viewPortY: number = endY + svgRect.y;\r\n\r\n\t\t\t\t// 檢查是否懸停在節點上\r\n\t\t\t\tlet overDom: Element | undefined = document.elementsFromPoint(viewPortX, viewPortY)\r\n\t\t\t\t\t.find(dom => dom != fromDom && (dom.classList.contains('xf-node') || dom.classList.contains('xf-end')));\r\n\t\t\t\tif (overDom) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tlet overElm: any = overDom.instance;\t//svg element\r\n\t\t\t\t\tif (toElm !== overElm) {\r\n\t\t\t\t\t\tif (toElm)\r\n\t\t\t\t\t\t\tme._markNode(toElm, false);\r\n\t\t\t\t\t\ttoElm = overElm;\r\n\t\t\t\t\t\tme._markNode(toElm, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (toElm) {\r\n\t\t\t\t\tme._markNode(toElm, false);\r\n\t\t\t\t\ttoElm = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}).on(MouseEstr.DragEnd, (e: Event) => {\r\n\t\t\tif (!flowView.isEdit) return;\r\n\r\n\t\t\t// 檢查座標值是否有效\r\n\t\t\tif (toElm) {\r\n\t\t\t\tme._markNode(toElm, false);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tlet id: string = toElm.parent().node.dataset.id;\r\n\t\t\t\tlet json: any = flowView.drawLineEnd(flowView.idToNode(id) as FlowNode);\r\n\t\t\t\ttoElm = null;\r\n\r\n\t\t\t\t//trigger event\r\n\t\t\t\tif (flowView.fnAfterAddLine)\r\n\t\t\t\t\tflowView.fnAfterAddLine(json);\r\n\t\t\t}\r\n\t\t\ttempLine.remove();\r\n\t\t});\r\n\t}\r\n\r\n\t//high light node\r\n\tprivate _markNode(elm: any, status: boolean): void {\r\n\t\tif (status) {\r\n\t\t\telm.node.classList.add('on');\r\n\t\t} else {\r\n\t\t\telm.node.classList.remove('on');\r\n\t\t}\r\n\t}\r\n\r\n\t//id記錄在 group elm !!\r\n\tgetId(): string {\r\n\t\treturn String(this.json.Id);\r\n\t}\r\n\r\n\taddLine(line: FlowLine): void {\r\n\t\tthis.lines.push(line);\r\n\t}\r\n\r\n\tdeleteLine(line: FlowLine): void {\r\n\t\tlet index: number = this.lines.findIndex(item => item.json.Id == line.json.Id);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.lines.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tgetName(): string {\r\n\t\treturn this.nameElm.text();\r\n\t}\r\n\r\n\t/**\r\n\t * set node name only for TypeNode, 考慮多行\r\n\t * called by initial, 前端改變node name\r\n\t * @param name {string} \r\n\t * @param drawLine {boolean} re-draw line or not\r\n\t */ \r\n\tsetName(name: string, drawLine: boolean): void {\r\n\t\t// 更新文字內容, 後端傳回會加上跳脫字元, js 2021才有 replaceAll, 所以自製\r\n\t\t// @ts-ignore\r\n\t\tlet me = this;\r\n\t\tlet lines: string[] = _Str.replaceAll(name, '\\\\n', '\\n').split('\\n');\r\n\t\tthis.nameElm.clear().text(function (add: any) {\r\n\t\t\tlines.forEach((line, i) => {\r\n\t\t\t\tif (i > 0)\r\n\t\t\t\t\tadd.tspan(line).newLine().dy(me.LineHeight);\r\n\t\t\t\telse\r\n\t\t\t\t\tadd.tspan(line);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// 獲取新文字尺寸\r\n\t\tconst bbox: any = this.nameElm.bbox();\r\n\r\n\t\t// 更新矩形尺寸\r\n\t\tlet width: number = Math.max(this.MinWidth, bbox.width + this.PadLeft * 2 + this.PinWidth + this.PinGap * 2);\r\n\t\tlet height: number = Math.max(this.MinHeight, bbox.height + this.PadTop * 2);\r\n\t\tthis.boxElm.size(Math.round(width), Math.round(height));\r\n\r\n\t\t// 重新居中文字\r\n\t\tthis.nameElm.center(this.boxElm.cx(), this.boxElm.cy());\r\n\t\t\r\n\t\t// Re-set pin position since node size and center might have changed\r\n\t\tthis._setPinPos();\r\n\r\n\t\tif (drawLine)\r\n\t\t\tthis._drawLines();\r\n\t}\r\n}//class FlowNode\r\n\r\n//相關名詞使用 fromNode/toNode 比較合理\r\n/**\r\n  屬性:\r\n    flowView: FlowView object\r\n    json: flowLine json, 欄位與後端XgFlowE相同: Id(不變), FromNodeId, ToNodeId, FromType(不變), Label\r\n    svg: svg\r\n    path: line path\r\n    path2: for right menu\r\n\tarrow: 末端箭頭\r\n\tlabelElm: 顯示label\r\n    fromNode: from node\r\n    toNode: to node\r\n    //fromType: 起點位置, A(auto),V(上下),H(左右)\r\n    //label: 流程線上的文字, 一般是執行條件\r\n    //isFromTypeAuto:\r\n    isFromTypeV: boolean\r\n    isFromTypeH: boolean\r\n  @param flowView {FlowView}\r\n  @param json {any} flowLine 組態 for initial\r\n  @param fromNode {FlowNode?} 如果有值則使用此節點\r\n  @param toNode {FlowNode?} 同 fromNode\r\n*/\r\n\r\nexport class FlowLine {\r\n\r\n\t// Cnt:中心點, Side:節點邊界, 數值20大約1公分\r\n\t// MaxCntCnt1: 中心點到中心點的最大距離 for 1線段 (表示在同一水平/垂直位置), 同時用於折線圓角半徑\r\n\tprivate readonly MaxCntCnt1: number = 6;\r\n\t// MinSideCnt2: 邊到中心的最小距離 for 2線段\r\n\tprivate readonly MinSideCnt2: number = 16;\r\n\t// MinCntCnt3: 中心點到中心點的最小距離 for 3線段 (2節點的最小距離, 大於此值可建立line(1,3線段))\r\n\tprivate readonly MinCntCnt3: number = 20;\r\n\t// MinSideSide13: 邊到邊的最小距離 for 1,3線段 (3線段以2倍距離判斷)\r\n\tprivate readonly MinSideSide13: number = 12;\r\n\r\n\t// 末端箭頭\r\n\tprivate readonly ArrowLen: number = 10; \t// 長度\r\n\tprivate readonly ArrowWidth: number = 5; \t// 寬度\t\r\n\r\n\t// line type, 起點位置\r\n\tprivate readonly FromTypeAuto: string = 'A';\t// 自動\r\n\tprivate readonly FromTypeV: string = 'V';\t// 垂直(上下)\r\n\tprivate readonly FromTypeH: string = 'H';\t// 水平(左右)\r\n\t\r\n\tprivate flowView: FlowView;\r\n\tpublic json: Json;\r\n\tprivate svg: Svg;\r\n\tprivate path: Path; // line path\r\n\tprivate path2: Path; // for right menu click area\r\n\tprivate arrow: Path; // 末端箭頭\r\n\tprivate labelElm: Text; // 顯示label\r\n\r\n\tpublic fromNode: FlowNode;\r\n\tpublic toNode: FlowNode;\r\n\tpublic fromType: string;\r\n\tpublic isFromTypeV: boolean;\r\n\tpublic isFromTypeH: boolean;\r\n\r\n\tconstructor(flowView: FlowView, json: Json, fromNode?: FlowNode, toNode: FlowNode | null = null) {\r\n\t\t\r\n\t\tjson = json || {};\r\n\t\tjson.FromType = json.FromType || this.FromTypeAuto;\r\n\t\tjson.Label = json.Label || '';\r\n\t\tjson.Id = json.Id || flowView.getNewLineId();\r\n\r\n\t\t//#region set instance variables\r\n\t\tthis.flowView = flowView;\r\n\t\tthis.json = json;\r\n\t\tthis.svg = flowView.svg;\r\n\t\tthis.fromNode = fromNode || this.flowView.idToNode(json.FromNodeId)!;\r\n\t\tthis.toNode = toNode || this.flowView.idToNode(json.ToNodeId)!;\r\n\t\t//this.label = label || '';\r\n\r\n\t\t//path\r\n\t\tthis.path = this.svg.path('')\r\n\t\t\t.attr('data-id', json.Id)\r\n\t\t\t.addClass('xf-line');\r\n\t\t// 透明的寬線作為觸發區域（放在下面）\r\n\t\tthis.path2 = this.svg.path('')\r\n\t\t\t.attr('data-id', json.Id)\r\n\t\t\t.fill('none')\r\n\t\t\t.stroke({ width: 10, color: 'transparent' }) // 注意：透明但可接收事件\r\n\t\t\t.attr({ 'pointer-events': 'stroke', 'cursor': 'pointer' });       // 只針對 stroke 有事件\r\n\r\n\t\t//label\r\n\t\tthis.labelElm = this.svg.text(json.Label)\r\n\t\t\t.addClass('xf-line-text')\r\n\t\t\t.font({ anchor: 'middle' });\r\n\r\n\t\t// 用來儲存箭頭的路徑\r\n\t\tthis.arrow = this.svg.path('').addClass('xf-arrow');\r\n\t\t//this.arrow2 = this.svg.path('').addClass('xf-arrow');\r\n\r\n\t\tthis.fromType = ''; // Initialized in _setFromTypeVars\r\n\t\tthis.isFromTypeV = false; // Initialized in _setFromTypeVars\r\n\t\tthis.isFromTypeH = false; // Initialized in _setFromTypeVars\r\n\r\n\t\tthis._setFromTypeVars(json.FromType);\r\n\t\t//#endregion\r\n\r\n\t\t//add line to from/to node\r\n\t\tthis.fromNode.addLine(this);\r\n\t\tthis.toNode.addLine(this);\r\n\t\tthis._setEvent();\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tprivate _setFromTypeVars(fromType: string): void {\r\n\t\tfromType = fromType || this.FromTypeAuto;\r\n\t\tthis.json.FromType = fromType; // Update json too\r\n\t\tthis.fromType = fromType;\r\n\t\tthis.isFromTypeV = (fromType == this.FromTypeV);\r\n\t\tthis.isFromTypeH = (fromType == this.FromTypeH);\r\n\t\t//this.isFromTypeAuto = (!this.isFromTypeV && !this.isFromTypeH) || (fromType == this.FromTypeAuto);\r\n\t\tlet dom = this.path.node;\r\n\t\tif (fromType == this.FromTypeAuto)\r\n\t\t\tdom.classList.remove('xf-way');\r\n\t\telse\r\n\t\t\tdom.classList.add('xf-way');\r\n\t}\r\n\r\n\tprivate _setEvent(): void {\r\n\t\tlet me: FlowLine = this;\t//FlowLine\r\n\t\tthis.path2.node.addEventListener(MouseEstr.ContextMenu, function (event: MouseEvent) {\r\n\t\t\tevent.preventDefault(); // 阻止瀏覽器的右鍵功能表\r\n\t\t\tif (me.flowView.fnShowMenu)\r\n\t\t\t\tme.flowView.fnShowMenu(event, false, me);\r\n\t\t});\r\n\t}\r\n\r\n\t/*\r\n\t//?? from text element\r\n\tgetLabel() {\r\n\t\treturn this.label;\r\n\t}\r\n\t*/\r\n\r\n\tsetLabel(label: string): void {\r\n\t\tthis.labelElm.text(label);\r\n\t}\r\n\r\n\t/**\r\n\t * 依次考慮使用1線段、2線段、3線段\r\n\t * public for FlowView.js\r\n\t */\r\n\trender(): void {\r\n\r\n\t\t//#region 計算流程線render位置\r\n\t\t//=== from Node ===\r\n\t\t// 位置和尺寸, x/y為左上方座標\r\n\t\tconst fromPos: Point = this.fromNode.getPos();\r\n\t\tconst fromSize: { w: number, h: number } = this.fromNode.getSize();\r\n\t\tconst fromCnt: Point = { x: fromPos.x + fromSize.w / 2, y: fromPos.y + fromSize.h / 2 };\r\n\t\t// 四個邊的中間點\r\n\t\tconst fromUp: Point = { x: fromPos.x + fromSize.w / 2, y: fromPos.y }; // 上邊中點\r\n\t\tconst fromDown: Point = { x: fromPos.x + fromSize.w / 2, y: fromPos.y + fromSize.h };\r\n\t\tconst fromLeft: Point = { x: fromPos.x, y: fromPos.y + fromSize.h / 2 };\r\n\t\tconst fromRight: Point = { x: fromPos.x + fromSize.w, y: fromPos.y + fromSize.h / 2 };\r\n\r\n\t\t//=== to Node ===\r\n\t\tconst toPos: Point = this.toNode.getPos();\r\n\t\tconst toSize: { w: number, h: number } = this.toNode.getSize();\r\n\t\tconst toCnt: Point = { x: toPos.x + toSize.w / 2, y: toPos.y + toSize.h / 2 };\r\n\t\t// 四個邊的中間點\r\n\t\tconst toUp: Point = { x: toPos.x + toSize.w / 2, y: toPos.y };\r\n\t\tconst toDown: Point = { x: toPos.x + toSize.w / 2, y: toPos.y + toSize.h };\r\n\t\tconst toLeft: Point = { x: toPos.x, y: toPos.y + toSize.h / 2 };\r\n\t\tconst toRight: Point = { x: toPos.x + toSize.w, y: toPos.y + toSize.h / 2 };\r\n\r\n\t\t/** ToNode 在右邊 */\r\n\t\tconst isToRight: boolean = toCnt.x > fromCnt.x; \t// toNode 在 fromNode 的右側\r\n\t\t/** ToNode 在下面 */\r\n\t\tconst isToDown: boolean = toCnt.y > fromCnt.y; \t// toNode 在 fromNode 的下方\r\n\r\n\t\t//計算2個中心點距離\r\n\t\tconst cntCntSize: { w: number, h: number } = { w: Math.abs(fromCnt.x - toCnt.x), h: Math.abs(fromCnt.y - toCnt.y) };\r\n\r\n\t\t/** 是否符合2中心點之間最小(水平)距離 for 1線段 */\r\n\t\tconst isMaxCntCnt1H: boolean = cntCntSize.w <= this.MaxCntCnt1;\r\n\t\t/** 是否符合2中心點之間最小(垂直)距離 for 1線段 */\r\n\t\tconst isMaxCntCnt1V: boolean = cntCntSize.h <= this.MaxCntCnt1;\r\n\r\n\t\t/** 是否符合起迄點邊線-中心點之間最小距離(水平方向) for 2線段 */\r\n\t\t// (abs distance) - (half from node width) >= MinSideCnt2\r\n\t\tconst isMinSideCnt2H: boolean = cntCntSize.w - fromSize.w / 2 >= this.MinSideCnt2;\r\n\t\t/** 是否符合起迄點邊線-中心點之間最小距離(垂直方向) for 2線段 */\r\n\t\t// (abs distance) - (half to node height) >= MinSideCnt2\r\n\t\tconst isMinSideCnt2V: boolean = cntCntSize.h - toSize.h / 2 >= this.MinSideCnt2;\r\n\t\t/** 是否符合起迄點中心點-邊線之間最小距離(水平方向) for 2線段 */\r\n\t\t// (abs distance) - (half to node width) >= MinSideCnt2\r\n\t\tconst isMinCntSide2H: boolean = cntCntSize.w - toSize.w / 2 >= this.MinSideCnt2;\r\n\t\t/** 是否符合起迄點中心點-邊線之間最小距離(垂直方向) for 2線段 */\r\n\t\t// (abs distance) - (half from node height) >= MinSideCnt2\r\n\t\tconst isMinCntSide2V: boolean = cntCntSize.h - fromSize.h / 2 >= this.MinSideCnt2;\r\n\r\n\t\t// Side to Side distance (actual gap between nodes)\r\n\t\tconst sideSideH: number = isToRight ? toLeft.x - fromRight.x : fromLeft.x - toRight.x;\r\n\t\tconst sideSideV: number = isToDown ? toUp.y - fromDown.y : fromUp.y - toDown.y;\r\n\r\n\t\t/** 是否符合垂直/水平最小距離, 字尾H/V表示距離量測方向 */\r\n\t\tconst isMinCntCnt3H: boolean = sideSideH >= this.MinCntCnt3;\r\n\t\t/** 是否符合垂直/水平最小距離, 字尾H/V表示距離量測方向 */\r\n\t\tconst isMinCntCnt3V: boolean = sideSideV >= this.MinCntCnt3;\r\n\r\n\t\t/** 是否符合邉-邊(水平)最小距離, for 1線段 */\r\n\t\tconst isMinSideSide1H: boolean = sideSideH >= this.MinSideSide13;\r\n\t\t/** 是否符合邉-邊(垂直)最小距離, for 1線段 */\r\n\t\tconst isMinSideSide1V: boolean = sideSideV >= this.MinSideSide13;\r\n\r\n\t\t/** 是否符合邉-邊(水平)最小距離, for 3線段 */\r\n\t\tconst isMinSideSide3H: boolean = sideSideH >= this.MinSideSide13 * 2;\r\n\t\t/** 是否符合邉-邊(垂直)最小距離, for 3線段 */\r\n\t\tconst isMinSideSide3V: boolean = sideSideV >= this.MinSideSide13 * 2;\r\n\r\n\t\t//判斷線段數目(1,2,3), 有4個象限, 先考慮上下再左右\r\n\t\tlet fromPnt: Point;\r\n\t\tlet toPnt: Point;\r\n\t\tlet points: Point[];\r\n\t\tlet textStartAry: number = 0;\t//label start array index in points\r\n\t\t//let pathStr;\r\n\t\tif (!this.isFromTypeH && isMaxCntCnt1H && isMinSideSide1V) {\r\n\t\t\t//1線段-垂直\r\n\t\t\tif (isToDown) {\r\n\t\t\t\tfromPnt = fromDown;\r\n\t\t\t\ttoPnt = toUp;\r\n\t\t\t} else {\r\n\t\t\t\tfromPnt = fromUp;\r\n\t\t\t\ttoPnt = toDown;\r\n\t\t\t}\r\n\t\t\t// Points: [fromPnt, toPnt's X, fromPnt's Y] -> This is for a direct vertical line\r\n\t\t\t// Corrected to: [fromPnt, toPnt]\r\n\t\t\tpoints = [fromPnt, toPnt];\r\n\t\t\ttextStartAry = 0;\r\n\t\t} else if (!this.isFromTypeV && isMaxCntCnt1V && isMinSideSide1H) {\r\n\t\t\t//1線段-水平\r\n\t\t\tif (isToRight) {\r\n\t\t\t\tfromPnt = fromRight;\r\n\t\t\t\ttoPnt = toLeft;\r\n\t\t\t} else {\r\n\t\t\t\tfromPnt = fromLeft;\r\n\t\t\t\ttoPnt = toRight;\r\n\t\t\t}\r\n\t\t\t// Corrected to: [fromPnt, toPnt]\r\n\t\t\tpoints = [fromPnt, toPnt];\r\n\t\t\ttextStartAry = 0;\r\n\t\t\t//isMinCntSide2H\r\n\t\t} else if (!this.isFromTypeV && isMinSideCnt2H && isMinCntSide2V) {\r\n\t\t\t//2線段-水平(先考慮) - L-shape, start H then V\r\n\t\t\tfromPnt = isToRight ? fromRight : fromLeft;\r\n\t\t\ttoPnt = isToDown ? toUp : toDown;\r\n\t\t\tpoints = [fromPnt, { x: toPnt.x, y: fromPnt.y }, toPnt];\r\n\t\t\ttextStartAry = 0; // Text is usually on the second segment for 2-segment lines in this code's logic, but here it's on the first segment (fromPnt to the corner) which is horizontal. The logic below sets it to the first non-corner segment. Let's stick to the original code's intention.\r\n\t\t} else if (!this.isFromTypeH && isMinSideCnt2V && isMinCntSide2H) {\r\n\t\t\t//2線段-垂直 - L-shape, start V then H\r\n\t\t\tfromPnt = isToDown ? fromDown : fromUp;\r\n\t\t\ttoPnt = isToRight ? toLeft : toRight;\r\n\t\t\tpoints = [fromPnt, { x: fromPnt.x, y: toPnt.y }, toPnt];\r\n\t\t\ttextStartAry = 0;\r\n\t\t} else if (!this.isFromTypeH && isMinSideSide3V && isMinCntCnt3V) {\r\n\t\t\t//3線段-垂直(直線型) - Z-shape, V-H-V\r\n\t\t\tif (isToDown) {\r\n\t\t\t\tfromPnt = fromDown;\r\n\t\t\t\ttoPnt = toUp;\r\n\t\t\t} else {\r\n\t\t\t\tfromPnt = fromUp;\r\n\t\t\t\ttoPnt = toDown;\r\n\t\t\t}\r\n\r\n\t\t\tlet midY: number = (fromPnt.y + toPnt.y) / 2;\r\n\t\t\tpoints = [fromPnt, { x: fromPnt.x, y: midY }, { x: toPnt.x, y: midY }, toPnt];\r\n\t\t\ttextStartAry = 1; // Middle segment (Horizontal)\r\n\t\t} else if (!this.isFromTypeV && isMinSideSide3H && isMinCntCnt3H) {\r\n\t\t\t//3線段-水平(直線型) - Z-shape, H-V-H\r\n\t\t\tif (isToRight) {\r\n\t\t\t\tfromPnt = fromRight;\r\n\t\t\t\ttoPnt = toLeft;\r\n\t\t\t} else {\r\n\t\t\t\tfromPnt = fromLeft;\r\n\t\t\t\ttoPnt = toRight;\r\n\t\t\t}\r\n\r\n\t\t\tlet midX: number = (fromPnt.x + toPnt.x) / 2;\r\n\t\t\tpoints = [fromPnt, { x: midX, y: fromPnt.y }, { x: midX, y: toPnt.y }, toPnt];\r\n\t\t\ttextStartAry = 1; // Middle segment (Vertical)\r\n\t\t} else if (!this.isFromTypeH && isMinCntCnt3H) {\r\n\t\t\t//3線段-垂直(ㄇ字型) - U-shape, V-H-V (wrap around)\r\n\t\t\tlet midY: number;\r\n\t\t\tif (isToDown) {\r\n\t\t\t\tfromPnt = fromDown;\r\n\t\t\t\ttoPnt = toDown;\r\n\t\t\t\tmidY = Math.max(fromPnt.y, toPnt.y) + this.MinSideSide13;\r\n\t\t\t} else {\r\n\t\t\t\tfromPnt = fromUp;\r\n\t\t\t\ttoPnt = toUp;\r\n\t\t\t\tmidY = Math.min(fromPnt.y, toPnt.y) - this.MinSideSide13;\r\n\t\t\t}\r\n\r\n\t\t\tpoints = [fromPnt, { x: fromPnt.x, y: midY }, { x: toPnt.x, y: midY }, toPnt];\r\n\t\t\ttextStartAry = 1; // Middle segment (Horizontal)\r\n\t\t} else if (!this.isFromTypeV && isMinCntCnt3V) {\r\n\t\t\t//3線段-水平(ㄇ字型) - U-shape, H-V-H (wrap around)\r\n\t\t\tlet midX: number;\r\n\t\t\tif (isToRight) {\r\n\t\t\t\tfromPnt = fromRight;\r\n\t\t\t\ttoPnt = toRight;\r\n\t\t\t\tmidX = Math.max(fromPnt.x, toPnt.x) + this.MinSideSide13;\r\n\t\t\t} else {\r\n\t\t\t\tfromPnt = fromLeft;\r\n\t\t\t\ttoPnt = toLeft;\r\n\t\t\t\tmidX = Math.min(fromPnt.x, toPnt.x) - this.MinSideSide13;\r\n\t\t\t}\r\n\t\t\t//let midX = isToRight ? Math.max(fromPnt.x, toPnt.x) + this.MinCntCnt3 : Math.min(fromPnt.x, toPnt.x) - this.MinSideSide;\r\n\t\t\tpoints = [fromPnt, { x: midX, y: fromPnt.y }, { x: midX, y: toPnt.y }, toPnt];\r\n\t\t\ttextStartAry = 1; // Middle segment (Vertical)\r\n\t\t} else {\r\n\t\t\t//其他狀況: 用直線(非折線)連接起迄點 (Direct line)\r\n\t\t\tif (isToDown) {\r\n\t\t\t\tif (isToRight) {\r\n\t\t\t\t\tfromPnt = !this.isFromTypeH ? fromDown : fromRight;\r\n\t\t\t\t\ttoPnt = toLeft;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfromPnt = !this.isFromTypeH ? fromDown : fromLeft;\r\n\t\t\t\t\ttoPnt = toRight;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (isToRight) {\r\n\t\t\t\t\tfromPnt = !this.isFromTypeH ? fromUp : fromRight;\r\n\t\t\t\t\ttoPnt = toLeft;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfromPnt = !this.isFromTypeH ? fromUp : fromLeft;\r\n\t\t\t\t\ttoPnt = toRight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpoints = [fromPnt, toPnt];\r\n\t\t\ttextStartAry = 0;\r\n\t\t}\r\n\t\t//#endregion\r\n\r\n\t\t// 繪製流程線\r\n\t\tthis._drawLine(points);\r\n\r\n\t\t//move label - center of the segment pointed by textStartAry\r\n\t\tconst p1: Point = points[textStartAry];\r\n\t\tconst p2: Point = points[textStartAry + 1];\r\n\t\tthis.labelElm.center((p1.x + p2.x) / 2, (p1.y + p2.y) / 2);\r\n\t}\r\n\r\n\t/**\r\n\t * 繪製流程線部分\r\n\t */\r\n\tprivate _drawLine(points: Point[]): void {\r\n\t\t// 生成帶有圓角的折線路徑\r\n\t\tlet pathStr: string = `M ${points[0].x} ${points[0].y}`; // 移動到起點\r\n\t\tconst pntLen: number = points.length;\r\n\t\tconst radius: number = this.MaxCntCnt1;\r\n\r\n\t\tfor (let i = 1; i < pntLen; i++) {\r\n\t\t\tconst prevPnt: Point = points[i - 1];\r\n\t\t\tconst nowPnt: Point = points[i];\r\n\r\n\t\t\t// 計算圓角的路徑\r\n\t\t\tif (i < pntLen - 1) {\r\n\t\t\t\tconst nextPnt: Point = points[i + 1];\r\n\r\n\t\t\t\t// 計算方向向量\r\n\t\t\t\tconst vec1: Point = {\r\n\t\t\t\t\tx: nowPnt.x - prevPnt.x,\r\n\t\t\t\t\ty: nowPnt.y - prevPnt.y\r\n\t\t\t\t};\r\n\t\t\t\tconst vec2: Point = {\r\n\t\t\t\t\tx: nextPnt.x - nowPnt.x,\r\n\t\t\t\t\ty: nextPnt.y - nowPnt.y\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// 單位化向量\r\n\t\t\t\t//const len1 = Math.sqrt(vec1.x ** 2 + vec1.y ** 2);\r\n\t\t\t\t//const len2 = Math.sqrt(vec2.x ** 2 + vec2.y ** 2);\r\n\t\t\t\tconst len1: number = Math.sqrt(Math.pow(vec1.x, 2) + Math.pow(vec1.y, 2));\r\n\t\t\t\tconst len2: number = Math.sqrt(Math.pow(vec2.x, 2) + Math.pow(vec2.y, 2));\r\n\r\n\t\t\t\tconst unitVec1: Point = { x: vec1.x / len1, y: vec1.y / len1 };\r\n\t\t\t\tconst unitVec2: Point = { x: vec2.x / len2, y: vec2.y / len2 };\r\n\r\n\t\t\t\t// 計算圓角的起始點和結束點\r\n\t\t\t\tconst arcStartX: number = nowPnt.x - unitVec1.x * radius;\r\n\t\t\t\tconst arcStartY: number = nowPnt.y - unitVec1.y * radius;\r\n\t\t\t\tconst arcEndX: number = nowPnt.x + unitVec2.x * radius;\r\n\t\t\t\tconst arcEndY: number = nowPnt.y + unitVec2.y * radius;\r\n\r\n\t\t\t\t// 添加直線到圓角的起始點\r\n\t\t\t\tpathStr += ` L ${arcStartX} ${arcStartY}`;\r\n\r\n\t\t\t\t// 判斷圓弧的方向（順時針或逆時針）：使用叉積判斷\r\n\t\t\t\tconst cross: number = unitVec1.x * unitVec2.y - unitVec1.y * unitVec2.x;\r\n\t\t\t\tconst sweepFlag: number = cross < 0 ? 0 : 1;\r\n\r\n\t\t\t\t// 添加圓角（A 指令）\r\n\t\t\t\tpathStr += ` A ${radius} ${radius} 0 0 ${sweepFlag} ${arcEndX} ${arcEndY}`;\r\n\t\t\t} else {\r\n\t\t\t\t// 最後一段直線\r\n\t\t\t\tpathStr += ` L ${nowPnt.x} ${nowPnt.y}`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 繪製流程線, path2 for 增加右鍵功能表點擊區域\r\n\t\tthis.path.plot(pathStr);\r\n\t\tthis.path2.plot(pathStr);\r\n\r\n\t\t//畫末端箭頭\r\n\t\tthis._drawArrow(points[pntLen - 2], points[pntLen - 1]);\r\n\t}\r\n\r\n\t/**\r\n\t * 繪製末端箭頭部分, 利用2個傳入端點計算斜率\r\n\t */\r\n\tprivate _drawArrow(fromPnt: Point, toPnt: Point): void {\r\n\t\t// 計算箭頭的方向\r\n\t\tconst angle: number = Math.atan2(toPnt.y - fromPnt.y, toPnt.x - fromPnt.x); // 計算角度\r\n\r\n\t\t// 計算箭頭的2個點\r\n\t\tconst arrowPnt1: Point = {\r\n\t\t\tx: toPnt.x - this.ArrowLen * Math.cos(angle) + this.ArrowWidth * Math.cos(angle - Math.PI / 2),\r\n\t\t\ty: toPnt.y - this.ArrowLen * Math.sin(angle) + this.ArrowWidth * Math.sin(angle - Math.PI / 2)\r\n\t\t};\r\n\t\tconst arrowPnt2: Point = {\r\n\t\t\tx: toPnt.x - this.ArrowLen * Math.cos(angle) + this.ArrowWidth * Math.cos(angle + Math.PI / 2),\r\n\t\t\ty: toPnt.y - this.ArrowLen * Math.sin(angle) + this.ArrowWidth * Math.sin(angle + Math.PI / 2)\r\n\t\t};\r\n\r\n\t\t// 更新箭頭路徑\r\n\t\tthis.arrow.plot(`M ${toPnt.x} ${toPnt.y} L ${arrowPnt1.x} ${arrowPnt1.y} M ${toPnt.x} ${toPnt.y} L ${arrowPnt2.x} ${arrowPnt2.y}`);\r\n\t\t//this.arrow2.plot(`M ${fromPnt.x} ${fromPnt.y} L ${toPnt.x} ${toPnt.y} M ${toPnt.x} ${toPnt.y} L ${arrowPnt1.x} ${arrowPnt1.y} M ${toPnt.x} ${toPnt.y} L ${arrowPnt2.x} ${arrowPnt2.y}`);\r\n\t}\r\n\r\n\t//id記錄在 path !!\r\n\tgetId(): string {\r\n\t\treturn String(this.json.Id);\r\n\t}\r\n\r\n\tgetFromType(): string {\r\n\t\treturn this.json.FromType;\r\n\t}\r\n\r\n\tsetFromType(fromType: string): void {\r\n\t\tif (fromType == this.json.FromType)\r\n\t\t\treturn;\r\n\r\n\t\tthis._setFromTypeVars(fromType);\r\n\t\tthis.render();\r\n\t}\r\n\r\n}//class FlowLine"]}