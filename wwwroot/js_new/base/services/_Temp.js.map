{"version":3,"file":"_Temp.js","sourceRoot":"","sources":["../../../../base/services/_Temp.ts"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,MAAM,CAAC,OAAO,OAAO,KAAK;CAMzB,CAAC,OAAO;AAET,+BAA+B;AAC/B,+BAA+B;AAC/B,uDAAuD;AACvD,IAAI;AACJ,iCAAiC","sourcesContent":["//temp variables\r\nexport default class _Temp {\r\n\r\n    // 在 TypeScript 靜態類別中，通常會使用靜態屬性來代替原始 JS 對象的屬性。\r\n    // 由於原始 JS 文件中 _temp 是一個空對象，我們可以用一個靜態屬性來表示其作為臨時變量容器的角色。\r\n    // 或者只保留類別本身作為命名空間。這裡採用保留類別的結構。\r\n\r\n} //class\r\n\r\n// 如果需要一個可供外部訪問的靜態屬性作為容器，可以這樣寫:\r\n// export default class _Temp {\r\n//     public static data: { [key: string]: any } = {};\r\n// }\r\n// 但為了最嚴格地符合原始代碼 (空對象)，我們只保留類別結構。"]}