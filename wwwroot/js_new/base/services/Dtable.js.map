{"version":3,"file":"Dtable.js","sourceRoot":"","sources":["../../../../base/services/Dtable.ts"],"names":[],"mappings":"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","sourcesContent":["import DataTable, { AjaxData, Api, Config, InternalSettings } from \"datatables.net\";\r\nimport _Ajax from \"./_Ajax\";\r\nimport _Fun from \"./_Fun\";\r\nimport _Json from \"./_Json\";\r\nimport _Tool from \"./_Tool\";\r\nimport _Var from \"./_Var\";\r\n\r\n/**\r\n * create jQuery dataTables object\r\n * param selector {string} datatable selector\r\n * param url {string} backend action url\r\n * param dtConfig {json} datatables config, 自定欄位如下：\r\n * showWork: {bool} default false, 查詢時是否顯示作業中...\r\n * param findJson {json} (optional) find condition when initial\r\n * param fnOk {function} (optional) callback after query ok, if empty then show successful msg\r\n * param tbarHtml {string} (optional) datatable toolbar html for extra button for 客製化 toolbar\r\n * param fnAfterFind {function} (optional) 查詢成功後執行, 傳入result, 如果有指定fnOk\r\n */\r\nexport default class Dtable {\r\n\r\n    //public property \r\n    public dt: Api | null = null;             //jquery datatables object\r\n    public findJson: any;   //find condition\r\n    public recordsFiltered: number = -1;  //found count, -1 for recount, name map to DataTables\r\n    public defaultShowOk: boolean = true;  //whethor show find ok msg, default value\r\n    public showWork: boolean;\r\n    private _fnAfterFind: FnVoidN = null;\r\n\r\n    //private\r\n    //keep start row idx, false(find), true(save reload)\r\n    private _keepStart: boolean = false;\r\n\r\n    //now start row idx, coz ajax.dataSrc() always get 0 !!\r\n    private _start: number = 0;\r\n\r\n    //(now)show find ok msg or not\r\n    private _nowShowOk: boolean;\r\n\r\n    /**\r\n     * @param selector datatable selector\r\n     * @param url backend action url\r\n     * @param dtConfig datatables config\r\n     * @param findJson (optional) find condition when initial\r\n     * @param fnOk (optional) callback after query ok, if empty then show successful msg\r\n     * @param tbarHtml (optional) datatable toolbar html for extra button for 客製化 toolbar\r\n     * @param fnAfterFind (optional) 查詢成功後執行, 傳入result, 如果有指定fnOk\r\n     */\r\n    constructor(\r\n        selector: string,\r\n        url: string,\r\n        dtConfig: { showWork?: boolean, columnDefs?: any[] } & Config,\r\n        findJson: any,\r\n        fnOk: ((result: any) => any) | null = null,\r\n        tbarHtml: StrN = null,\r\n        fnAfterFind: FnVoidN = null\r\n    ) {\r\n        this.findJson = findJson;\r\n        this.showWork = (dtConfig.showWork == null) ? false : dtConfig.showWork;\r\n        this._fnAfterFind = fnAfterFind;\r\n        this._nowShowOk = this.defaultShowOk;\r\n\r\n        //must put last\r\n        this._init(selector, url, dtConfig, fnOk, tbarHtml);\r\n    }\r\n\r\n    /**\r\n     * initial jquery datatables, 參數參考前面的建構子\r\n     */\r\n    private _init(\r\n        selector: string,\r\n        url: string,\r\n        dtConfig: { showWork?: boolean, columnDefs?: any[] } & Config,\r\n        fnOk: ((result: any) => any) | null,\r\n        tbarHtml: StrN\r\n    ): void {\r\n\r\n        //default config for dataTables\r\n        let config: Config = {\r\n            //deferLoading: 0,    //0表示一開始不自動執行\r\n            pageLength: _Fun.pageRows || 10,\r\n            lengthMenu: [10, 20, 50, 100], //25 -> 20 for more friendly\r\n            processing: false,  //use custom processing msg\r\n            serverSide: true,   //server pagination\r\n            //jQueryUI: false,\r\n            //filter: false,      //find string            \r\n            //paginate: true,     //paging          \r\n            lengthChange: true, //set page rows\r\n            info: true,         //show page info, include now page, total pages\r\n            //sorting: [],        //default not sorting, or datatable will sort by first column !!\r\n            pagingType: \"full_numbers\",\r\n            //stateSave: true,\r\n            //ordering: false,\r\n\r\n            //set locale file\r\n            language: {\r\n                url: \"/locale/\" + _Fun.locale + \"/dataTables.txt\",\r\n            },\r\n\r\n            //default toolbar layout\r\n            //dom: '<\"toolbar\">t<li>p',\r\n            dom: `\r\nt\r\n<\"row d-flex justify-content-between align-items-center mt-2\"\r\n    <\"col d-flex align-items-center gap-2 li-container\"li>\r\n    <\"col-auto\"p>\r\n>\r\n`,\r\n            //call after dataTables initialize\r\n            //1.add toolbar button list if need\r\n            //2.change find action: find after enter !!\r\n            initComplete: (settings: InternalSettings, json: any): void => {\r\n                //1.toolbar\r\n                if (tbarHtml)\r\n                    $(this).closest('.tableRead_wrapper').find('div.toolbar').html(tbarHtml);\r\n\r\n                //check filter existed\r\n                const filter = $(selector + \"_filter input\");\r\n                if (filter.length > 0) {\r\n                    //2.unbind first\r\n                    filter.off();\r\n\r\n                    //bind key enter for quick search\r\n                    const api = this.dt;\r\n                    filter.on('keyup', (e: JQuery.TriggeredEvent) => {\r\n                        if (e.key === 'Enter') {\r\n                            this.resetCount();\r\n\r\n                            //run search\r\n                            api!.search(filter.val() as string).draw();     //must draw() !!\r\n                        }\r\n                    });\r\n                } else {\r\n                    //console.log('no dataTables filter !!');\r\n                    //return;\r\n                }\r\n            },\r\n\r\n            //ajax config(not standard jquery ajax !!)\r\n            //me: this,\r\n            ajax: {\r\n                //config\r\n                url: url,\r\n                type: 'POST',\r\n                dataType: 'json',\r\n                /*\r\n                beforeSend: function (jqXHR) {\r\n                    //debugger;\r\n                    if (_fun.jwtToken)\r\n                        jqXHR.setRequestHeader(\"Authorization\", \"Bearer \" + _fun.jwtToken);\r\n                },\r\n                */\r\n                //add input parameter for datatables\r\n                //使用箭頭函數以保留 this 上下文, 不必再 bind(this)\r\n                data: (arg: AjaxData): void => {\r\n                    //如果存在 _me.fnWhenFind(傳回bool), 則先檢查\r\n                    if (_me && _me.fnWhenFind) {\r\n                        if (!_me.fnWhenFind())\r\n                            return;\r\n                    }\r\n\r\n                    //write order.fid(自定欄位) if any\r\n                    const orders = arg.order;\r\n                    if (orders.length > 0) {\r\n                        const order = orders[0];\r\n                        (order as any).fid = arg.columns[order.column].data;\r\n                    }\r\n                    (arg as any).findJson = _Json.toStr((this as Dtable).findJson);    //string type\r\n                    (arg as any).recordsFiltered = this.recordsFiltered;\r\n                    if (this._keepStart)\r\n                        arg.start = this._start;\r\n                },\r\n\r\n                //on success (cannot use success event), see DataTables document !!\r\n                dataSrc: (result: any): any[] => {\r\n                    // Use non-null assertion '!' on this.dt as it is initialized in the constructor\r\n                    this._start = this.dt!.page.info().start;\r\n                    this._keepStart = false; //reset\r\n\r\n                    //只顯示錯誤訊息, 不處理欄位 validation error\r\n                    const errMsg = _Ajax.resultToErrMsg(result);\r\n                    if (errMsg) {\r\n                        _Tool.msg(errMsg);\r\n                        result.recordsFiltered = 0;\r\n                        this.recordsFiltered = 0;\r\n                        return [];  //no null, or jquery will get wrong !!\r\n\r\n                    } else {\r\n                        //set global\r\n                        this.recordsFiltered = result.recordsFiltered;\r\n\r\n                        if (fnOk) {\r\n                            return fnOk(result);\r\n                        } else if (result.data === null || result.data.length === 0) {\r\n                            _Tool.alert(_BR.FindNone, 'R');\r\n                            if (this._fnAfterFind)\r\n                                this._fnAfterFind({});\r\n                            return [];\r\n                        } else {\r\n                            if (this._nowShowOk)\r\n                                _Tool.alert(_BR.FindOk);\r\n                            this._nowShowOk = this.defaultShowOk;  //reset to default\r\n                            if (this._fnAfterFind)\r\n                                this._fnAfterFind(result);\r\n                            return result.data;\r\n                        }\r\n                    }\r\n                },\r\n\r\n                //on error\r\n                error: function (xhr: JQuery.jqXHR, textStatus: JQuery.Ajax.TextStatus, errorThrown: string): void {\r\n                    _Tool.hideWait();\r\n                    _Tool.msg('Datatable.js error.');\r\n                    if (xhr != null) {\r\n                        console.log('status' + xhr.status);\r\n                        console.log(errorThrown);\r\n                    }\r\n                },\r\n            },\r\n        };\r\n\r\n        //add custom columnDefs\r\n        if (dtConfig) {\r\n            if (_Var.notEmpty(dtConfig.columnDefs)) {\r\n                const colDefs = dtConfig.columnDefs;\r\n                // Assuming _Fun.dtColDef is available and correct type\r\n                colDefs![colDefs!.length] = _Fun.dtColDef;   //add last array element\r\n            }\r\n            config = _Json.copy(dtConfig, config) as Config; // Type assertion needed for merge\r\n        }\r\n\r\n        //add data-rwd-th if need\r\n        const dt = $(selector);\r\n        /*\r\n        if (_fun.isRwd) {\r\n            //讀取多筆資料 header (set this._rwdTh[])\r\n            var me = this;\r\n            me._rwdTh = [];\r\n            dt.find('th').each(function (idx) {\r\n                me._rwdTh[idx] = $(this).text() + '：';\r\n            });\r\n            config.createdRow = function (row, data, dataIndex) {\r\n                $(row).find('td').each(function (idx) {\r\n                    $(this).attr('data-rwd-th', me._rwdTh[idx]);\r\n                });\r\n            };\r\n        }\r\n        */\r\n\r\n        // Explicitly cast the result to DataTables.Api\r\n        this.dt = dt.DataTable(config);\r\n        // 在 settings 物件掛自訂屬性\r\n        // Accessing settings() directly on the API instance\r\n        (this.dt.settings()[0] as any).showWork = this.showWork;\r\n\r\n        //before/after ajax call, show/hide waiting msg\r\n        dt.on('preXhr.dt', (e: JQuery.TriggeredEvent, settings: Config, data: any): void => {\r\n            // settings has been augmented with showWork\r\n            if ((settings as any).showWork)\r\n                _Fun.block();\r\n        });\r\n\r\n        dt.on('xhr.dt', (e: JQuery.TriggeredEvent, settings: Config, data: any): void => {\r\n            if ((settings as any).showWork)\r\n                _Fun.unBlock();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * reset found count\r\n     */\r\n    resetCount(): void {\r\n        //var count = reset ? -1 : this.dt.recordsFiltered;\r\n        this.recordsFiltered = -1;\r\n\r\n        let table = new DataTable('#myTable', {\r\n            // config options...\r\n        });\r\n    }\r\n\r\n    /**\r\n     * find rows\r\n     * param findJson {json} find condition\r\n     */\r\n    find(findJson: any): void {\r\n\r\n        this.findJson = findJson;\r\n        //this.findStr = findStr || '';\r\n        this.resetCount();   //recount first\r\n\r\n        //trigger dataTables search event\r\n        //this.dt.search(this.findStr).draw();\r\n        // Use non-null assertion '!' on this.dt as it is initialized in the constructor\r\n        this.dt!.search('').draw(!this._keepStart);\r\n    }\r\n\r\n    /**\r\n     * refind with same condition for refresh form\r\n     * not show find ok msg\r\n     */\r\n    reload(): void {\r\n        this._keepStart = true;\r\n        this._nowShowOk = false;  //not show find ok msg\r\n        this.find(this.findJson);\r\n    }\r\n\r\n} //class"]}