{"version":3,"file":"EditOne.js","sourceRoot":"","sources":["../../../base/EditOne.ts"],"names":[],"mappings":"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","sourcesContent":["import _Edit from \"./_Edit\";\r\nimport _Form from \"./_Form\";\r\nimport _IFile from \"./_IFile\";\r\nimport _Input from \"./_Input\";\r\nimport _IText from \"./_IText\";\r\nimport _Obj from \"./_Obj\";\r\n\r\n// 假設這些全域變數或類型已在其他地方定義\r\ndeclare const _me: {\r\n    crudE: {\r\n        getUpdRow: (kid: string, fidTypes: string[], eform: JQuery) => any;\r\n        getFileSid: (levelStr: string, fid: string) => string;\r\n        viewFile: (table: string, fid: string, elm: JQuery<HTMLElement> | HTMLElement, key: string) => void;\r\n        // dataSetFileJson: (data: FormData, fileJson: any) => void;\r\n    };\r\n};\r\n\r\n// 假設 Validator 是來自 jQuery Validation 的類型\r\ninterface Validator {\r\n    // ...\r\n}\r\n\r\n/**\r\n * 單筆編輯畫面\r\n * single edit form, called by _me.crudE.js\r\n * json row for both EditOne/EditMany has fields:\r\n * _rows {json array}: updated rows include upload files\r\n * _deletes {strings}: deleted key strings, seperate with ','\r\n * _childs {json array}: child json array\r\n *\r\n * 屬性\r\n * kid:\r\n * eform:\r\n * fidTypes:\r\n * systemError:\r\n * dataJson: 載入資料後(update/view)自動設定\r\n * hasFile、fileLen、fileFids: 在 _me.crudE.js setFileVars() 設定\r\n * validator: jquery vallidation object (EditMany同), 在 _me.crudE.js _initForm() 設定\r\n *\r\n * 自定函數 called by _me.crudE.js\r\n * //void fnAfterLoadJson(json)\r\n * //void fnAfterOpenEdit(fun, json): called after open edit form\r\n * //void fnAfterSwap(readMode): called after _me.crudR.swap()\r\n * error fnWhenSave() ??\r\n * void fnAfterSave()\r\n *\r\n * param kid {string} (default 'Id') pkey field id for getKey value & getUpdRow,\r\n * must existed or will set systemError variables !!\r\n * param eformId {string} (default 'eform') must existed or will set systemError variables !!\r\n * note!! if these two parameters not Id/eform, must new EditOne() and set them !!\r\n *\r\n * return {EditOne}\r\n */\r\nexport default class EditOne {\r\n\r\n    // fileFids, fileLen, hasFile 屬性在外部設定(_me.crudE.js setFileVars())\r\n    public kid: string;\r\n    public eform: JQuery<HTMLElement>;\r\n    public dataJson: any = null;\r\n    public systemError: string = '';\r\n    public fidTypes?: string[];         // fidTypes array of [fid, ftype, fid, ftype, ...]\r\n    public fidTypeLen: number = 0;\r\n    public hasFile: boolean = false;\r\n    public fileFids?: string[];         // file fids array\r\n    public fileLen: number = 0;\r\n    public validator?: Validator;\r\n\r\n    // 自定函數 (Custom functions)\r\n    // public fnAfterLoadJson?: (json: any) => void;\r\n    // public fnAfterOpenEdit?: (fun: any, json: any) => void;\r\n    // public fnAfterSwap?: (readMode: boolean) => void;\r\n    // public fnWhenSave?: () => string | null; // return error message or null\r\n    // public fnAfterSave?: () => void;\r\n\r\n    /**\r\n     * @param kid pkey field id (default 'Id')\r\n     * @param eformId edit form id (default 'eform')\r\n     */\r\n    constructor(kid?: string, eformId?: string) {\r\n        // call last\r\n        this.init(kid, eformId);\r\n    }\r\n\r\n    /**\r\n     * initial & and instance variables (this.validator is by _valid.init())\r\n     * called by this(at last)\r\n     */\r\n    private init(kid?: string, eformId?: string): void {\r\n        this.kid = kid || 'Id';\r\n        let _eformId = eformId || 'eform';\r\n        this.eform = $('#' + _eformId) as JQuery<HTMLElement>;     //multiple rows container object\r\n        this.dataJson = null;\r\n\r\n        //check input & alert error if wrong\r\n        this.systemError = '';\r\n        let error: string = (this.eform.length !== 1)\r\n            ? 'EditOne.js input eformId is wrong. (' + _eformId + ')'\r\n            : (_Obj.get(this.kid, this.eform) == null)\r\n                ? 'EditOne.js input kid is wrong. (' + this.kid + ')'\r\n                : '';\r\n        if (error !== '') {\r\n            this.systemError = error;\r\n            alert(error);\r\n            //return;   //not return\r\n        }\r\n\r\n        _Edit.initVars(this, this.eform);\r\n    }\r\n\r\n    /**\r\n     * get key value\r\n     * return {string}\r\n     */\r\n    public getKey(): string {\r\n        return _Input.get(this.kid, this.eform);\r\n    }\r\n\r\n    /**\r\n     * get field value\r\n     * @param fid field id\r\n     * return {string}\r\n     */\r\n    public getValue(fid: string): string {\r\n        return _Input.get(fid, this.eform);\r\n    }\r\n\r\n    /**\r\n     * is a new row or not\r\n     * return {bool}\r\n     */\r\n    public isNewRow(): boolean {\r\n        return (_IText.get(_Edit.IsNew, this.eform) === '1');\r\n    }\r\n\r\n    /**\r\n     * load row into UI, also save into old variables\r\n     * @param row {json}\r\n     */\r\n    public loadRow(row: any): void {\r\n        _Form.loadRow(this.eform, row);\r\n\r\n        //set old value for each field\r\n        if (this.fidTypes) {\r\n            for (let i = 0; i < this.fidTypeLen; i = i + 2) {\r\n                const fid = this.fidTypes[i];\r\n                const obj = _Obj.get(fid, this.eform);\r\n                obj.data(_Edit.DataOld, row[fid]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get updated row, 包含 _childs\r\n     * return {json} different column only\r\n     */\r\n    public getUpdRow(): any {\r\n        if (!this.fidTypes) return null; // Safety check\r\n        return _me.crudE.getUpdRow(this.kid, this.fidTypes, this.eform);\r\n    }\r\n\r\n    /**\r\n     * reset UI and edited variables\r\n     */\r\n    public reset(): void {\r\n        _Form.reset(this.eform);\r\n    }\r\n\r\n    /**\r\n     * reset key, for update/view -> create\r\n     */\r\n    public resetKey(): void {\r\n        _IText.set(this.kid, '', this.eform);\r\n    }\r\n\r\n    /**\r\n     * set form edit status\r\n     * @param status {bool} edit status\r\n     */\r\n    public setEdit(status: boolean): void {\r\n        _Form.setEdit(this.eform, status);\r\n    }\r\n\r\n    /**\r\n     * formData add files\r\n     * @param levelStr {string}\r\n     * @param data {FormData}\r\n     * return {json} file json\r\n     */\r\n    public dataAddFiles(levelStr: string, data: FormData): any | null {\r\n        if (!this.hasFile || !this.fileFids)\r\n            return null;\r\n\r\n        const fileJson: any = {};\r\n        for (let i = 0; i < this.fileLen; i++) {\r\n            const fid = this.fileFids[i];\r\n            const serverFid = _me.crudE.getFileSid(levelStr, fid);\r\n            if (_IFile.dataAddFile(data, fid, serverFid, this.eform)) {\r\n                fileJson[serverFid] = this.getKey();\r\n            }\r\n        }\r\n        //_me.crudE.dataSetFileJson(data, fileJson);\r\n        return fileJson;\r\n    }\r\n\r\n    /**\r\n     * onViewFile -> viewFile\r\n     * onclick viewFile\r\n     * @param table {string} table name\r\n     * @param fid {string}\r\n     * @param elm {element} link element\r\n     */\r\n    public viewFile(table: string, fid: string, elm: JQuery<HTMLElement> | HTMLElement): void {\r\n        const key = this.getKey();\r\n        _me.crudE.viewFile(table, fid, elm, key);\r\n    }\r\n}"]}