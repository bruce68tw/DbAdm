{"version":3,"file":"_ICheck.js","sourceRoot":"","sources":["../../../base/_ICheck.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,IAAI,MAAM,QAAQ,CAAC;AAE1B,iCAAiC;AACjC,2EAA2E;AAC3E,wEAAwE;AACxE,qEAAqE;AACrE,MAAqB,OAAQ,SAAQ,MAAM;IAOvC;;OAEG;IACH,MAAM,CAAC,IAAI,CAAC,GAAW;QACnB,mBAAmB;QACnB,yEAAyE;QACzE,OAAO,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACxD,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAI,CAAC,GAAW,EAAE,KAAU;QAC/B,iBAAiB;QACjB,MAAM,MAAM,GAAY,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC;QAC/F,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,GAAW,EAAE,MAAe;QACxC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,OAAO,CAAC,GAAW,EAAE,IAAa;QACrC,gDAAgD;QAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,MAAc,EAAE,IAAa;QACzC,gDAAgD;QAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,GAAkB;QAC9B,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,KAAK,CAAC;QAC9B,kBAAkB;QAClB,kCAAkC;QAClC,OAAO,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC1B,gDAAgD;IACpD,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,WAAW,CAAC,IAAY,EAAE,GAAY;QACzC,GAAG,GAAG,GAAG,IAAI,OAAO,CAAC,QAAQ,CAAC;QAC9B,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YAChE,yEAAyE;YACzE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,QAAQ,CAAC,IAAY,EAAE,MAAe,EAAE,GAAY;QACvD,GAAG,GAAG,GAAG,IAAI,OAAO,CAAC,QAAQ,CAAC;QAC9B,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACrC,gDAAgD;QAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;;AArFD;;GAEG;AACI,gBAAQ,GAAW,SAAS,CAAC;eALnB,OAAO;AA4G3B,CAAC,CAAC,OAAO","sourcesContent":["import _IBase from \"./_IBase\";\r\nimport _Input from \"./_Input\";\r\nimport _Obj from \"./_Obj\";\r\n\r\n//for checkbox(use html checkbox)\r\n// export default class _ICheck extends _IBase { ... } is more correct OOP,\r\n// but since the original uses $.extend({}, _ibase, {...}), we will keep\r\n// it as a static class extending/merging the functionality of _IBase\r\nexport default class _ICheck extends _IBase {\r\n\r\n    /**\r\n     * default data-fid attribute value for multiple selection\r\n     */\r\n    static Check0Id: string = '_check0';\r\n\r\n    /**\r\n     * (override)get data-value, not checked status !!, return '0' if unchecked.\r\n     */\r\n    static getO(obj: JQuery): string | null {\r\n        //return obj.val();\r\n        // @ts-ignore: data('value') is expected to return a string or equivalent\r\n        return obj.is(':checked') ? obj.data('value') : '0';\r\n    }\r\n\r\n    /**\r\n     * (override)set checked or not\r\n     */\r\n    static setO(obj: JQuery, value: any): void {\r\n        //obj.val(value);\r\n        const status: boolean = !(value == null || value == '0' || value == 'False' || value == false);\r\n        obj.prop('checked', status);\r\n    }\r\n\r\n    /**\r\n     * (override) set status by object(s)\r\n     */\r\n    static setEditO(obj: JQuery, status: boolean): void {\r\n        obj.prop('disabled', !status);\r\n    }\r\n\r\n    /**\r\n     * get checked status by fid\r\n     */\r\n    static checked(fid: string, form?: JQuery): boolean {\r\n        // @ts-ignore: 'this' will be _ICheck at runtime\r\n        return this.checkedO(_Obj.get(fid, form));\r\n    }\r\n\r\n    /**\r\n     * get checked status by filter\r\n     */\r\n    static checkedF(filter: string, form?: JQuery): boolean {\r\n        // @ts-ignore: 'this' will be _ICheck at runtime\r\n        return this.checkedO(_Obj.getF(filter, form));\r\n    }\r\n\r\n    /**\r\n     * get checked status by object\r\n     */\r\n    static checkedO(obj: JQuery | null): boolean {\r\n        if (obj == null) return false;\r\n        //檢查:after虛擬類別是否存在\r\n        //return (_icheck.getO(obj) == 1);\r\n        return obj.is(':checked');\r\n        //return (obj.next().find(':after').length > 0);\r\n    }\r\n\r\n    /**\r\n     * get checked checkebox data-value string array\r\n     * form {object} container\r\n     * fid {string} (optional '_check0') data-fid value\r\n     * return {string array}\r\n     */\r\n    static getCheckeds(form: JQuery, fid?: string): string[] {\r\n        fid = fid || _ICheck.Check0Id;\r\n        const ary: string[] = [];\r\n        _Obj.getF(_Input.fidFilter(fid) + ':checked', form).each(function (i) {\r\n            // @ts-ignore: data('value') is expected to return a string or equivalent\r\n            ary[i] = $(this).data('value');\r\n        });\r\n        return ary;\r\n    }\r\n\r\n    /**\r\n     * set checked status for multiple rows\r\n     * form {object} container\r\n     * status {boolean} check or uncheck\r\n     * fid {string} (optional '_check0') data-fid value\r\n     * return void\r\n     */\r\n    static checkAll(form: JQuery, status: boolean, fid?: string): void {\r\n        fid = fid || _ICheck.Check0Id;\r\n        const filter = _Input.fidFilter(fid);\r\n        // @ts-ignore: 'this' will be _ICheck at runtime\r\n        this.setO(form.find(filter), status);\r\n    }\r\n\r\n    /**\r\n     * set checked status for multiple rows\r\n     * form {object} container\r\n     * rows {json array}\r\n     * fid {string} (optional '_check0') field name in rows\r\n     * return void\r\n    static setCheckedByJsons(form: JQuery, rows: any[] | null | undefined, fid?: string): void {\r\n        if (_Str.isEmpty(rows))\r\n            return;\r\n\r\n        fid = fid || _ICheck.Check0Id;\r\n        for (let i = 0; i < rows!.length; i++) {\r\n            const obj = form.find('[data-value=' + rows![i][fid] + ']');\r\n            // @ts-ignore: 'this' will be _ICheck at runtime\r\n            this.setO(obj, 1);\r\n        }\r\n    },\r\n     */\r\n\r\n}; //class"]}