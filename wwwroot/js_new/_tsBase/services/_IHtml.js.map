{"version":3,"file":"_IHtml.js","sourceRoot":"","sources":["../../../../_tsBase/services/_IHtml.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport _IBase from \"./_IBase\";\r\n\r\n/**\r\n * /*\r\n * html input, use summernote !!\r\n */\r\nexport default class _IHtml extends _IBase {\r\n\r\n    //constant\r\n    static Filter: string = '[data-type=html]';\r\n\r\n    static getO(obj: JQuery): string {\r\n        //return obj.html();\r\n        //return obj.val();\r\n        // Assuming summernote is attached to JQuery, type casting is needed for 'summernote' method\r\n        return (obj as any).summernote('code');\r\n    }\r\n\r\n    static setO(obj: JQuery, value: string): void {\r\n        //value = $('<div/>').html(value).text(); //decode\r\n        (obj as any).summernote('code', value);\r\n        //obj.html(value);\r\n        //obj.val(value);\r\n    }\r\n\r\n    //set edit status\r\n    static setEditO(obj: JQuery, status: boolean): void {\r\n        (obj as any).summernote(status ? 'enable' : 'disable');\r\n    }\r\n\r\n    /**\r\n     * init html editor\r\n     * param edit {object} EditOne/EditMany object. Assuming it has a validator and eform property.\r\n     * param prog {string} program code\r\n     * param height {int} (optional)input height(px)\r\n     */\r\n    static init(edit: { eform: JQuery, validator: { element: (obj: JQuery) => void } }, prog: string, height?: number): void {\r\n        edit.eform.find(_IHtml.Filter).each(function () {\r\n            const upMe = $(this);\r\n            upMe.data('prog', prog);    //for onImageUpload()\r\n            //init summernote\r\n            (upMe as any).summernote({\r\n                height: height || 200,\r\n                //new version use callbacks !!\r\n                callbacks: {\r\n                    /*\r\n                    */\r\n                    //https://codepen.io/ondrejsvestka/pen/PROgzQ\r\n                    onChange: function (contents: string, $editable: JQuery) {\r\n\r\n                        //sync value\r\n                        const me = $(this);\r\n                        if ((me as any).summernote('isEmpty')) {\r\n                            me.val('');\r\n                            //empty html value, carefully cause endless loop !!\r\n                            if ((me as any).summernote('code') != '')\r\n                                (me as any).summernote('code', '');\r\n                        } else {\r\n                            me.val(contents);\r\n                        }\r\n                        //me.val(me.summernote('isEmpty') ? '' : contents);\r\n\r\n                        //re-validate\r\n                        edit.validator.element(me);\r\n\r\n                        /*\r\n                        var me = $(this);\r\n                        me.val(me.summernote('isEmpty') ? \"\" : contents);\r\n                        edit.validator.element(me);\r\n                        */\r\n                    },\r\n                    onImageUpload: function (files: File[]) {\r\n                        const me = $(this);   //jquery object\r\n                        const data = new FormData();\r\n                        data.append('file', files[0]);\r\n                        //data.append('prog', me.data('prog'));\r\n                        $.ajax({\r\n                            data: data,\r\n                            type: \"POST\",\r\n                            url: \"SetHtmlImage\",    //backend fixed action !!\r\n                            cache: false,\r\n                            contentType: false,\r\n                            processData: false,\r\n                            success: function (url: string) {\r\n                                //create image element & add into editor\r\n                                const image = document.createElement('img');\r\n                                image.src = url;\r\n                                (me as any).summernote('insertNode', image); //new version syntax !!\r\n                            }\r\n                        });\r\n                    },\r\n                },\r\n\r\n                //=== add image ext attr start ===\r\n                /*\r\n                lang: _fun.locale,\r\n                popover: {\r\n                    image: [\r\n                        ['custom', ['imageAttributes']],\r\n                        ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],\r\n                        ['float', ['floatLeft', 'floatRight', 'floatNone']],\r\n                        ['remove', ['removeMedia']]\r\n                    ],\r\n                },\r\n                imageAttributes: {\r\n                    imageDialogLayout: 'default', // default|horizontal\r\n                    icon: '<i class=\"note-icon-pencil\"/>',\r\n                    removeEmpty: false // true = remove attributes | false = leave empty if present\r\n                },\r\n                displayFields: {\r\n                    imageBasic: true,  // show/hide Title, Source, Alt fields\r\n                    imageExtra: false, // show/hide Alt, Class, Style, Role fields\r\n                    linkBasic: false,   // show/hide URL and Target fields for link\r\n                    linkExtra: false   // show/hide Class, Rel, Role fields for link\r\n                },\r\n                */\r\n                //=== add image ext attr start ===\r\n\r\n            });//summernote()\r\n\r\n        });//each()\r\n    }\r\n\r\n    //set edit status for all html input\r\n    static setEdits(box: JQuery, subFilter: string, status: boolean): void {\r\n        const items = box.find(_IHtml.Filter + subFilter);\r\n        if (items.length > 0)\r\n            (items as any).summernote(status ? 'enable' : 'disable');\r\n    }\r\n\r\n    /*\r\n    //see: https://stackoverflow.com/questions/14346414/how-do-you-do-html-encode-using-javascript\r\n    encode: function (value) {\r\n        return $('<div/>').text(value).html();\r\n    },\r\n\r\n    decode: function(value){\r\n        return $('<div/>').html(value).text();\r\n    },\r\n\r\n    //encode row\r\n    encodeRow: function (row, fids) {\r\n        for (var i = 0; i < fids.length; i++) {\r\n            var fid = fids[i];\r\n            row[fid] = _ihtml.encode(row[fid]);\r\n        }\r\n        return row;\r\n    },\r\n\r\n    //更新html欄位內容, 讀取 text()\r\n    update: function(fid, box) {\r\n        //var filter = '#' + fid;\r\n        //var obj = (box === undefined) ? $(filter) : box.find(filter);\r\n        var obj = _obj.get(fid, box);\r\n        //obj.text(value);\r\n        //obj.summernote('code', $(filter).text());\r\n        //debugger;\r\n        obj.summernote('code', obj.text());\r\n    },\r\n    updates: function (fids, box) {\r\n        for (var i = 0; i < fids.length; i++)\r\n            _ihtml.update(fids[i], box);\r\n    },\r\n    */\r\n\r\n} //class"]}