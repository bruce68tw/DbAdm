{"version":3,"file":"_Ajax.js","sourceRoot":"","sources":["../../../../_tsBase/services/_Ajax.ts"],"names":[],"mappings":"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","sourcesContent":["// 假設的依賴靜態類別\r\nimport _Var from \"./_Var\";\r\nimport _Fun from \"./_Fun\";\r\nimport _Jwt from \"./_Jwt\";\r\nimport _Str from \"./_Str\";\r\nimport _Tool from \"./_Tool\";\r\nimport _Json from \"./_Json\";\r\n//import _BR from \"./_BR\";\r\n// 假設 $ 來自 jQuery\r\n//import $ from \"jquery\";\r\n\r\n/**\r\n * jquery ajax call\r\n */\r\nexport default class _Ajax {\r\n\r\n    /** * ajax return json\r\n     * param url {string} action url\r\n     * param data {json} property should be string !!\r\n     * param fnOk {function} (optional) callback function\r\n     * param block {boolean} block ui or not, default true\r\n     * return {boolean|json}\r\n     */\r\n    static async getJsonA(url: string, data: any, fnOk?: (result: any) => void, block?: boolean): Promise<boolean | any> {\r\n        const json = {\r\n            url: url,\r\n            type: 'POST',\r\n            data: data,\r\n            //dataType: backend return type: xml, html, script, json, jsonp, text\r\n            dataType: 'json',   //return type: ContentType,JsonResult\r\n            //processData: false\r\n        };\r\n        return await _Ajax._rpcA(json, fnOk, block);\r\n    }\r\n\r\n    /**\r\n     * ajax return json by FormData(Fd), for upload file\r\n     * param url {string}\r\n     * param data {FormData}\r\n     * param fnOk {function} (optional) callback function\r\n     * param block {boolean} block ui or not, default true\r\n     * return {boolean|json}\r\n     */\r\n    static async getJsonByFdA(url: string, data: FormData, fnOk?: (result: any) => void, block?: boolean): Promise<boolean | any> {\r\n        const json = {\r\n            url: url,\r\n            type: 'POST',\r\n            data: data,\r\n            dataType: 'json',   //return type, TODO: pending test\r\n            cache: false,\r\n            contentType: false, //false!! input type, default 'application/x-www-form-urlencoded; charset=UTF-8'\r\n            processData: false, //false!! (jQuery only) if true it will convert input data to string, then get error !!\r\n        };\r\n        return await _Ajax._rpcA(json, fnOk, block);\r\n    }\r\n\r\n    /**\r\n     * ajax return string\r\n     * param fnOk {function} (optional) callback function\r\n     * param block {boolean} block ui or not, default true\r\n     * return {boolean|string}\r\n     */ \r\n    static async getStrA(url: string, data: any, fnOk?: (result: string) => void, block?: boolean): Promise<boolean | string> {\r\n        const json = {\r\n            url: url,\r\n            type: 'POST',\r\n            data: data,\r\n            dataType: 'text',   //backend return text(ContentResult with text)\r\n        };\r\n        return await _Ajax._rpcA(json, fnOk, block);\r\n    }\r\n\r\n    static async getIntA(url: string, data: any, fnOk?: (result: string) => void, block?: boolean): Promise<boolean | string> {\r\n        const json = {\r\n            url: url,\r\n            type: 'POST',\r\n            data: data,\r\n            dataType: 'text',   //backend return text(ContentResult with text)\r\n        };\r\n        return await _Ajax._rpcA(json, fnOk, block);\r\n    }\r\n\r\n    /**\r\n     * ajax return html string\r\n     * param fnOk {function} (optional) callback function\r\n     * param block {boolean} block ui or not, default true\r\n     * return {boolean|string}\r\n     */\r\n    static async getViewA(url: string, data: any, fnOk?: (result: string) => void, block?: boolean): Promise<boolean | string> {\r\n        const json = {\r\n            url: url,\r\n            type: 'POST',\r\n            data: data,\r\n            dataType: 'html',\r\n        };\r\n        return await _Ajax._rpcA(json, fnOk, block);\r\n    }\r\n\r\n    /**\r\n     * ajax return image file\r\n     * return {boolean|File}\r\n     */\r\n    static async getImageFileA(url: string, data: any, block?: boolean): Promise<boolean | any> {\r\n        const json = {\r\n            url: url,\r\n            type: 'POST',\r\n            data: data,\r\n            dataType: 'html',\r\n        };\r\n        return await _Ajax._rpcA(json, null, block);\r\n    }\r\n\r\n    /**\r\n     * ajax upload file (註解掉的部分)\r\n     */\r\n    /*\r\n    static file(url: string, serverFid: string, fileObj: File, fnOk?: (result: any) => void, fnError?: (msg: string) => void) {\r\n        const data = new FormData();  //for upload files if need \r\n        data.append(serverFid, fileObj);\r\n        const json = {\r\n            url: url,\r\n            type: 'POST',\r\n            data: data,\r\n            dataType: 'text',       //server return text\r\n            cache: false,\r\n            contentType: false,     //false!! 傳入參數編碼方式, default為 \"application/x-www-form-urlencoded\"\r\n            processData: false,     //false!! if true it will convert input data to string, then get error !!\r\n        };\r\n        _Ajax._rpcA(json, fnOk, block); // 這裡 block 的參數需要處理\r\n    }\r\n    */\r\n\r\n    /**\r\n     * ajax call(private), only return success info(include custom message)\r\n     * 使用 async/await 傳回值 for caller 判斷執行結果是否成功\r\n     * param json {any} ajax json\r\n     * param fnOk {function} (optional) callback function\r\n     * //param fnError {function} (optional) callback function\r\n     * param block {boolean|object} block ui or not, default true\r\n     * //如果要block modal, 必須傳入 modal object !!\r\n     * return {boolean|json|any} ResultDto return null when error\r\n     * boolean: fnOk not empty, return false when error\r\n     * json/any: fnOk is empty, return null when error\r\n     */\r\n    private static async _rpcA(json:any, fnOk?:(result: any) => void | null, block?: boolean | true): Promise<boolean | any> {\r\n        if (_Var.isEmpty(block)) block = true;\r\n        if (block) _Fun.block();\r\n\r\n        //改用 async/await\r\n        let status = false;\r\n        let result = null;\r\n        try {\r\n            _Jwt.jsonAddJwtHeader(json);\r\n            // 假設 $ 來自 jQuery\r\n            result = await $.ajax(json);\r\n            const errMsg = _Ajax.resultToErrMsg(result);\r\n            /*\r\n            if (!errMsg && typeof result === 'string' && _Ajax._isBrError(result)) {\r\n                //case of string error\r\n                errMsg = _Ajax.strToErrMsg(result);\r\n            }\r\n            */\r\n\r\n            //先判斷error msg\r\n            if (_Str.notEmpty(errMsg)) {\r\n                result = null;  //reset here !!\r\n                _Tool.msg(errMsg);\r\n            } else if (result && result.ErrorRows && result.ErrorRows.length > 0) {\r\n                //有欄位驗證錯誤, //todo: 多筆區域是否顯示正確?\r\n                const errJson: { [key: string]: string } = {};\r\n                for (let i = 0; i < result.ErrorRows.length; i++) {\r\n                    const row = result.ErrorRows[i];\r\n                    // 假設 _me.edit0 存在且為 jQuery 物件或 DOM element\r\n                    const edit = _Str.isEmpty(row.FormId) ? _me.edit0 : $(`#${row.FormId}`);\r\n                    errJson[row.Fid] = row.Msg;\r\n                    // 假設 edit.validator 存在 (來自 jQuery Validation plugin)\r\n                    if (edit.validator) {\r\n                        edit.validator.showErrors(errJson);\r\n                    }\r\n                }\r\n            //todo: 考慮下載檔案\r\n            } else if (fnOk) {\r\n                fnOk(result);\r\n                status = true;\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n        if (block) _Fun.unBlock();\r\n        return (fnOk == null) ? result : status;\r\n    }\r\n\r\n    /**\r\n     * resultDto to error msg string\r\n     * also called by Datatable.js\r\n     * param result {ResultDto} error msg\r\n     */ \r\n    private static _isBrError(result: string): boolean {\r\n        // 假設 _Fun.PreBrError 存在\r\n        return (result.length >= 2 && result.substring(0, 2) === _Fun.PreBrError);\r\n    }\r\n\r\n    /**\r\n     * resultDto to error msg string\r\n     * also called by Datatable.js\r\n     * param result {ResultDto} error msg\r\n     */ \r\n    static resultToErrMsg(result: any): string {\r\n        // 假設 _Fun.FidErrorMsg 存在\r\n        return (result[_Fun.FidErrorMsg])\r\n            ? _Ajax.strToErrMsg(result[_Fun.FidErrorMsg])\r\n            : '';\r\n    }\r\n\r\n    /**\r\n     * result string to error msg if any\r\n     */ \r\n    static strToErrMsg(str: string): string {\r\n        if (_Str.isEmpty(str))\r\n            return '';\r\n        if (!_Ajax._isBrError(str))\r\n            return str;\r\n\r\n        //case of BR error msg\r\n        const fid = str.substring(2);\r\n        // 假設 _BR[fid] 存在\r\n        let br = _BR as any; \r\n        return (br[fid])\r\n            ? br[fid]\r\n            : _Str.format('_ajax.strToErrMsg() failed, no BR Fid={0}', fid);\r\n    }\r\n\r\n}"]}