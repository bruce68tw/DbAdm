{"version":3,"file":"_Fun.js","sourceRoot":"","sources":["../../../../_tsBase/services/_Fun.ts"],"names":[],"mappings":"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","sourcesContent":["import _Ajax from \"./_Ajax\";\r\nimport _Leftmenu from \"./_Leftmenu\";\r\nimport _Obj from \"./_Obj\";\r\nimport _Pjax from \"./_Pjax\";\r\nimport _Tool from \"./_Tool\";\r\n\r\n//FormData\r\nexport default class _Fun {\r\n\r\n    //#region constant (big camel) ===\r\n    //for moment.js, match to _Fun.cs CsDtFmt\r\n    static MmDateFmt: string = 'YYYY/MM/DD';\r\n    static MmDtFmt: string = 'YYYY/MM/DD HH:mm:ss';\r\n    static FidErrorMsg: string = '_ErrorMsg';\r\n\r\n    //input field error validation, need match server side _Web.cs\r\n    //jsPath: '../Scripts/',      //js path for load\r\n\r\n    //error BR code, same to _Fun.PreBrError, fixed len to 2\r\n    static PreBrError: string = 'B:';\r\n\r\n    //class name of hide RWD phone\r\n    static HideRwd: string = 'x-hide-rwd';\r\n    //#endregion\r\n\r\n    //variables\r\n    static locale: string = 'zh-TW';    //now locale, _Layout.cshmlt will set\r\n    static maxFileSize: number = 50971520;  //upload file limit(50M)\r\n    static isRwd: boolean = false;\r\n    static pageRows: number = 10;   //must be 10,20(not 25),50,100    \r\n    static userId: string = '';     //now userId\r\n    static nowElm: HTMLElement | null = null;     //now dom event element\r\n\r\n    //mid variables\r\n    static data: Record<string, any> = {};\r\n\r\n    //datatables column define default values\r\n    static dtColDef: Record<string, any> = {\r\n        className: 'x-center',\r\n        orderable: false,\r\n        targets: '_all',\r\n    };\r\n\r\n    /**\r\n     * initial\r\n     * param {string} locale\r\n     * param {string} pjaxArea Filter\r\n     */\r\n    static init(locale: string): void {\r\n        //set jwt token\r\n        //_fun.jwtToken = localStorage.getItem('_jwtToken') || '';\r\n        //localStorage.removeItem('_jwtToken');\r\n\r\n        _Fun.locale = locale;\r\n        //initial\r\n        _Leftmenu.init();\r\n        _Pjax.init('.x-main-right');\r\n        _Tool.init();\r\n        // @ts-ignore: moment is globally available\r\n        moment.locale(_Fun.locale);\r\n\r\n        //註冊事件, 避免使用inline script for CSRF\r\n        const body = $('body');\r\n        _Fun.setEvent(body, 'click');   //eventName 不含 on\r\n        _Fun.setEvent(body, 'change');\r\n\r\n        //資安: 防止CSRF\r\n        $.ajaxSetup({\r\n            headers: {\r\n                'RequestVerificationToken': $('meta[name=\"csrf-token\"]').attr('content')\r\n            }\r\n        });\r\n    }\r\n\r\n    //server need Fun/Hello()\r\n    //no called\r\n    static async onHelloA(): Promise<void> {\r\n        await _Ajax.getStrA('../Fun/Hello', null, function (msg: string) {\r\n            alert(msg);\r\n        });\r\n    }\r\n\r\n    //get 目前event this\r\n    //param {bool} isObj: true(jQuery object)\r\n    static getObj(): JQuery {\r\n        return $(_Fun.nowElm!);\r\n    }\r\n\r\n    static getElm(): Elm {\r\n        return _Fun.nowElm!;\r\n    }\r\n\r\n    /**\r\n     * 註冊事件, 避免使用inline script for CSRF\r\n     * param {object} box 容器\r\n     * param {string} event name(不含on)\r\n     */\r\n    static setEvent(box: JQuery, eventName: string): void {\r\n        //eventName ||= 'onclick'; //default event name\r\n        const event2 = 'on' + eventName;\r\n        box.on(eventName, `[data-${event2}]`, function (this: HTMLElement) {\r\n            //set global\r\n            _Fun.nowElm = this;\r\n\r\n            const me = $(this);\r\n            const fnPath = me.data(event2);  // \"_me.crudR.onAddRow\"\r\n            let argsStr = me.data(\"args\");\r\n            argsStr = (argsStr == null) ? \"\" : argsStr.toString();  //數字必須轉字串, 否則split error\r\n            const args = argsStr ? argsStr.split(\",\") : [];\r\n\r\n            //在解析 fnPath 時，不要直接拿到方法後執行，而是保留父物件\r\n            const parts = fnPath.split(\".\");\r\n            let obj: any = window;\r\n            for (let i = 0; i < parts.length - 1; i++) {\r\n                obj = obj[parts[i]];\r\n            }\r\n            const fnName = parts[parts.length - 1];\r\n            const fn = obj[fnName];\r\n\r\n            if (typeof fn === \"function\") {\r\n                fn.apply(obj, args); // <-- 用 obj 當 this\r\n            } else {\r\n                console.warn(`Function ${fnPath} not found`);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * get default value if need\r\n     * param val {object} checked value\r\n     * param defVal {object} default value to return if need\r\n     */\r\n    static default<T>(val: T | null | undefined, defVal: T): T {\r\n        return (val == null) ? defVal : val;\r\n    }\r\n\r\n    static hasValue(obj: any): boolean {\r\n        //can not obj != null !!\r\n        return !(obj == null);\r\n    }\r\n\r\n    //on change locale, 後端必須實作 Fun/SetLocale()\r\n    //no called\r\n    static async onSetLocaleA(code: string): Promise<void> {\r\n        await _Ajax.getStrA('../Fun/SetLocale', { code: code }, function (msg: string) {\r\n            //_browser.setLang(lang);\r\n            location.reload();\r\n        });\r\n    }\r\n\r\n    //for CSP, 不使用 jQuery.blockUI(), 會有inline style 衝突!!\r\n    static block(): void {\r\n        _Obj.show(_Tool.work!);\r\n    }\r\n\r\n    static unBlock(): void {\r\n        _Obj.hide(_Tool.work!);\r\n    }\r\n\r\n    //#region remark code\r\n    /*\r\n      ??\r\n    xgTextBoxValid: function (obj, Regex) {\r\n        var parent = obj.parentNode;\r\n        if (Regex == \"\") {\r\n            if (obj.value != \"\") {\r\n                obj.parentNode.classList.remove(\"x-error\");\r\n            }\r\n            else {\r\n                obj.parentNode.classList.add(\"x-error\");\r\n                _fun.isCheck = false;\r\n            }\r\n        }\r\n        else {\r\n            if (obj.value.match(new RegExp(Regex)) != null) {\r\n                obj.parentNode.classList.remove(\"x-error\");\r\n            }\r\n            else {\r\n                obj.parentNode.classList.add(\"x-error\");\r\n                _fun.isCheck = false;\r\n            }\r\n        }\r\n    },\r\n\r\n     ??\r\n    xgCheckfn: function () {\r\n        _fun.isCheck = true;\r\n        var Inputs = document.getElementsByClassName('x-textbox');\r\n        for (var i = 0; i < Inputs.length; i++) {\r\n            Inputs[i].childNodes[1].onchange();\r\n        }\r\n        var selects = document.getElementsByClassName('x-select');\r\n        for (var i = 0; i < selects.length; i++) {\r\n            if (selects[i].childNodes[1].value == 0 || selects[i].childNodes[1].value == \"\") {\r\n                selects[i].classList.add(\"x-error\");\r\n                _fun.isCheck = false;\r\n            }\r\n            else {\r\n                selects[i].classList.remove(\"x-error\");\r\n            }\r\n        }\r\n        return _fun.isCheck;\r\n    },\r\n\r\n    //\r\n     multiple checkbox onclick event\r\n     params\r\n       me : this component\r\n       fid: field id \r\n       value: field value\r\n    //onClickCheckMulti: function (me, fid, value, separator, onClickFn) {\r\n    zz_onChangeMultiCheck: function (me, fid) {\r\n\r\n        //var fid = $(me).attr('data-item-id');\r\n        //var field = $('[data-id=\"' + fid + '\"]');           //field\r\n        var field = $('#' + fid);       //field\r\n        //var box = field.parent();     //找包含所有 checkbox 的 container\r\n        //update value list\r\n        var values = '';\r\n        var texts = '';\r\n        var separator = field.attr('data-separator');\r\n        var onClickFn = field.attr('data-onclick');\r\n        $(field.parent()).find('input:checked').each(function () {\r\n            values += $(this).val() + separator;\r\n            texts += $(this).text() + ',';\r\n        });\r\n\r\n        //adjust\r\n        if (values != '') {\r\n            values = values.substring(0, values.length - 1);\r\n            texts = texts.substring(0, texts.length - 1);\r\n        }\r\n        //更新欄位內容\r\n        field.attr('title', texts); //update show text\r\n        field.val(values);           //set field value\r\n\r\n        //call user define function\r\n        if (onClickFn != undefined && onClickFn != \"\")\r\n            onClickFn(me, $(me).val());\r\n\r\n    },\r\n    */\r\n\r\n    /**\r\n     * 傳回錯誤訊息(多國語)\r\n     * params\r\n     * form : 多國語 form \r\n     * errorCode: error code\r\n     */\r\n    /*\r\n    errorMsg: function (form, errorCode) {\r\n        if (errorCode == null || errorCode == '')\r\n            return '';\r\n        else if (errorCode.subsubstring(0, 1) == 'E')\r\n            return (_global[errorCode] == null) ? '(no error code: ' + errorCode +')' : _global[errorCode];\r\n        else\r\n            return (form[errorCode] == null) ? '(no error code: ' + errorCode + ')' : form[errorCode];\r\n    },\r\n    */\r\n\r\n    /**\r\n     * get value of multiple select field\r\n     * params\r\n     * fid : field id\r\n     * return : string\r\n     */\r\n    //getMultiSelectValue: function (fid, separator) {\r\n    //    var field = $('#' + fid);\r\n    //    return (field.length == 0) ? '' : field.val().join(separator);\r\n    //},\r\n    //#endregion\r\n\r\n};//class"]}