{"version":3,"file":"_Json.js","sourceRoot":"","sources":["../../../../_tsBase/services/_Json.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,QAAQ,CAAC;AAE1B,MAAM,CAAC,OAAO,OAAO,KAAK;IAEtB;;;;;OAKG;IACH;;;;;;;;;MASE;IAEF;;;;;OAKG;IACH,MAAM,CAAC,WAAW,CAAC,IAA4B,EAAE,IAAc;QAC3D,MAAM,IAAI,GAA+B,EAAE,CAAC;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,IAAI,CAAC,IAA4B,EAAE,EAA2B;QACjE,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,CAAC;QACxB,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YACrB,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC3B,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC;QACD,OAAO,MAAM,CAAC;QACd;;;;UAIE;IACN,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,eAAe,CAAC,SAA0C,EAAE,KAAc,EAAE,OAAgB;QAC/F,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;YAC5C,OAAO,IAAI,CAAC;QAEhB,IAAI,CAAC,KAAK;YACN,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,OAAO;YACR,OAAO,GAAG,OAAO,CAAC;QAEtB,MAAM,IAAI,GAA2B,EAAE,CAAC;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,8BAA8B;IAC9B,MAAM,CAAC,KAAK,CAAC,IAAS;QAClB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,IAAS;QACpB,iCAAiC;QACjC,OAAO,CAAC,IAAI,IAAI,IAAI,IAAK,MAAc,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAS;QACrB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,yBAAyB;IACzB,MAAM,CAAC,UAAU,CAAC,KAAU;QACxB,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,iBAAiB,CAAC,CAAC;IACzE,CAAC;IAED,sBAAsB;IACtB,MAAM,CAAC,SAAS,CAAC,GAAW;QACxB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACxB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;QACD,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,IAAI,GAA8B,EAAE,CAAC;QAC3C,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI;YACxB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,8BAA8B;IAC9B,MAAM,CAAC,UAAU,CAAC,GAAW;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED,aAAa;IACb,oBAAoB;IACpB,MAAM,CAAC,SAAS,CAAC,IAAkB,EAAE,GAAW,EAAE,KAAU;QACxD,IAAI,IAAI,IAAI,IAAI;YACZ,OAAO,CAAC,CAAC,CAAC;QAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK;gBACrB,OAAO,CAAC,CAAC;QACjB,CAAC;QAED,mBAAmB;QACnB,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IAED,mBAAmB;IACnB,MAAM,CAAC,UAAU,CAAC,IAAkB,EAAE,GAAW,EAAE,KAAU;QACzD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAChC,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG;YAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;IACZ,MAAM,CAAC,UAAU,CAAC,KAAmB,EAAE,GAAU;QAC7C,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;YAClC,OAAO;QAEX,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,UAAU,CAAC,GAA8C,EAAE,KAAc;QAC5E,WAAW;QACX,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;YAAE,OAAO;QAEtC,MAAc,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,GAAW,EAAE,KAAU;YAC9D,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;gBACjB,mCAAmC;gBACnC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;YACpB,CAAC;iBAAM,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;gBACjC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,KAAM,GAAG,CAAC,CAAC,CAAC;YACxC,CAAC;iBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC9B,OAAO;gBACP,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;gBACzB,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;oBACX,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;oBAChB,OAAO,CAAC,UAAU;gBACtB,CAAC;gBAED,sBAAsB;gBACtB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBAC9B,IAAI,OAAO,GAAG,IAAI,CAAC;oBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC3B,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;4BAC1B,OAAO,GAAG,KAAK,CAAC;4BAChB,MAAM;wBACV,CAAC;oBACL,CAAC;oBACD,IAAI,OAAO;wBACP,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;oBACpB,OAAO,CAAC,UAAU;gBACtB,CAAC;gBAED,oBAAoB;gBACnB,MAAc,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAU,EAAE,EAA0B;oBAC/E,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,KAAM,GAAG,CAAC,CAAC,CAAC;oBAEjC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;wBACjB,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,sCAAsC;gBAChE,CAAC,CAAC,CAAC;gBAEH,+BAA+B;gBAC/B,IAAI,OAAO,GAAG,IAAI,CAAC;gBACnB,UAAU;gBACV,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBAChC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBAC3B,OAAO,GAAG,KAAK,CAAC;oBACpB,CAAC;yBAAM,IAAI,OAAO,EAAE,CAAC;wBACjB,sBAAsB;wBACtB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,qCAAqC;oBAC7D,CAAC;yBAAM,CAAC;wBACJ,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,6EAA6E;oBAClG,CAAC;gBACL,CAAC;gBACD,IAAI,OAAO;oBACP,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,mGAAmG;QACnG,2DAA2D;QAC3D,iCAAiC;IACrC,CAAC;CAEJ,CAAC,OAAO","sourcesContent":["import _Str from \"./_Str\";\r\n\r\nexport default class _Json {\r\n\r\n    /**\r\n     add json object into another object\r\n     param {object} source source object\r\n     param {object} target target object\r\n     return {object}\r\n     */\r\n    /*\r\n    static addJson(source: { [key: string]: any }, target?: { [key: string]: any }): { [key: string]: any } {\r\n        if (!target)\r\n            target = {};\r\n        Object.keys(source).map(function (key, index) {\r\n            target![key] = source[key];\r\n        });\r\n        return target;\r\n    },\r\n    */\r\n\r\n    /**\r\n     * 轉換一筆json為多筆資料, 用於產生統計圖\r\n     * param from {json}\r\n     * param to {json}\r\n     * return {json} new json data\r\n     */\r\n    static toChartRows(json: { [key: string]: any }, cols: string[]): { Id: string, Num: any }[] {\r\n        const rows: { Id: string, Num: any }[] = [];\r\n        for (let i = 0; i < cols.length; i++) {\r\n            const fid = cols[i];\r\n            rows.push({ Id: fid, Num: json[fid] });\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    /**\r\n     * copy json data\r\n     * param from {json}\r\n     * param to {json}\r\n     * return {json} new json data\r\n     */\r\n    static copy(from: { [key: string]: any }, to?: { [key: string]: any }): { [key: string]: any } {\r\n        const target = to || {};\r\n        for (const key in from) {\r\n            if (from.hasOwnProperty(key)) {\r\n                target[key] = from[key];\r\n            }\r\n        }\r\n        return target;\r\n        /*\r\n        Object.keys(from).map(function (key, index) {\r\n            to[key] = from[key];\r\n        });\r\n        */\r\n    }\r\n\r\n    /**\r\n     * convert keyValues to json object\r\n     * param keyValues {array} keyValue array\r\n     * param keyId {string} key field id, default to 'Key'\r\n     * param valueId {string} value field id, default to 'Value'\r\n     * return {object} 回傳的json的欄位名稱前面會加上'f'\r\n     */\r\n    static keyValuesToJson(keyValues: { [key: string]: any }[] | null, keyId?: string, valueId?: string): { [key: string]: any } | null {\r\n        if (keyValues === null || keyValues.length === 0)\r\n            return null;\r\n\r\n        if (!keyId)\r\n            keyId = 'Key';\r\n        if (!valueId)\r\n            valueId = 'Value';\r\n\r\n        const data: { [key: string]: any } = {};\r\n        for (let i = 0; i < keyValues.length; i++) {\r\n            const row = keyValues[i];\r\n            data['f' + row[keyId]] = row[valueId];\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //json: object or object array\r\n    static toStr(json: any): string {\r\n        return (_Json.isEmpty(json)) ? '' : JSON.stringify(json);\r\n    }\r\n\r\n    static isEmpty(json: any): boolean {\r\n        // 假設 $.isEmptyObject 是可用的，或是自行實現\r\n        return (json == null || (window as any).jQuery.isEmptyObject(json));\r\n    }\r\n\r\n    static notEmpty(json: any): boolean {\r\n        return !_Json.isEmpty(json);\r\n    }\r\n\r\n    //check is key-value pair\r\n    static isKeyValue(value: any): boolean {\r\n        return (Object.prototype.toString.call(value) === '[object Object]');\r\n    }\r\n\r\n    //convert url to json \r\n    static urlToJson(url: string): { [key: string]: string } {\r\n        if (url.indexOf('?') > -1) {\r\n            url = url.split('?')[1];\r\n        }\r\n        const pairs = url.split('&');\r\n        const json: { [key: string]: string } = {};\r\n        pairs.forEach(function (pair) {\r\n            const parts = pair.split('=');\r\n            if (parts[0] !== \"\")\r\n                json[parts[0]] = decodeURIComponent(parts[1] || '');\r\n        });\r\n        return json;\r\n    }\r\n\r\n    //convert string to json array\r\n    static strToArray(str: string): any {\r\n        return JSON.parse(str);\r\n    }\r\n\r\n    //find jarray\r\n    //return array index\r\n    static findIndex(rows: any[] | null, fid: string, value: any): number {\r\n        if (rows == null)\r\n            return -1;\r\n\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i][fid] == value)\r\n                return i;\r\n        }\r\n\r\n        //case of not found\r\n        return -1;\r\n    }\r\n\r\n    //filter json array\r\n    static filterRows(rows: any[] | null, fid: string, value: any): any[] | null {\r\n        if (rows == null || rows.length == 0)\r\n            return null;\r\n\r\n        return rows.filter(function (row) {\r\n            return (row[fid] === value);\r\n        });\r\n    }\r\n\r\n    //appendRows\r\n    static appendRows(froms: any[] | null, tos: any[]): void {\r\n        if (froms == null || froms.length == 0)\r\n            return;\r\n\r\n        const len = tos.length;\r\n        for (let i = 0; i < froms.length; i++) {\r\n            tos[len + i] = froms[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * (recursive) remove null for json object\r\n     * param obj {json} by ref\r\n     * param level {int} (default 0) debug purpose, base 0\r\n     * return void\r\n     */\r\n    static removeNull(obj: { [key: string]: any } | null | undefined, level?: number): void {\r\n        //debugger;\r\n        level = level || 0;\r\n        if (!obj || _Json.isEmpty(obj)) return;\r\n\r\n        (window as any).jQuery.each(obj, function (key: string, value: any) {\r\n            if (value === null) {\r\n                //delete only null, empty is not !!\r\n                delete obj[key];\r\n            } else if (_Json.isKeyValue(value)) {\r\n                _Json.removeNull(value, level! + 1);\r\n            } else if (Array.isArray(value)) {\r\n                //check\r\n                const len = value.length;\r\n                if (len == 0) {\r\n                    delete obj[key];\r\n                    return; //continue\r\n                }\r\n\r\n                //case of string array\r\n                if (!_Json.isKeyValue(value[0])) {\r\n                    let isEmpty = true;\r\n                    for (let i = 0; i < len; i++) {\r\n                        if (_Str.notEmpty(value[i])) {\r\n                            isEmpty = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (isEmpty)\r\n                        delete obj[key];\r\n                    return; //continue\r\n                }\r\n\r\n                //case of json array\r\n                (window as any).jQuery.each(value, function (k2: number, v2: { [key: string]: any }) {\r\n                    _Json.removeNull(v2, level! + 1);\r\n\r\n                    if (_Json.isEmpty(v2))\r\n                        value[k2] = null; // Mark as null to be cleaned up later\r\n                });\r\n\r\n                //check json and remove if need\r\n                let isEmpty = true;\r\n                //from end\r\n                for (let i = len - 1; i >= 0; i--) {\r\n                    if (!_Json.isEmpty(value[i])) {\r\n                        isEmpty = false;\r\n                    } else if (isEmpty) {\r\n                        //delete array element\r\n                        value.splice(i, 1); // Use splice to remove array element\r\n                    } else {\r\n                        value[i] = null; // This case seems to be for preserving the index if a non-empty item follows\r\n                    }\r\n                }\r\n                if (isEmpty)\r\n                    delete obj[key];\r\n            }\r\n        });\r\n\r\n        // 原始程式碼的最後這行 `if (_json.isEmpty(obj)) obj = null;` 在 TS 靜態類別方法中難以直接模擬 'by ref' 的行為來改變傳入的 obj 變數本身，\r\n        // 且通常在 JS 中，`delete obj` 是正確的，但 `obj = null` 只是改變了區域變數的引用。\r\n        // 保持 obj 的屬性被刪除即可達到「移除 null」的目的。\r\n    }\r\n\r\n} //class"]}