{"version":3,"file":"_Input.js","sourceRoot":"","sources":["../../../../_tsBase/services/_Input.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport _BR from \"./_BR\";\r\nimport _Date from \"./_Date\";\r\nimport _ICheck from \"./_ICheck\";\r\nimport _IDate from \"./_IDate\";\r\nimport _IDt from \"./_IDt\";\r\nimport _IFile from \"./_IFile\";\r\nimport _IHtml from \"./_IHtml\";\r\nimport _ILink from \"./_ILink\";\r\nimport _IRadio from \"./_IRadio\";\r\nimport _IRead from \"./_IRead\";\r\nimport _ISelect from \"./_ISelect\";\r\nimport _IText from \"./_IText\";\r\nimport _ITextarea from \"./_ITextarea\";\r\nimport _Obj from \"./_Obj\";\r\nimport _Str from \"./_Str\";\r\nimport _Var from \"./_Var\";\r\nimport EstrInputType from \"./EstrInputType\"; // 假設 EstrInputType 是外部常數/列舉\r\n\r\n/**\r\n * 1.data-fid -> find object, get data-type, get/set old value\r\n * 2.name attr -> for _form.toRow()\r\n * 3.validation error span position rules:\r\n * (a)same parent, could be different child level\r\n * (b)sibling(ex: Date)\r\n */\r\nexport default class _Input {\r\n\r\n    //get input value\r\n    static get(fid: string, box: JQuery): string {\r\n        return _Input.getO(_Obj.get(fid, box), box);\r\n    }\r\n\r\n    /**\r\n     * get input value by object\r\n     * param obj {object}\r\n     * param type {string} (optional) data-type\r\n     * return input value\r\n     */\r\n    static getO(obj: JQuery, box: JQuery, type?: string): string {\r\n        type = type || _Input.getType(obj);\r\n        switch (type) {\r\n            case EstrInputType.Text:\r\n                return _IText.getO(obj);\r\n            case EstrInputType.Textarea:\r\n                return _ITextarea.getO(obj);\r\n            case EstrInputType.Check:\r\n                return _ICheck.getO(obj);\r\n            case EstrInputType.Radio:\r\n                return _IRadio.getO(obj, box);\r\n            case EstrInputType.Select:\r\n                return _ISelect.getO(obj);\r\n            case EstrInputType.Date:\r\n                return _IDate.getO(obj);\r\n            case EstrInputType.DateTime:\r\n                return _IDt.getO(obj);\r\n            case EstrInputType.File:\r\n                return _IFile.getO(obj);\r\n            case EstrInputType.Html:\r\n                return _IHtml.getO(obj);\r\n            case EstrInputType.ReadOnly:\r\n                return _IRead.getO(obj);\r\n            case EstrInputType.Link:\r\n                return _ILink.getO(obj);\r\n            default:\r\n                //text, textarea\r\n                return obj.val() as string;\r\n        }\r\n    }\r\n\r\n    static set(fid: string, value: any, box: JQuery): void {\r\n        _Input.setO(_Obj.get(fid, box), value, box);\r\n    }\r\n\r\n    /**\r\n     * set input value by object\r\n     * param obj {object}\r\n     * param value {object}\r\n     * param box {object} for radio\r\n     * param type {string} optional, data-type\r\n     */\r\n    static setO(obj: JQuery, value: any, box: JQuery, type?: string): void {\r\n        if (obj == null || !_Var.isPureData(value))\r\n            return;\r\n\r\n        type = type || _Input.getType(obj);\r\n        switch (type) {\r\n            case EstrInputType.Text:\r\n                _IText.setO(obj, value);\r\n                break;\r\n            case EstrInputType.Check:\r\n                _ICheck.setO(obj, value);\r\n                break;\r\n            case EstrInputType.Radio:\r\n                //此時 obj 為 array\r\n                value = value || '0';\r\n                _IRadio.setO(obj, value, box);\r\n                break;\r\n            case EstrInputType.Select:\r\n                _ISelect.setO(obj, value);\r\n                break;\r\n            case EstrInputType.Date:\r\n                return _IDate.setO(obj, value);\r\n            case EstrInputType.DateTime:\r\n                return _IDt.setO(obj, value);\r\n            case EstrInputType.File:\r\n                _IFile.setO(obj, value);\r\n                break;\r\n            case EstrInputType.Textarea:\r\n                _ITextarea.setO(obj, value);\r\n                break;\r\n            case EstrInputType.Html:\r\n                _IHtml.setO(obj, value);\r\n                break;\r\n            case EstrInputType.Read:\r\n                const format = obj.data('format') as string;\r\n                if (_Str.notEmpty(format) && _Str.notEmpty(_BR[format]))\r\n                    value = _Date.dtsToFormat(value, _BR[format]);\r\n                _IRead.setO(obj, value);\r\n                break;\r\n            case EstrInputType.Link:\r\n                return _ILink.setO(obj, value);\r\n            default:\r\n                //text\r\n                obj.val(value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get input field type\r\n     */\r\n    static getType(obj: JQuery): string {\r\n        return obj.data('type') as string;\r\n    }\r\n\r\n    /**\r\n     * get object\r\n     * param fid {string}\r\n     * param box {object}\r\n     * param ftype {string} optional\r\n     * return object\r\n     */\r\n    static getObj(fid: string, box: JQuery, ftype?: string): JQuery {\r\n        ftype = ftype || _Input.getType(_Obj.get(fid, box));\r\n        return (ftype === EstrInputType.Radio) ? _IRadio.getObj(fid, box) : _Obj.get(fid, box);\r\n    }\r\n\r\n    /**\r\n     * get data-fid of object\r\n     * param obj {object}\r\n     * return fid string\r\n     */\r\n    static getFid(obj: JQuery): string {\r\n        return obj.data('fid') as string;\r\n    }\r\n\r\n    /**\r\n     * get data-fid string, ex: [data-fid=XXX]\r\n     * param fid {stirng} optional, if empty means find all inputs with data-fid\r\n     * return {string} filter\r\n     */\r\n    static fidFilter(fid?: string): string {\r\n        return _Str.isEmpty(fid)\r\n            ? '[data-fid]'\r\n            : `[data-fid='${fid}']`;\r\n    }\r\n\r\n\r\n    //#region remark code\r\n    /**\r\n     * ??顯示欄位的錯誤訊息, fid欄位會直接加上 error className\r\n     * 先找 error label, 再找上面相鄰的 object, 然後加入 x-error\r\n     * param fid {string} 欄位id\r\n     * param msg {string} 顯示訊息, 可為空白, 此時會顯示錯誤外框, 但是無錯誤訊息\r\n     * param box {object} (optional) box(jquery object), for 多筆畫面\r\n     * return: void\r\n    showError: function (obj, fid, msg, box) {\r\n        //輸入欄位增加 error class\r\n        obj.addClass(_fun.errCls);\r\n\r\n        //label欄位設定文字內容\r\n        var filter = '[data-id2=' + fid + _fun.errTail + ']';\r\n        //先找parent下\r\n        //var label = _obj.getF(filter, box);\r\n        var parent = obj.parent();\r\n        var label = parent.find(filter);\r\n        if (label.length == 0)\r\n            label = parent.next();\r\n        //obj.addClass(_fun.errCls);\r\n        label.text(msg);\r\n        _obj.show(label);\r\n        //_form.scrollTopError();\r\n    },\r\n     */\r\n\r\n    /**\r\n     * get old value (get data-old value)\r\n    getOld: function (obj) {\r\n        return obj.data('old');\r\n    },\r\n     */\r\n\r\n    /**\r\n     * 檢查欄位是否binding event\r\n    isBound: function(filter) {\r\n        var field = $(filter);\r\n        return (field.find(':not(.bound)').length == 0);\r\n    },\r\n     */\r\n\r\n    /**\r\n     * set edit status\r\n    setEdit: function (fid, status, box) {\r\n        //文字欄位\r\n        _obj.get(fid, box).attr('readonly', !status);\r\n    },\r\n    setEdits: function (fids, status, box) {\r\n        //文字欄位\r\n        for (var i = 0; i < fids.length; i++) \r\n            _obj.get(fids[i], box).attr('readonly', !status);\r\n    },\r\n\r\n    //檢查欄位是否存在, true/fales\r\n    exist: function (fid, box) {\r\n        return _input.existF('#' + fid, box);\r\n    },\r\n\r\n    existF: function (filter, box) {\r\n        var field = (box === undefined) ? $(filter) : box.find(filter);\r\n        return (field.length > 0);\r\n    },\r\n     */\r\n\r\n    /**\r\n     * select option on change event.\r\n    _onChangeSelect: function (me) {\r\n        //var tt = 'tt';\r\n        var className = 'selected';\r\n        var len = me.options.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var opt = me.options[i];\r\n            var opt2 = $(opt);\r\n\r\n            // check if selected\r\n            if (opt.selected) {\r\n                if (!opt2.hasClass(className))\r\n                    opt2.addClass(className);\r\n            } else {\r\n                if (opt2.hasClass(className))\r\n                    opt2.removeClass(className);\r\n            }\r\n        }\r\n    },\r\n     */\r\n\r\n    /**\r\n     * set select field value\r\n     * params\r\n     * data : address\r\n     * return : true/false\r\n    setSelect: function (fid, value) {\r\n        $('#' + fid).selectpicker('val', value);\r\n    },\r\n\r\n    setValue: function (fid, value) {\r\n        var field = $('#' + fid);\r\n        if (field.length == 0)\r\n            console.log('no field: ' + fid);\r\n        else\r\n            field.val(value);\r\n    },\r\n     */\r\n\r\n    /**\r\n     * 寫入 multiple select value (使用 bootstrap-select)\r\n     * 多選欄位值為陣列, 必須轉成字串\r\n     * param :\r\n     * fid: 欄位id\r\n     * separator: 分隔符號\r\n    writeMultiValue: function (fid, separator) {\r\n        var value = $('#' + fid + '_tmp').val();\r\n        if (value)\r\n            value = value.join(separator);\r\n        $('#' + fid).val(value);\r\n    },\r\n\r\n    //把json塞進label的text(相同欄位名稱)\r\n    setLabel: function (fid, value) {\r\n            $('#'+fid).text(value); \r\n    },\r\n     */\r\n\r\n    /* ??\r\n     移除欄位的 error class\r\n     para:\r\n       fid: 欄位id\r\n       box: (optional) box(jquery object), for 多筆畫面\r\n     return: void\r\n    clearFieldError: function (fid, box) {\r\n        var labelFid = '#' + fid + _fun.errTail;\r\n        var error = (box === undefined) ? $(labelFid) : box.find(labelFid);\r\n        var field = error.prev();\r\n        var id = field.attr('id');\r\n        //\r\n        field.removeClass(_fun.errCls)\r\n    },\r\n    */\r\n\r\n    /* 移除所有 error class\r\n     return: void\r\n    clearFieldsError: function () {\r\n        //尋找所有 err_ 開頭的 dom\r\n        $('.' + _fun.errCls).removeClass(_fun.errCls);\r\n        //$('.' + _fun.errBoxCls).removeClass(_fun.errBoxCls);\r\n    },\r\n    */\r\n    //#endregion\r\n\r\n} //class"]}