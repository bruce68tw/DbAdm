{"version":3,"file":"_Date.js","sourceRoot":"","sources":["../../../services/_Date.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport _Str from \"./_Str\";\r\nimport _Fun from \"./_Fun\";\r\n//import _BR from \"./_BR\";\r\nimport _IDate from \"./_IDate\";\r\nimport _ISelect from \"./_ISelect\";\r\n\r\n/**\r\n * 日期/時間格式包含: 資料庫、c#/js(兩者設定為一致)、UI\r\n * for date related\r\n * short name:\r\n * 1.date: moment date\r\n * 2.dt: moment datetime\r\n * 3.ds: date string\r\n * 4.dts: datetime string\r\n */ \r\nexport default class _Date {\r\n\r\n    /**\r\n      ?? 傳回起迄日期(json) for 日期欄位查詢\r\n      param {string} start 開始日期欄位id\r\n      param {string} end 結束日期欄位id\r\n      params {object} box box object\r\n      return {json} 包含start, end欄位\r\n     */\r\n    static getStartEnd(start: string, end: string, box: any): any {\r\n        //const start2 = box.find\r\n    }\r\n\r\n    /**\r\n     * get today date string in UI format\r\n     */\r\n    static uiToday(): string {\r\n        const mm = moment();\r\n        return _Date.mmToUiDate(mm);\r\n    }\r\n\r\n    /**\r\n     * get this week monday in UI format\r\n     */\r\n    static uiWeekMonday(): string {\r\n        const mm = moment().day(1)\r\n        return _Date.mmToUiDate(mm);\r\n    }\r\n\r\n    static uiWeekFriday(): string {\r\n        const mm = moment().day(5)\r\n        return _Date.mmToUiDate(mm);\r\n    }\r\n\r\n    /**\r\n     * get this month first day\r\n     */\r\n    static uiMonthDay1(): string {\r\n        const mm = moment().startOf('month');\r\n        return _Date.mmToUiDate(mm);\r\n    }\r\n\r\n    /**\r\n     * get this month last day\r\n     */\r\n    static uiMonthDayLast(): string {\r\n        const mm = moment().endOf('month');\r\n        return _Date.mmToUiDate(mm);\r\n    }\r\n\r\n    /**\r\n     * get current year, ex: 2021\r\n     */ \r\n    static nowYear(): number {\r\n        return (new Date()).getFullYear();\r\n    }\r\n\r\n    static mmToUiDate(mm: moment.Moment): string {\r\n        return mm.format(_BR.MmUiDateFmt);\r\n    }\r\n\r\n    static mmToUiDt(mm: moment.Moment): string {\r\n        return mm.format(_BR.MmUiDtFmt);\r\n    }\r\n\r\n    static mmToUiDt2(mm: moment.Moment): string {\r\n        return mm.format(_BR.MmUiDt2Fmt);\r\n    }\r\n\r\n    static dtsToUiDate(dts: string): string {\r\n        return _Str.isEmpty(dts)\r\n            ? ''\r\n            : _Date.mmToUiDate(moment(dts, _Fun.MmDtFmt));\r\n    }\r\n\r\n    /**\r\n     * js date string to ui date string\r\n     * param ds {string} js date string\r\n     * return {string} ui date string\r\n     */ \r\n    static dtsToDateFormat(ds: string): string {\r\n        return _Str.isEmpty(ds)\r\n            ? ''\r\n            : _Date.mmToUiDate(moment(ds, _Fun.MmDateFmt));\r\n    }\r\n\r\n    static dtsToUiDt(dts: string): string {\r\n        return _Str.isEmpty(dts)\r\n            ? ''\r\n            : _Date.mmToUiDt(moment(dts, _Fun.MmDtFmt));\r\n    }\r\n\r\n    /**\r\n     * js datetime string to ui datetime2 string(no second)\r\n     * param dts {string} js datetime string\r\n     * return {string} ui datetime2 string(no second)\r\n     */\r\n    static dtsToUiDt2(dts: string): string {\r\n        return _Str.isEmpty(dts)\r\n            ? ''\r\n            : _Date.mmToUiDt2(moment(dts, _Fun.MmDtFmt));\r\n    }\r\n\r\n    static dtsToFormat(dts: string, format: string): string {\r\n        return (_Str.isEmpty(dts))\r\n            ? ''\r\n            : moment(dts, _Fun.MmDtFmt).format(format);\r\n    }\r\n\r\n    //get datetime value for compare\r\n    static dtsToValue(dts: string): number {\r\n        return (_Str.isEmpty(dts))\r\n            ? 0\r\n            : moment(dts, _Fun.MmDtFmt).valueOf();\r\n    }\r\n\r\n    static dtsToMoment(dts: string): moment.Moment | null {\r\n        return (_Str.isEmpty(dts))\r\n            ? null\r\n            : moment(dts, _Fun.MmDtFmt);\r\n    }\r\n\r\n    /**\r\n     * ui date string to js date string\r\n     * param ds {string} ui date string\r\n     * return {string} js date string\r\n     */\r\n    static uiToMmDate(ds: string): string {\r\n        const date = _Str.isEmpty(ds)\r\n            ? '' : moment(ds, _BR.MmUiDateFmt).format(_Fun.MmDateFmt);\r\n        return date;\r\n    }\r\n\r\n    /**\r\n     * timeStamp to ui datetime string\r\n     * param ts {string} timeStamp value, unit is second, convert to mini second\r\n     * return {string}\r\n     */\r\n    static tsToUiDt(ts: string): string {\r\n        return (ts == '')\r\n            ? ''\r\n            : moment(parseInt(ts) * 1000).format(_BR.MmUiDtFmt);\r\n    }\r\n\r\n    /**\r\n     * get hour string from datetime string\r\n     * param dts {string} datetime string\r\n     * return {string}\r\n     */\r\n    static getHourStr(dts: string): string {\r\n        // implementation missing in original code\r\n        return '';\r\n    }\r\n\r\n    //?? get datetime string\r\n    //time為下拉欄位\r\n    static getDt(fDate: string, fTime: string, box: any): string {\r\n        const date = _IDate.get(fDate, box);\r\n        const time = _ISelect.get(fTime, box);\r\n        if (_Str.isEmpty(date))\r\n            return '';\r\n        else\r\n            return _Str.isEmpty(time) ? date! : date + ' ' + time;\r\n    }\r\n\r\n    /**\r\n     * compare two js date/datetime string\r\n     * param ds1 {string} start js date string\r\n     * param ds2 {string} end js date string\r\n     * return {bool}\r\n     */\r\n    static isBig(ds1: string, ds2: string): boolean {\r\n        return moment(ds1, _Fun.MmDtFmt).isAfter(moment(ds2, _Fun.MmDtFmt));\r\n    }\r\n\r\n    /**\r\n     * get month difference by date string\r\n     * param ds1 {string} start date string\r\n     * param ds2 {string} end date string\r\n     * return {int} \r\n     */ \r\n    static getMonthDiff(ds1: string, ds2: string): number {\r\n        // Original code has an error: it uses 'start' and 'end' which are not defined.\r\n        // Assuming it should use ds1 and ds2 as a check for empty, and then pass moment objects.\r\n        return (_Str.isEmpty(ds1) || _Str.isEmpty(ds2))\r\n            ? 0\r\n            : _Date.getMonthDiffByDate(moment(ds1, _Fun.MmDtFmt), moment(ds2, _Fun.MmDtFmt));\r\n    }\r\n\r\n    /**\r\n     * get month difference by date\r\n     * param dt1 {moment obj} start date\r\n     * param dt2 {moment obj} end date\r\n     * return {int} \r\n     */ \r\n    static getMonthDiffByDate(dt1: moment.Moment, dt2: moment.Moment): number {\r\n        // Note: moment().getFullYear() and moment().getMonth() are not standard moment methods.\r\n        // Assuming the intent was to use the underlying Date object or moment's API methods like year() and month().\r\n        // Based on the original JS code structure, it likely relies on moment's underlying implementation allowing this or expects moment-like objects.\r\n        // Using standard Moment methods here for better type safety and clarity, assuming moment.js is used.\r\n        return (dt2.year() - dt1.year()) * 12\r\n            + dt2.month() - dt1.month() + 1;\r\n    }\r\n\r\n    /**\r\n     * js date string add year\r\n     * jsDateAddYear -> dsAddYear\r\n     * param ds {string} js date string\r\n     * param year {int} year to add\r\n     * return {string} new js date string\r\n     */ \r\n    static dsAddYear(ds: string, year: number): string {\r\n        //return (parseInt(date.substring(0, 4)) + year) + date.substring(4);\r\n        return moment(ds, _Fun.MmDtFmt).add(year, 'y').format(_Fun.MmDtFmt);\r\n    }\r\n}"]}