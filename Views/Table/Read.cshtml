@inject IHtmlLocalizer<DbAdm.R0> R

<script nonce="@_Fun.Nonce">
    $(function () {
        _me.init();
    });

    var _me = {
        init: function () {
            //datatable config
            var config = {
                columns: [
                    { data: '_F1' },
                    { data: 'ProjectCode', orderable: true },
                    { data: 'DbName' },
                    { data: 'Code', orderable: true },
                    { data: 'Name', orderable: true },
                    { data: 'CreatorName' },
                    { data: 'TranLog' },
                    { data: '_Fun' },
                    { data: 'Status', orderable: true },
                ],
                columnDefs: [
                    { targets: [0], render: function (data, type, full, meta) {
                        return _me.crudR.dtCheck0(full.Id);
                    }},
                    { targets: [6], render: function (data, type, full, meta) {
                        return _me.crudR.dtYesEmpty(data);
                    }},
                    { targets: [7], render: function (data, type, full, meta) {
                        return _me.crudR.dtCrudFun(full.Id, full.Name, true, true, true);
                    }},
                    { targets: [8], render: function (data, type, full, meta) {
                        return _me.crudR.dtStatusName(data);
                    }},
                ],
            };

            //init crud
            _me.mCol = new EditMany('Id', 'tbodyCol', 'tplCol', 'tr');
            new CrudR(config, [null, _me.mCol]);
        },

        //generate Word document
        onGenWord: function () {
            var values = _icheck.getCheckeds(_me.crudR.divRead);
            if (values.length > 0)
                window.location = 'GenWord?keys=' + values.join(',');
            else
                _tool.msg(R.selectRow);
        },

    }; //class
</script>

@await Component.InvokeAsync("XgProgPath", new { names = new string[] { R["MenuTable"].Value } })
<div class="x-prog">
    <!-- read form-->
    <div id="divRead">
        <!-- condition -->
        <form id='formRead' class='x-form mb-0'>
            <div class="row">
                @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = R["Project"].Value, Fid = "ProjectId", Rows = ViewBag.Projects, InRow = true })
                @await Component.InvokeAsync("XgFindTbar", new XgFindTbarDto { HasReset = true, HasFind2 = true })
            </div>
            @await Component.InvokeAsync("XiText", new XiTextDto { Title = R["Table"].Value, Fid = "Code", MaxLen = 30 })
        </form>
        <form id='formRead2' class='x-form'>
            @await Component.InvokeAsync("XiText", new XiTextDto { Title = R["TableName"].Value, Fid = "Name", MaxLen = 30 })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = R["TranLog"].Value, Fid = "TranLog", Rows = ViewBag.YesNos })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = R["Status"].Value, Fid = "Status", Rows = ViewBag.Statuses })
        </form>

        <div class='x-btns-box mt-1'>
            @await Component.InvokeAsync("XgCreate")
            @await Component.InvokeAsync("XgExport")
            <button type="button" class="btn x-btn-gray" data-onclick="_me.onGenWord">@R["GenDocu"]</button>
        </div>

        <!-- result list -->
        <table id="tableRead" class="table table-bordered x-table" cellspacing="0">
            <thead>
                <tr>
                    <th width="60px">@R["Select"]</th>
                    <th>@R["Project"]</th>
                    <th>@R["DbName"]</th>
                    <th>@R["Table"]</th>
                    <th>@R["TableName"]</th>
                    <th>@R["Creator"]</th>
                    <th width='90px'>@R["TranLog"]</th>
                    <th width='90px'>@R["Crud"]</th>
                    <th width='110px'>@R["Status"]</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <!-- edit form-->
    <div id="divEdit" class="d-none">
        <partial name="Edit" />
    </div>
</div>
