<style nonce="@_Fun.Nonce">
    .chart-box {
        width: 600px;
        height: 450px;
        margin: 20px 0 0 150px;
    }
</style>

<script nonce="@_Fun.Nonce">
    $(function () {
        _me.init();
    });

    var _me = {
        init: function () {
            _me.rform = $('#formRead');
        },

        //on select bao item
        onFind: async function () {
            var data = _json.toStr(_form.toRow(_me.rform));
            await _ajax.getJsonA('GetData', { json: data }, function (row) {
                //前端需要筆數, 前端處理則後端sql比較單純
                var rowLen = row['Rows'];     //筆數
                var config = { title: `滿意度問卷統計-共 ${rowLen} 筆資料` };
                config.labels = ['Q1', 'Q2', 'Q3', 'Q4'];           //後端固定的資料欄位
                config.values = [];
                var rows = _json.toChartRows(row, config.labels);   //x軸轉y軸(Id,Num欄位)
                //計算value, rows.length=config.labels.length
                for (var i=0; i<rows.length; i++){
                    config.values[i] = parseFloat((rows[i]['Num'] / rowLen).toFixed(1));  //取一位小數
                }
                _chart.hbar('chart', config);

                /*
// Bar chart
new Chart(document.getElementById("chart"), {
    type: 'bar',
    data: {
      labels: ["Africa", "Asia", "Europe", "Latin America", "North America"],
      datasets: [
        {
          label: "Population (millions)",
          backgroundColor: ["#3e95cd", "#8e5ea2","#3cba9f","#e8c3b9","#c45850"],
          data: [2478,5267,734,784,433]
        }
      ]
    },
    options: {
      legend: { display: false },
      title: {
        display: true,
        text: 'Predicted world population (millions) in 2050'
      }
    }
});
*/

            });
        },

        //on change projectId
        onChgProject: function () {
            _iselect.changeParent('_ProjectId', 'ProgId', '', 'GetPrjProgs', false);
        },

    }; //class
</script>

<vc:xg-prog-path />
<div class="xp-prog">
    <div id="divRead">
        <form id='formRead' class='x-form'>
            <div class="row">
                @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "專案", Fid = "_ProjectId", Rows = ViewBag.Projects, InRow = true, FnOnChange = "_me.onChgProject" })
                <span class='col-md-3 x-find-tbar'>
                    <button type='button' class='btn btn-primary' data-onclick='_me.onFind'>查詢<i class='ico-find'></i></button>
                </span>
            </div>
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "專案功能", Fid = "ProgId", Rows = ViewBag.PrjProgs })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "處理人員", Fid = "OwnerId", Rows = ViewBag.Users })
            <div class="row">
                <div class="col-md-2 x-label">填寫時間</div>
                <div class="col-md-10 x-input">
                    @await Component.InvokeAsync("XiDate", new XiDateDto { Fid = "Created", InRow = true })
                    <span>～</span>
                    @await Component.InvokeAsync("XiDate", new XiDateDto { Fid = "Created2", InRow = true })
                </div>
            </div>
        </form>

        <div class="chart-box">
            <canvas id="chart"></canvas>
        </div>
    </div>
</div>