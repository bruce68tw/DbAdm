@{
    var cols = "4,6";
    List<IdStrDto> colsTypes = 
    [
        new(){ Id = "A", Str = "自動" },
        new(){ Id = "2,3", Str = "2,3" },
        new(){ Id = "4,6", Str = "4,6" },
        new(){ Id = "2,2", Str = "2,2" },
        new(){ Id = "1,2", Str = "1,2" },
    ];
    List<IdStrDto> rowTypes =
    [
        new(){ Id = "6,6", Str = "2欄" },
        new(){ Id = "4,4,4", Str = "3欄" },
        new(){ Id = "4,8", Str = "4,8" },
        new(){ Id = "8,4", Str = "8,4" },
        //new(){ Id = "5,7", Str = "5,7" },
        //new(){ Id = "7,5", Str = "7,5" },
    ];
}

<style nonce="@_Fun.Nonce" >
    /* UiMany */
    #divEdit {
        display: flex;
        flex-direction: row;
    }
    .xu-eform-tail {
        flex-grow: 1;
    }

    .xu-ui-area {
        flex-grow: 1;
        border: 1px solid #ddd !important;
    }

    .xu-input {
        margin-bottom: 5px;
    }

    /* UiView */
    .xu-drop-line {
        height: 0; /* 不佔高度 */
        border-top: 2px solid #007bff; /* 改成實線/虛線都可以 */
        margin: 4px 0; /* 與上下元素留一點距離 */
    }

    .xu-item {
        cursor: grab;
        border: 1px solid transparent;
        border-radius: 4px;
        transition: border-color 0.2s;
    }
        /* item hover 顯示 */
        .xu-item:hover {
            border-color: #888;
        }

    /*
    .xu-drag-box {
        height: 30px;
        width: 150px;
        position: absolute;
        pointer-events: none;
        border: 1px solid #007bff;
        background: rgba(0,123,255,0.1);
        padding: 5px 10px;
        border-radius: 4px;
        z-index: 2000;
    }
    */

    /* row 格式加框線、高度 */
    .xu-row-col {
        min-height: 50px;
        border: 1px solid #007bff;
    }

    .xu-item-modal {
        margin-top: 25vh !important; /* 視窗高度的 1/4 */
    }
</style>

<script nonce="@_Fun.Nonce" src="~/js/view/UiView.js"></script>
<script nonce="@_Fun.Nonce" src="~/js/view/UiMany.js"></script>
<script nonce="@_Fun.Nonce">
    $(function () {
        _me.init();

        //註刪button dragstart事件
        _me.divEdit.on(EstrMouse.DragStart, '.xu-btn', function(e) {
            let itemType = $(e.target).data('type');
            _me.uiMany.startDragBtn(true, itemType);
        }).on(EstrMouse.DragEnd, function (e) {
            //不會觸發工作區的 dragEnd, 這裡必須寫
            _me.uiMany.onDragEnd(e);
        });
    });

    var _me = {
        init: function () {
            var config = {
                columns: [
                    { data: 'ProjectName', orderable: true },
                    { data: 'Code', orderable: true },
                    { data: 'Name', orderable: true },
                    { data: '_Fun' },
                    { data: '_Crud' },
                ],
                columnDefs: [
                    { targets: [3], render: function (data, type, full, meta) {
                        return '';
                    }},
                    { targets: [4], render: function (data, type, full, meta) {
                        return _me.crudR.dtCrudFun(full.Id, full.Name, true, true, true);
                    }},
                ],
            };

            //instance variables
            _me.modalImport = $('#modalImport');
            _me.modalExport = $('#modalExport');

            //save, back button
            //_me.divEditTbar = $('#divEditTbar');

            //initial edit one/many, rowsBox(參數2) 使用 eform
            _me.mItem = new EditMany('Id', 'eformItems', 'tplItem', '.xd-tr', 'Sort');
            //_me.mCol = new EditMany('Id', 'eformCols', 'tplCol', '.xd-tr', 'Sort');
            //_me.mLine = new EditMany('Id', 'eformLines', 'tplLine', '.xd-tr', 'Sort');
            new CrudR(config, [null, _me.mItem]);

            //initial flow edit form
            _me.uiMany = new UiMany('.xu-ui-area', _me.mItem);
            //_me.uiView = _me.uiMany.uiView;     //可直接控制 uiView, 不必經過 uiMany !!

            //custom function
            _me.mItem.fnLoadRows = _me.mItem_loadRows;
            _me.mItem.fnGetUpdJson = _me.mItem_getUpdJson;
            _me.mItem.fnValid = _me.mItem_valid;
            //
            /*
            _me.mCol.fnLoadRows = _me.mCol_loadRows;
            _me.mCol.fnGetUpdJson = _me.mCol_getUpdJson;
            _me.mCol.fnValid = _me.mCol_valid;
            */

            //for flow test
            //_me.divFlowTest = $('#divFlowTest');
            //_me.nowFlowCode = '';
        },

        onOpenImport: function () {
            _modal.showO(_me.modalImport);
        },

        //匯入json(巢狀格式)
        async onImport: function () {
            var value = _itext.get('Import', _me.modalImport).trim();
            if (_str.isEmpty(value)) {
                _tool.msg('匯入資料不可空白。');
                return;
            }

            //加入大括號 for json 格式
            if (value.substring(0, 1) != '{')
                value = '{' + value + '}';

            //string to json
            var jsons = _str.toJson(value);
            if (v == null) {
                _tool.msg('匯入資料必須是Json格式。');
                return;
            }

            await this.uiMany.loadJsons(jsons);
            _modal.hideO(_me.modalImport);
        },

        //generate json
        onGenJson: function () {
            var values = _icheck.getCheckeds(_me.crudR.divRead);
            if (values.length > 0)
                window.location = 'GenJson?key=' + values.join(',');
            else
                _tool.msg('請先選取資料。');
        },

        //auto called
        fnAfterSwap: function (toRead) {
            _obj.showByStatus($('.xu-tbar'), !toRead);
        },

        //auto called !!
        //reset when create
        fnAfterOpenEdit: function (fun, json) {
            var isAdd = (fun === EstrFun.Create);
            if (isAdd) {
                _me.uiMany.reset();
            }
            _me.uiMany.setEdit(isAdd || (fun === EstrFun.Update));
        },

        /**
         * auto called !!
         * jsPlumb line container must visible when rendering
         * see _me.crudE.js _updateOrViewA()
         * param {string} fun
         * param {string} key
         * returns {bool}
         */
        fnUpdateOrViewA: async function (fun, key) {
            var act = (fun == EstrFun.Update)
                ? 'GetUpdJson' : 'GetViewJson';
            return await _ajax.getJsonA(act, { key: key }, function (json) {
                //show container first
                _me.crudR.toEditMode(fun, () => {
                    _me.crudE.loadJson(json);
                    _me.crudE.setEditStatus(fun);
                    _me.crudE.afterOpen(fun, json);
                });
            });
        },

        //#region mItem/mLine custom function
        //load nodes
        mItem_loadRows: function (rows) {
            _me.uiMany.loadNodes(rows);
        },

        //getUpdJson
        mItem_getUpdJson: function (upKey) {
            return _me.mItem.getUpdJsonByRsb(upKey);
        },

        //return boolean
        mItem_valid: function () {
            return true;
        },

        /*
        mLine_loadRows: function (rows) {
            _me.uiMany.loadLines(rows);
        },

        //getUpdJson
        mLine_getUpdJson: function (upKey) {
            return _me.mLine.getUpdJsonByRsb(upKey);
        },

        //return boolean
        mLine_valid: function () {
            return true;
        },
        */
        //#endregion

        /*
        //測試流程
        onOpenTest: function (code) {
            //read old row if need
            _me.nowFlowCode = code;

            //show div
            _me.testToRead(false)
        },

        onSaveTestA: async function () {
            //check & save
            var data = {
                code: _me.nowFlowCode,
                data: _itextarea.get('Data', _me.divFlowTest),
            };
            await _ajax.getStrA('SaveTest', data, function (error) {
                if (_str.isEmpty(error)) {
                    _tool.msg('作業完成。');
                    _me.testToRead(true);
                } else {
                    _tool.msg(error);
                }
            });
        },

        //show Read form or not
        testToRead: function (toRead) {
            _me.crudR.swap(toRead, _me.divFlowTest);
        },
        */

    }; //class
</script>

<div class="row">
    <div class="col-md-4">
        <vc:xg-prog-path />
    </div>
    <div class="col-md-4 d-none pt-2 xu-tbar">
        <div class="x-btns-box x-center">
            <button type="button" class="btn btn-secondary" data-onclick="_me.onOpenImport">Json匯入畫面</button>
            <button type="button" class="btn btn-secondary" data-onclick="_me.onOpenExport">匯出畫面</button>
        </div>
    </div>
    <div class="col-md-4 d-none pt-2 xu-tbar">
        <vc:xg-save-back align="right me-3" />
    </div>
</div>

<!-- 使用 x-prog 會出現 border -->
<div class="px-2">
    <div id="divRead">
        <form id='formRead' class='x-form mb-0'>
            <div class="row">
                @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "專案", Fid = "ProjectId", Rows = ViewBag.Projects, InRow = true })
                @await Component.InvokeAsync("XgFindTbar", new XgFindTbarDto { HasReset = true })
            </div>
            @await Component.InvokeAsync("XiText", new XiTextDto { Title = "畫面代碼", Fid = "Code", MaxLen = 30 })
            @await Component.InvokeAsync("XiText", new XiTextDto { Title = "畫面名稱", Fid = "Name", MaxLen = 30 })
        </form>

        <div class='x-btns-box mt-1'>
            @await Component.InvokeAsync("XgCreate")
            <button type="button" class="btn btn-secondary" data-onclick="_me.onGenJson">產生Json</button>
        </div>

        <table id="tableRead" class="table table-bordered x-table" cellspacing="0">
            <thead>
                <tr>
                    <th>專案</th>
                    <th>畫面代碼</th>
                    <th>畫面名稱</th>
                    <th class='x-w100'>功能</th>
                    <th class='x-w100'>維護</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div id="divEdit" class="d-flex d-none vh-100">
        <!-- eform 在 uiMany 下面, 使用 z-index無效, 改用 width -->
        <form id='eform' class='x-form x-w100 me-2 vh-100'>
            <vc:xi-hide dto='new() { Fid = "Id" }' />
            <div class="xu-label">資料表</div>
            <vc:xi-text dto='new() { Fid = "Code" , MaxLen = 20, Required = true, ClsBox = "xu-input w-150" }' />
            <div class="xu-label">功能名稱</div>
            <vc:xi-text dto='new() { Fid = "Name", MaxLen = 30, Required = true, ClsBox = "xu-input w-150" }' />
            @*
            <div class="xu-label">欄位格式</div>
            <vc:xi-select dto='new() { Fid = "ColsType", Rows = colsTypes, AddEmpty = false, ClsBox = "xu-input w-150" }' />
            *@
            <div class="xu-label">欄位容器格式</div>
            <vc:xi-select dto='new() { Fid = "RowType", Rows = rowTypes, AddEmpty = false, ClsBox = "xu-input w-150" }' />

            <!-- add outer div for validate msg layout -->
            <div>
                <div class="btn-group-vertical ms-1" role="group" aria-label="button group vertical">
                    <button type="button" class="btn xu-btn" data-type="I" Title='增加輸入欄位' draggable='true'>輸入欄位</button>
                    <button type="button" class="btn xu-btn" data-type="G" Title='增加分群文字' draggable='true'>分群文字</button>
                    <button type="button" class="btn xu-btn" data-type="R" Title='增加欄位容器' draggable='true'>欄位容器</button>
                    <button type="button" class="btn xu-btn" data-type="T" Title='增加Table' draggable='true'>多筆表格</button>
                </div>
            </div>
            <div class="xu-eform-tail">
            </div>
        </form>

        <!-- UI 區域 -->
        <div class="xu-ui-area">
        </div>

        <!-- uiItems editMany -->
        <form id='eformItems' class='d-none'>
        </form>

        <!-- uiCols editMany -->
        <form id='eformCols' class='d-none'>
        </form>
    </div>
</div>


<!-- context menu for node & line, xf means flow -->
<ul class='xf-menu'>
    <li data-onclick="_me.uiMany.onMenuEdit" class="xd-edit">Edit</li>
    <li data-onclick="_me.uiMany.onMenuDelete" class="xd-delete">Delete</li>
    <li data-onclick="_me.uiMany.onMenuView" class="xd-view">View</li>
</ul>

<!-- 移動item時顯示的示意外框 
<div class="xu-drag-box d-none"></div>
-->
<!-- drop位置的線狀註記 -->
<div class="xu-drop-line d-none"></div>

<!-- uiItem template for eformItems, template不可使用 vc:格式!! -->
<script id="tplItem" type="text/template">
    <div class="xd-tr">
        @await Component.InvokeAsync("XiHide", new XiHideDto() { Fid = "Id" })
        @await Component.InvokeAsync("XiHide", new XiHideDto() { Fid = "UiId" })
        @await Component.InvokeAsync("XiHide", new XiHideDto() { Fid = "BoxId" })
        @await Component.InvokeAsync("XiHide", new XiHideDto() { Fid = "ItemType" })
        @await Component.InvokeAsync("XiHide", new XiHideDto() { Fid = "Info" })
        @await Component.InvokeAsync("XiHide", new XiHideDto() { Fid = "Sort" })
    </div>
</script>

<!-- modal: 輸入欄位 -->
<div id="modalInput" class="modal fade x-modal" role="dialog">
    <div class="modal-dialog modal-lg x-vh15">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">設定欄位內容</div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="form-horizontal x-form pt-1 pe-5">
                    <vc:xi-hide dto='new() { Fid="Id" }' />
                    <vc:xi-text dto='new() { Title="標題", Fid="Title" , MaxLen=30, Cols=cols }' />
                    <vc:xi-text dto='new() { Title="欄位Id", Fid="Fid" , MaxLen=30, Required = true, Cols=cols }' />
                    <vc:xi-select dto='new() { Title = "欄位種類", Fid = "InputType", Rows = ViewBag.InputTypes, Required = true, Cols = cols }' />
                    <vc:xi-check dto='new() { Title = "必填", Fid = "Required", Label = "是", Cols = cols }' />
                    <vc:xi-text dto='new() { Title="標題提示文字", Fid="TitleTip" , MaxLen=30, Cols=cols }' />
                    <vc:xi-text dto='new() { Title="欄位後面文字", Fid="InputNote" , MaxLen=100, Cols=cols }' />
                    <vc:xi-text dto='new() { Title = "欄位其他資訊", Fid = "ExtInfo", MaxLen = 100, Cols = cols, TitleTip = "select/radio:選項清單" }' />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消<i class='ico-delete'></i></button>
                <button type="button" class="btn btn-primary" data-onclick="_me.uiMany.onModalOk">確定<i class='ico-checked'></i></button>
            </div>
        </div>
    </div>
</div>

<!-- modal: 分群文字 -->
<div id="modalGroup" class="modal fade x-modal" role="dialog">
    <div class="modal-dialog x-vh20">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">設定分群文字</div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="form-horizontal x-form pt-1 pe-5">
                    <vc:xi-hide dto='new() { Fid = "Id" }' />
                    <vc:xi-text dto='new() { Title = "標題", Fid = "Title", MaxLen = 30, Cols = cols }' />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消<i class='ico-delete'></i></button>
                <button type="button" class="btn btn-primary" data-onclick="_me.uiMany.onModalOk">確定<i class='ico-checked'></i></button>
            </div>
        </div>
    </div>
</div>

<!-- modal: 分群文字 -->
<div id="modalTable" class="modal fade x-modal" role="dialog">
    <div class="modal-dialog modal-lg x-vh15">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">設定多筆表格</div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="form-horizontal x-form pt-1 pe-5">
                    <vc:xi-hide dto='new() { Fid = "Id" }' />
                    <vc:xi-text dto='new() { Title = "資料表", Fid = "Table", MaxLen = 30, Cols = "4,4", Required = true }' />
                    <vc:xi-text dto='new() { Title = "資料名稱", Fid = "Title", MaxLen = 30, Cols = "4,4", Required = true }' />
                    <vc:xi-text dto='new() { Title = "標題欄位", Fid = "Heads", MaxLen = 100, Cols = "4,8", Required = true, TitleTip = "逗號分隔" }' />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消<i class='ico-delete'></i></button>
                <button type="button" class="btn btn-primary" data-onclick="_me.uiMany.onModalOk">確定<i class='ico-checked'></i></button>
            </div>
        </div>
    </div>
</div>

<!-- modal: 匯入, 點擊外部不關閉 -->
<div id="modalImport" class="modal fade x-modal" data-bs-backdrop="static" role="dialog">
    <div class="modal-dialog modal-lg x-vh5">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Json匯入畫面</div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="form-horizontal x-form pt-1 pe-5">
                    <vc:xi-hide dto='new() { Fid = "Id" }' />
                    <vc:xi-textarea dto='new() { Title = "Json資料", Fid = "Import", RowsCount = 25, Cols = "2,10", Required = true }' />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消<i class='ico-delete'></i></button>
                <button type="button" class="btn btn-primary" data-onclick="_me.uiMany.onImport">確定<i class='ico-checked'></i></button>
            </div>
        </div>
    </div>
</div>
