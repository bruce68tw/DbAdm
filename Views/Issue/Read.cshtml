<script nonce="@_Fun.Nonce">
    $(function () {
        _me.init();
    });

    var _me = {
        issueId: '',        //要追踪或取消的Issue.Id
        hasWatchId: '',     //是否有IssueWatch.Id

        init: function () {
            //datatable config
            var config = {
                //showWork: true,     //顯示作業中
                pageLength: 50,
                columns: [
                    { data: 'ProjectName', orderable: true },
                    { data: 'ProgName', orderable: true },
                    { data: 'IssueTypeName', orderable: true },
                    { data: 'WorkDate', orderable: true },
                    { data: 'WorkHours' },
                    { data: 'Id' },
                    { data: 'Title' },
                    { data: 'IsFinish' },       //7:Issue是否結案
                    { data: 'FromMgrName' },
                    { data: 'OwnerName' },
                    { data: 'SendTimes' },      //9:寄送問卷次數
                    { data: '_Survey' },        //10.空白(沒有問卷Id && 沒有回報人)/已填問卷(有問卷Id)/寄送問卷(有回報人)
                    { data: '_fun' },
                ],
                columnDefs: [
                    { targets: [7], render: function (data, type, full, meta) {
                        return _me.crudR.dtYesEmpty(data);
                    }},
                    { targets: [11], render: function (data, type, full, meta) {
                        return _str.notEmpty(full.SurveyId) ? '是' :
                            (full.IsFinish == 1 && _str.notEmpty(full.RptUser) && (full.OwnerId == _fun.userId || _fun.userId=='Bruce'))
                                ? `<button type='button' class='btn btn-secondary' data-onclick='_me.onSurvey' data-args='${full.Id}'>寄問卷</button>`
                                : '';
                    }},
                    { targets: [12], render: function (data, type, full, meta) {
                        return _me.crudR.dtCrudFun(full.Id, full.Name, true, true, true);
                    }},
                ],
            };

            //initial
            _me.mIssueFile = new EditMany('Id', 'tbodyIssueFile', 'tplIssueFile', 'tr');
            _me.mIssueRelat = new EditMany('Id', 'tbodyIssueRelat', 'tplIssueRelat', 'tr');
            new CrudR(config, [null, _me.mIssueFile, _me.mIssueRelat]);

        },

        fnAfterFind: function (result) {
            $('#SumHours').text(result.SumHours || 0);
        },

        //開啟編輯畫面時自動觸發
        //如果是主管交辦, 則標題、交辦主管設定唯讀
        fnAfterOpenEdit: function (fun, json) {
            const FromMgr = 'FromMgr';
            var isFunU = (fun == FunEstr.Update);
            var eform = _me.eform0;

            if (isFunU || fun == FunEstr.View) {
                //設定專案功能欄位
                _me.onChgProject(1, json.ProgId);

                //設定追踪按鈕
                _me.issueId = json.Id;
                _me.hasWatchId = _str.notEmpty(json.WatchId);
                _me.setWatchBtn(true);

                //set edit status

                if (isFunU){
                    var hasFromMsg = _str.notEmpty(_iselect.get(FromMgr, eform));
                    _itext.setEdit('Title', !hasFromMsg, eform);
                    _iselect.setEdit(FromMgr, !hasFromMsg, eform);
                }

                //設定延續工作按鈕的狀態
                _me.setKeepBtn(json.OwnerId == _fun.userId);
            } else {
                //新增
                _iselect.set('OwnerId', _fun.userId, eform);       //處理人員預設自己
                _idate.set('WorkDate', _date.uiToday(), eform);    //工作日期預設今天

                //set edit status
                _itext.setEdit('Title', true, eform);
                _iselect.setEdit(FromMgr, true, eform);

                _me.setWatchBtn(false);
                _me.setKeepBtn(false);
            }
        },

        //寄問卷
        onSurvey: function (issueId) {
            _tool.ans('是否確定寄送問卷?', async () => {
                await _ajax.getStrA('SendSurvey', { issueId: issueId }, function (str) {
                    var ok = (str == '1');
                    _tool.msg(ok ? '成功寄送問卷。' : '無法寄送問卷 !!');
                    if (ok) {
                        _me.crudR.dt.reload();
                    }
                });
            });
        },

        //設定延續工作按鈕的狀態
        setKeepBtn: function (isShow) {
            var btn = _me.crudE.divEdit.find('#btnKeepIssue');
            if (isShow)
                _me.showBtn(btn);
            else
                _obj.hide(btn);
        },

        //show & enabled button
        showBtn: function (btn) {
            _obj.show(btn);
            _btn.setEditO(btn, true);
        },

        //設定追踪按鈕的狀態
        setWatchBtn: function (isShow) {
            var box = _me.crudE.divEdit;
            var btnAdd = box.find('#btnAddWatch');
            var btnDel = box.find('#btnDeleteWatch');
            if (!isShow){
                _obj.hide(btnAdd);
                _obj.hide(btnDel);
            } else if (_me.hasWatchId){
                _obj.hide(btnAdd);
                _me.showBtn(btnDel);
            } else {
                _me.showBtn(btnAdd);
                _obj.hide(btnDel);
            }
        },

        //on change projectId
        //此時isEdit為字串, 因為 EventArgs 無法傳bool
        onChgProject: function (isEdit, progId) {
            _iselect.changeParent('_ProjectId', 'ProgId', progId, 'GetPrjProgs', (isEdit == 1));
        },

        //onclick viewFile, called by XiFile component
        onViewFile: function (table, fid) {
            if (fid == 'FileName')
                _me.mIssueFile.viewFile(table, fid, _fun.getMe());
        },

        onMyToday: function () {
            var today = _date.uiToday();
            var box = _me.crudR.rform;
            _me.crudR.onResetFind();   //reset
            _iselect.set('OwnerId', _fun.userId, box);
            _idate.set('WorkDate', today, box);
            _idate.set('WorkDate2', today, box);
            _me.crudR.onFind();
        },

        onMyWeek: function () {
            var box = _me.crudR.rform;
            _me.crudR.onResetFind();   //reset
            _iselect.set('OwnerId', _fun.userId, box);
            _idate.set('WorkDate', _date.uiWeekMonday(), box);
            _idate.set('WorkDate2', _date.uiWeekFriday(), box);
            _me.crudR.onFind();
        },

        //我的未結案
        onMyNotFinish: function () {
            var box = _me.crudR.rform;
            _me.crudR.onResetFind();   //reset
            _iselect.set('OwnerId', _fun.userId, box);
            _iselect.set('IsFinish', '0', box);
            _me.crudR.onFind();
        },
        
        //我的追踪
        onMyWatch: function () {
            var box = _me.crudR.rform;
            _me.crudR.onResetFind();   //reset
            _iselect.set('_IsWatch', '1', box);
            _me.crudR.onFind();
        },

        //我的交辦
        onMyAsk: function () {
            var box = _me.crudR.rform;
            _me.crudR.onResetFind();   //reset
            _iselect.set('FromMgr', _fun.userId, box);
            _me.crudR.onFind();
        },

        //加入追踪
        onAddWatch: async()=>{
            _tool.ans('是否確定加入追踪?', async()=>{
                await _ajax.getStrA('AddWatch', {issueId: _me.issueId}, function(str){
                    var ok = (str == '1');
                    _tool.msg(ok ? '成功加入追踪。' : '無法加入此筆追踪 !!');
                    if (ok){
                        _me.hasWatchId = true;
                        _me.setWatchBtn(true);
                    }                        
                });
            });
        },

        //取消追踪
        onDeleteWatch: async () => {
            _tool.ans('是否確定取消追踪?', async()=>{
                await _ajax.getStrA('DeleteWatch', { issueId: _me.issueId }, (str) => {
                    var ok = (str == '1');
                    _tool.msg(ok ? '已取消追踪。' : '無法取消此筆追踪 !!');
                    if (ok){
                        _me.hasWatchId = false;
                        _me.setWatchBtn(true);
                    }                        
                });
            });
        },

        //延續工作        
        onKeepIssue: ()=>{
            _tool.ans('是否確定延續此筆工作?', ()=>{
                //變成新增狀態
                _me.crudE.editToNew(); 

                //設定按鈕
                _me.setWatchBtn(false);
                _me.setKeepBtn(false);

                //title欄位前面加上'(續)'
                var title = _obj.get('Title', _me.crudE.eform0);
                _itext.setO(title, '(續)'+_itext.getO(title))
                _idate.set('WorkDate', _date.uiToday(), _me.crudE.eform0);    //工作日期預設今天

                //reset & 增加一筆相關工作
                _me.mIssueFile.reset();
                _me.mIssueRelat.reset();
                _me.mIssueRelat.addRow({SourceIssue: _me.issueId});
            });
        },

    }; //class
</script>

<vc:xg-prog-path />
<div class="x-prog">
    <div id="divRead">
		<form id='formRead' class='x-form'>
            <div class="row">
                @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "專案", Fid = "_ProjectId", Rows = ViewBag.Projects, InRow = true, FnOnChange = "_me.onChgProject", EventArgs = "0" })
                @await Component.InvokeAsync("XgFindTbar", new XgFindTbarDto { HasReset = true })
            </div>
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "專案功能", Fid = "ProgId", Rows = ViewBag.PrjProgs })
            @await Component.InvokeAsync("XiText", new XiTextDto { Title = "工作標題", Fid = "Title" })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "資料種類", Fid = "IssueType", Rows = ViewBag.IssueTypes })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "已結案", Fid = "IsFinish", Rows = ViewBag.YesNos })
            @* 底線欄位 _IsWatch 在後端用程式調整sql *@
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "已追踪", Fid = "_IsWatch", Rows = ViewBag.YesNos })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "有回報人", Fid = "_HasRptUser", Rows = ViewBag.YesNos })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "有收問卷", Fid = "_HasSurvey", Rows = ViewBag.YesNos })
            @await Component.InvokeAsync("XiText", new XiTextDto { Title = "回報人員", Fid = "RptUser" })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "處理人員", Fid = "OwnerId", Rows = ViewBag.Users })
            @await Component.InvokeAsync("XiSelect", new XiSelectDto { Title = "交辦主管", Fid = "FromMgr", Rows = ViewBag.Users })
            <div class="row">
                <div class="col-md-2 x-label">工作日期</div>
                <div class="col-md-10 x-input">
                    @await Component.InvokeAsync("XiDate", new XiDateDto { Fid = "WorkDate", InRow = true })
                    <span>～</span>
                    @await Component.InvokeAsync("XiDate", new XiDateDto { Fid = "WorkDate2", InRow = true })
                </div>
            </div>
            <div class="row">
                <div class="col-md-2 x-label">建檔日期</div>
                <div class="col-md-10 x-input">
                    @await Component.InvokeAsync("XiDate", new XiDateDto { Fid = "Created", InRow = true })
                    <span>～</span>
                    @await Component.InvokeAsync("XiDate", new XiDateDto { Fid = "Created2", InRow = true })
                </div>
            </div>
        </form>

		<div class='x-btns-box'>
			<vc:xg-create/>
            <button type="button" class="btn btn-secondary" data-onclick="_me.onMyToday">我的今天資料</button>
            <button type="button" class="btn btn-secondary" data-onclick="_me.onMyWeek">我的本週資料</button>
            <button type="button" class="btn btn-secondary" data-onclick="_me.onMyNotFinish">我的未結案</button>
            <button type="button" class="btn btn-secondary" data-onclick="_me.onMyWatch">我的追踪</button>
            <button type="button" class="btn btn-secondary" data-onclick="_me.onMyAsk">我的交辦</button>
            <span class="p-1">工作時數合計：<span id="SumHours"></span></span>
        </div>
        <table id="tableRead" class="table table-bordered x-table" cellspacing="0">
            <thead>
                <tr>
					<th>專案</th>
                    <th>專案功能</th>
                    <th>資料種類</th>
                    <th>工作日期</th>
                    <th>工作時數</th>
                    <th>資料Id</th>
                    <th max-width='300px'>標題</th>
                    <th min-width='65px'>已結案</th>
                    <th min-width='65px'>交辦主管</th>
                    <th min-width='65px'>處理人員</th>
                    <th min-width='65px'>寄送次數</th>
                    <th min-width='65px'>已填問卷</th>
                    <th width ='90px'>功能</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div id="divEdit" class="d-none">
        <partial name="Edit" />
    </div>
</div>