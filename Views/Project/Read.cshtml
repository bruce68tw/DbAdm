@inject IHtmlLocalizer<DbAdm.R0> R

<script type="text/javascript">
    $(function () {
        _me.init();
    });

    var _me = {
        init: function () {
            //datatable config
            var config = {
                columns: [
                    { data: 'Code' },
                    { data: 'DbName' },
                    { data: 'CreatorName' },
                    { data: '_Fun' },
                    { data: '_Crud' },
                    { data: 'Status' },
                ],
                columnDefs: [
                    { targets: [3], render: function (data, type, full, meta) {
                        var html = '' +
                            '<button type="button" class="btn btn-link" onclick="_me.onImport(\'{0}\')">{1}</button> | ' +
                            '<button type="button" class="btn btn-link" onclick="_me.onGenWord(\'{0}\')">{2}</button> | ' +
                            /*'<button type="button" class="btn btn-link" onclick="_me.onGenRelat(\'{0}\')">{3}</button> | ' +*/
                            '<button type="button" class="btn btn-link" onclick="_me.onGenLogSql(\'{0}\')">{3}</button>';
                        //return _str.format(html, full.Id, '@R["ImportDb"]', '@R["GenDocu"]', '@R["GenRelat"]', '@R["GenLogSql"]');
                        return _str.format(html, full.Id, '@R["ImportDb"]', '@R["GenDocu"]', '@R["GenLogSql"]');
                    }},
                    { targets: [4], render: function (data, type, full, meta) {
                            return _crudR.dtCrudFun(full.Id, full.Name, true, true, true);
                    }},
                    { targets: [5], render: function (data, type, full, meta) {
                        return _crudR.dtStatusName(data);
                    }},
                ],
            };

            //initial
            _crudR.init(config);
        },

        //import excel into Db
        onImport: async function (id) {
            _me.prjId = id;
            _tool.ans('@R["SureImportDb"]', async function () {
                await _ajax.getJsonA('Import', { id: _me.prjId }, function (data) {
                    _tool.msg(_BR.Done);
                });
            });
        },

        //generate docx file
        onGenWord: function (id) {
            _tool.ans('@R["SureGenDocu"]', function () {
                window.location = 'GenWord?id=' + id;
            });
        },

        //generate txt file for table relationship
        onGenRelat: function (id) {
            _tool.ans('@R["SureGenRelat"]', function () {
                window.location = 'GenRelat?id=' + id;
            });
        },

        //generate tranlog sql file
        onGenLogSql: function (id) {
            _tool.ans('@R["SureGenLogSql"]', function () {
                window.location = 'GenLogSql?id=' + id;
            });
        },

    }; //class
</script>

@await Component.InvokeAsync("XgProgPath", new string[] { R["MenuProject"].Value })
<div class="xg-prog">
    <!-- read form-->
    <div id="divRead">
        <div class='xg-btns-box'>
            @await Component.InvokeAsync("XgCreate")
        </div>
        <table id="tableRead" class="table table-bordered xg-table" cellspacing="0">
            <thead>
                <tr>
                    <th>@R["Project"]</th>
                    <th>@R["DbName"]</th>
                    <th>@R["Creator"]</th>
                    <th>@R["Fun"]</th>
                    <th width='80px'>@R["Crud"]</th>
                    <th width='65px'>@R["Status"]</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <!-- edit form -->
    <div id="divEdit" class="xg-hide">
        <partial name="Edit" />
    </div>
</div>